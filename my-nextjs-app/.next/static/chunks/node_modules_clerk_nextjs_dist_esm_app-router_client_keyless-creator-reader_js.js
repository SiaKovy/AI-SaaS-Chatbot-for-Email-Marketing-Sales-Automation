/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_clerk_nextjs_dist_esm_app-router_client_keyless-creator-reader_js"],{

/***/ "./node_modules/@clerk/nextjs/dist/esm/app-router/client/keyless-creator-reader.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/app-router/client/keyless-creator-reader.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeylessCreatorOrReader: () => (/* binding */ KeylessCreatorOrReader)\n/* harmony export */ });\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation */ \"./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _keyless_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../keyless-actions */ \"./node_modules/@clerk/nextjs/dist/esm/app-router/keyless-actions.js\");\n\n\n\n\nconst KeylessCreatorOrReader = (props) => {\n  var _a;\n  const { children } = props;\n  const segments = (0,next_navigation__WEBPACK_IMPORTED_MODULE_0__.useSelectedLayoutSegments)();\n  const isNotFoundRoute = ((_a = segments[0]) == null ? void 0 : _a.startsWith(\"/_not-found\")) || false;\n  const [state, fetchKeys] = react__WEBPACK_IMPORTED_MODULE_1___default().useActionState(_keyless_actions__WEBPACK_IMPORTED_MODULE_2__.createOrReadKeylessAction, null);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (isNotFoundRoute) {\n      return;\n    }\n    react__WEBPACK_IMPORTED_MODULE_1___default().startTransition(() => {\n      fetchKeys();\n    });\n  }, [isNotFoundRoute]);\n  if (!react__WEBPACK_IMPORTED_MODULE_1___default().isValidElement(children)) {\n    return children;\n  }\n  return react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(children, {\n    key: state == null ? void 0 : state.publishableKey,\n    publishableKey: state == null ? void 0 : state.publishableKey,\n    __internal_keyless_claimKeylessApplicationUrl: state == null ? void 0 : state.claimUrl,\n    __internal_keyless_copyInstanceKeysUrl: state == null ? void 0 : state.apiKeysUrl,\n    __internal_bypassMissingPublishableKey: true\n  });\n};\n\n//# sourceMappingURL=keyless-creator-reader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9hcHAtcm91dGVyL2NsaWVudC9rZXlsZXNzLWNyZWF0b3ItcmVhZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpQztBQUMyQjtBQUNuQjtBQUNzQjtBQUMvRDtBQUNBO0FBQ0EsVUFBVSxXQUFXO0FBQ3JCLG1CQUFtQiwwRUFBeUI7QUFDNUM7QUFDQSw2QkFBNkIsMkRBQW9CLENBQUMsdUVBQXlCO0FBQzNFLEVBQUUsZ0RBQVM7QUFDWDtBQUNBO0FBQ0E7QUFDQSxJQUFJLDREQUFxQjtBQUN6QjtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0gsT0FBTywyREFBb0I7QUFDM0I7QUFDQTtBQUNBLFNBQVMseURBQWtCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL2FwcC1yb3V0ZXIvY2xpZW50L2tleWxlc3MtY3JlYXRvci1yZWFkZXIuanM/MWI0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuLi8uLi9jaHVuay1CVVNZQTJCNC5qc1wiO1xuaW1wb3J0IHsgdXNlU2VsZWN0ZWRMYXlvdXRTZWdtZW50cyB9IGZyb20gXCJuZXh0L25hdmlnYXRpb25cIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNyZWF0ZU9yUmVhZEtleWxlc3NBY3Rpb24gfSBmcm9tIFwiLi4va2V5bGVzcy1hY3Rpb25zXCI7XG5jb25zdCBLZXlsZXNzQ3JlYXRvck9yUmVhZGVyID0gKHByb3BzKSA9PiB7XG4gIHZhciBfYTtcbiAgY29uc3QgeyBjaGlsZHJlbiB9ID0gcHJvcHM7XG4gIGNvbnN0IHNlZ21lbnRzID0gdXNlU2VsZWN0ZWRMYXlvdXRTZWdtZW50cygpO1xuICBjb25zdCBpc05vdEZvdW5kUm91dGUgPSAoKF9hID0gc2VnbWVudHNbMF0pID09IG51bGwgPyB2b2lkIDAgOiBfYS5zdGFydHNXaXRoKFwiL19ub3QtZm91bmRcIikpIHx8IGZhbHNlO1xuICBjb25zdCBbc3RhdGUsIGZldGNoS2V5c10gPSBSZWFjdC51c2VBY3Rpb25TdGF0ZShjcmVhdGVPclJlYWRLZXlsZXNzQWN0aW9uLCBudWxsKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoaXNOb3RGb3VuZFJvdXRlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFJlYWN0LnN0YXJ0VHJhbnNpdGlvbigoKSA9PiB7XG4gICAgICBmZXRjaEtleXMoKTtcbiAgICB9KTtcbiAgfSwgW2lzTm90Rm91bmRSb3V0ZV0pO1xuICBpZiAoIVJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkcmVuKSkge1xuICAgIHJldHVybiBjaGlsZHJlbjtcbiAgfVxuICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkcmVuLCB7XG4gICAga2V5OiBzdGF0ZSA9PSBudWxsID8gdm9pZCAwIDogc3RhdGUucHVibGlzaGFibGVLZXksXG4gICAgcHVibGlzaGFibGVLZXk6IHN0YXRlID09IG51bGwgPyB2b2lkIDAgOiBzdGF0ZS5wdWJsaXNoYWJsZUtleSxcbiAgICBfX2ludGVybmFsX2tleWxlc3NfY2xhaW1LZXlsZXNzQXBwbGljYXRpb25Vcmw6IHN0YXRlID09IG51bGwgPyB2b2lkIDAgOiBzdGF0ZS5jbGFpbVVybCxcbiAgICBfX2ludGVybmFsX2tleWxlc3NfY29weUluc3RhbmNlS2V5c1VybDogc3RhdGUgPT0gbnVsbCA/IHZvaWQgMCA6IHN0YXRlLmFwaUtleXNVcmwsXG4gICAgX19pbnRlcm5hbF9ieXBhc3NNaXNzaW5nUHVibGlzaGFibGVLZXk6IHRydWVcbiAgfSk7XG59O1xuZXhwb3J0IHtcbiAgS2V5bGVzc0NyZWF0b3JPclJlYWRlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtleWxlc3MtY3JlYXRvci1yZWFkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@clerk/nextjs/dist/esm/app-router/client/keyless-creator-reader.js\n"));

/***/ }),

/***/ "./node_modules/@clerk/nextjs/dist/esm/app-router/keyless-actions.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/app-router/keyless-actions.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createOrReadKeylessAction: () => (/* binding */ createOrReadKeylessAction),\n/* harmony export */   deleteKeylessAction: () => (/* binding */ deleteKeylessAction),\n/* harmony export */   syncKeylessConfigAction: () => (/* binding */ syncKeylessConfigAction)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"./node_modules/next/headers.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation */ \"./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _server_errorThrower__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../server/errorThrower */ \"./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js\");\n/* harmony import */ var _server_headers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../server/headers-utils */ \"./node_modules/@clerk/nextjs/dist/esm/server/headers-utils.js\");\n/* harmony import */ var _server_keyless__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/keyless */ \"./node_modules/@clerk/nextjs/dist/esm/server/keyless.js\");\n/* harmony import */ var _utils_feature_flags__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/feature-flags */ \"./node_modules/@clerk/nextjs/dist/esm/utils/feature-flags.js\");\n\"use server\";\n\n\n\n\n\n\nasync function syncKeylessConfigAction(args) {\n  const { claimUrl, publishableKey, secretKey, returnUrl } = args;\n  const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n  const request = new Request(\"https://placeholder.com\", { headers: await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.headers)() });\n  const keyless = (0,_server_keyless__WEBPACK_IMPORTED_MODULE_2__.getKeylessCookieValue)((name) => {\n    var _a;\n    return (_a = cookieStore.get(name)) == null ? void 0 : _a.value;\n  });\n  const pksMatch = (keyless == null ? void 0 : keyless.publishableKey) === publishableKey;\n  const sksMatch = (keyless == null ? void 0 : keyless.secretKey) === secretKey;\n  if (pksMatch && sksMatch) {\n    return;\n  }\n  cookieStore.set((0,_server_keyless__WEBPACK_IMPORTED_MODULE_2__.getKeylessCookieName)(), JSON.stringify({ claimUrl, publishableKey, secretKey }), {\n    secure: true,\n    httpOnly: true\n  });\n  if ((0,_server_headers_utils__WEBPACK_IMPORTED_MODULE_3__.detectClerkMiddleware)(request)) {\n    (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.redirect)(`/clerk-sync-keyless?returnUrl=${returnUrl}`, next_navigation__WEBPACK_IMPORTED_MODULE_1__.RedirectType.replace);\n    return;\n  }\n  return;\n}\nasync function createOrReadKeylessAction() {\n  if (!_utils_feature_flags__WEBPACK_IMPORTED_MODULE_4__.canUseKeyless) {\n    return null;\n  }\n  const result = await __webpack_require__.e(/*! import() */ \"node_modules_clerk_nextjs_dist_esm_server_keyless-node_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../server/keyless-node.js */ \"./node_modules/@clerk/nextjs/dist/esm/server/keyless-node.js\")).then((m) => m.createOrReadKeyless()).catch(() => null);\n  if (!result) {\n    _server_errorThrower__WEBPACK_IMPORTED_MODULE_5__.errorThrower.throwMissingPublishableKeyError();\n    return null;\n  }\n  const { clerkDevelopmentCache, createKeylessModeMessage } = await __webpack_require__.e(/*! import() */ \"node_modules_clerk_nextjs_dist_esm_server_keyless-log-cache_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../server/keyless-log-cache.js */ \"./node_modules/@clerk/nextjs/dist/esm/server/keyless-log-cache.js\"));\n  clerkDevelopmentCache == null ? void 0 : clerkDevelopmentCache.log({\n    cacheKey: result.publishableKey,\n    msg: createKeylessModeMessage(result)\n  });\n  const { claimUrl, publishableKey, secretKey, apiKeysUrl } = result;\n  void (await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)()).set((0,_server_keyless__WEBPACK_IMPORTED_MODULE_2__.getKeylessCookieName)(), JSON.stringify({ claimUrl, publishableKey, secretKey }), {\n    secure: false,\n    httpOnly: false\n  });\n  return {\n    claimUrl,\n    publishableKey,\n    apiKeysUrl\n  };\n}\nasync function deleteKeylessAction() {\n  if (!_utils_feature_flags__WEBPACK_IMPORTED_MODULE_4__.canUseKeyless) {\n    return;\n  }\n  await __webpack_require__.e(/*! import() */ \"node_modules_clerk_nextjs_dist_esm_server_keyless-node_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../server/keyless-node.js */ \"./node_modules/@clerk/nextjs/dist/esm/server/keyless-node.js\")).then((m) => m.removeKeyless()).catch(() => {\n  });\n  return;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9hcHAtcm91dGVyL2tleWxlc3MtYWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDZ0Q7QUFDUztBQUNIO0FBQ1U7QUFDZ0I7QUFDekI7QUFDdkQ7QUFDQSxVQUFVLGlEQUFpRDtBQUMzRCw0QkFBNEIscURBQU87QUFDbkMsMkRBQTJELGVBQWUscURBQU8sSUFBSTtBQUNyRixrQkFBa0Isc0VBQXFCO0FBQ3ZDO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixxRUFBb0IscUJBQXFCLHFDQUFxQztBQUNoRztBQUNBO0FBQ0EsR0FBRztBQUNILE1BQU0sNEVBQXFCO0FBQzNCLElBQUkseURBQVEsa0NBQWtDLFVBQVUsR0FBRyx5REFBWTtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTywrREFBYTtBQUNwQjtBQUNBO0FBQ0EsdUJBQXVCLHVQQUFtQztBQUMxRDtBQUNBLElBQUksOERBQVk7QUFDaEI7QUFDQTtBQUNBLFVBQVUsa0RBQWtELFFBQVEsc1FBQXdDO0FBQzVHO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxVQUFVLGtEQUFrRDtBQUM1RCxjQUFjLHFEQUFPLFFBQVEscUVBQW9CLHFCQUFxQixxQ0FBcUM7QUFDM0c7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sK0RBQWE7QUFDcEI7QUFDQTtBQUNBLFFBQVEsdVBBQW1DO0FBQzNDLEdBQUc7QUFDSDtBQUNBO0FBS0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vYXBwLXJvdXRlci9rZXlsZXNzLWFjdGlvbnMuanM/OWIyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzZXJ2ZXJcIjtcbmltcG9ydCB7IGNvb2tpZXMsIGhlYWRlcnMgfSBmcm9tIFwibmV4dC9oZWFkZXJzXCI7XG5pbXBvcnQgeyByZWRpcmVjdCwgUmVkaXJlY3RUeXBlIH0gZnJvbSBcIm5leHQvbmF2aWdhdGlvblwiO1xuaW1wb3J0IHsgZXJyb3JUaHJvd2VyIH0gZnJvbSBcIi4uL3NlcnZlci9lcnJvclRocm93ZXJcIjtcbmltcG9ydCB7IGRldGVjdENsZXJrTWlkZGxld2FyZSB9IGZyb20gXCIuLi9zZXJ2ZXIvaGVhZGVycy11dGlsc1wiO1xuaW1wb3J0IHsgZ2V0S2V5bGVzc0Nvb2tpZU5hbWUsIGdldEtleWxlc3NDb29raWVWYWx1ZSB9IGZyb20gXCIuLi9zZXJ2ZXIva2V5bGVzc1wiO1xuaW1wb3J0IHsgY2FuVXNlS2V5bGVzcyB9IGZyb20gXCIuLi91dGlscy9mZWF0dXJlLWZsYWdzXCI7XG5hc3luYyBmdW5jdGlvbiBzeW5jS2V5bGVzc0NvbmZpZ0FjdGlvbihhcmdzKSB7XG4gIGNvbnN0IHsgY2xhaW1VcmwsIHB1Ymxpc2hhYmxlS2V5LCBzZWNyZXRLZXksIHJldHVyblVybCB9ID0gYXJncztcbiAgY29uc3QgY29va2llU3RvcmUgPSBhd2FpdCBjb29raWVzKCk7XG4gIGNvbnN0IHJlcXVlc3QgPSBuZXcgUmVxdWVzdChcImh0dHBzOi8vcGxhY2Vob2xkZXIuY29tXCIsIHsgaGVhZGVyczogYXdhaXQgaGVhZGVycygpIH0pO1xuICBjb25zdCBrZXlsZXNzID0gZ2V0S2V5bGVzc0Nvb2tpZVZhbHVlKChuYW1lKSA9PiB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiAoX2EgPSBjb29raWVTdG9yZS5nZXQobmFtZSkpID09IG51bGwgPyB2b2lkIDAgOiBfYS52YWx1ZTtcbiAgfSk7XG4gIGNvbnN0IHBrc01hdGNoID0gKGtleWxlc3MgPT0gbnVsbCA/IHZvaWQgMCA6IGtleWxlc3MucHVibGlzaGFibGVLZXkpID09PSBwdWJsaXNoYWJsZUtleTtcbiAgY29uc3Qgc2tzTWF0Y2ggPSAoa2V5bGVzcyA9PSBudWxsID8gdm9pZCAwIDoga2V5bGVzcy5zZWNyZXRLZXkpID09PSBzZWNyZXRLZXk7XG4gIGlmIChwa3NNYXRjaCAmJiBza3NNYXRjaCkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb29raWVTdG9yZS5zZXQoZ2V0S2V5bGVzc0Nvb2tpZU5hbWUoKSwgSlNPTi5zdHJpbmdpZnkoeyBjbGFpbVVybCwgcHVibGlzaGFibGVLZXksIHNlY3JldEtleSB9KSwge1xuICAgIHNlY3VyZTogdHJ1ZSxcbiAgICBodHRwT25seTogdHJ1ZVxuICB9KTtcbiAgaWYgKGRldGVjdENsZXJrTWlkZGxld2FyZShyZXF1ZXN0KSkge1xuICAgIHJlZGlyZWN0KGAvY2xlcmstc3luYy1rZXlsZXNzP3JldHVyblVybD0ke3JldHVyblVybH1gLCBSZWRpcmVjdFR5cGUucmVwbGFjZSk7XG4gICAgcmV0dXJuO1xuICB9XG4gIHJldHVybjtcbn1cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZU9yUmVhZEtleWxlc3NBY3Rpb24oKSB7XG4gIGlmICghY2FuVXNlS2V5bGVzcykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGltcG9ydChcIi4uL3NlcnZlci9rZXlsZXNzLW5vZGUuanNcIikudGhlbigobSkgPT4gbS5jcmVhdGVPclJlYWRLZXlsZXNzKCkpLmNhdGNoKCgpID0+IG51bGwpO1xuICBpZiAoIXJlc3VsdCkge1xuICAgIGVycm9yVGhyb3dlci50aHJvd01pc3NpbmdQdWJsaXNoYWJsZUtleUVycm9yKCk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgeyBjbGVya0RldmVsb3BtZW50Q2FjaGUsIGNyZWF0ZUtleWxlc3NNb2RlTWVzc2FnZSB9ID0gYXdhaXQgaW1wb3J0KFwiLi4vc2VydmVyL2tleWxlc3MtbG9nLWNhY2hlLmpzXCIpO1xuICBjbGVya0RldmVsb3BtZW50Q2FjaGUgPT0gbnVsbCA/IHZvaWQgMCA6IGNsZXJrRGV2ZWxvcG1lbnRDYWNoZS5sb2coe1xuICAgIGNhY2hlS2V5OiByZXN1bHQucHVibGlzaGFibGVLZXksXG4gICAgbXNnOiBjcmVhdGVLZXlsZXNzTW9kZU1lc3NhZ2UocmVzdWx0KVxuICB9KTtcbiAgY29uc3QgeyBjbGFpbVVybCwgcHVibGlzaGFibGVLZXksIHNlY3JldEtleSwgYXBpS2V5c1VybCB9ID0gcmVzdWx0O1xuICB2b2lkIChhd2FpdCBjb29raWVzKCkpLnNldChnZXRLZXlsZXNzQ29va2llTmFtZSgpLCBKU09OLnN0cmluZ2lmeSh7IGNsYWltVXJsLCBwdWJsaXNoYWJsZUtleSwgc2VjcmV0S2V5IH0pLCB7XG4gICAgc2VjdXJlOiBmYWxzZSxcbiAgICBodHRwT25seTogZmFsc2VcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgY2xhaW1VcmwsXG4gICAgcHVibGlzaGFibGVLZXksXG4gICAgYXBpS2V5c1VybFxuICB9O1xufVxuYXN5bmMgZnVuY3Rpb24gZGVsZXRlS2V5bGVzc0FjdGlvbigpIHtcbiAgaWYgKCFjYW5Vc2VLZXlsZXNzKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGF3YWl0IGltcG9ydChcIi4uL3NlcnZlci9rZXlsZXNzLW5vZGUuanNcIikudGhlbigobSkgPT4gbS5yZW1vdmVLZXlsZXNzKCkpLmNhdGNoKCgpID0+IHtcbiAgfSk7XG4gIHJldHVybjtcbn1cbmV4cG9ydCB7XG4gIGNyZWF0ZU9yUmVhZEtleWxlc3NBY3Rpb24sXG4gIGRlbGV0ZUtleWxlc3NBY3Rpb24sXG4gIHN5bmNLZXlsZXNzQ29uZmlnQWN0aW9uXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@clerk/nextjs/dist/esm/app-router/keyless-actions.js\n"));

/***/ }),

/***/ "./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js":
/*!********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   errorThrower: () => (/* binding */ errorThrower)\n/* harmony export */ });\n/* harmony import */ var _clerk_shared_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/shared/error */ \"./node_modules/@clerk/shared/dist/error.mjs\");\n\n\nconst errorThrower = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_0__.buildErrorThrower)({ packageName: \"@clerk/nextjs\" });\n\n//# sourceMappingURL=errorThrower.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvZXJyb3JUaHJvd2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQThCO0FBQzBCO0FBQ3hELHFCQUFxQixzRUFBaUIsR0FBRyw4QkFBOEI7QUFHckU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvZXJyb3JUaHJvd2VyLmpzPzU5OTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY2h1bmstQlVTWUEyQjQuanNcIjtcbmltcG9ydCB7IGJ1aWxkRXJyb3JUaHJvd2VyIH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvZXJyb3JcIjtcbmNvbnN0IGVycm9yVGhyb3dlciA9IGJ1aWxkRXJyb3JUaHJvd2VyKHsgcGFja2FnZU5hbWU6IFwiQGNsZXJrL25leHRqc1wiIH0pO1xuZXhwb3J0IHtcbiAgZXJyb3JUaHJvd2VyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JUaHJvd2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@clerk/nextjs/dist/esm/server/errorThrower.js\n"));

/***/ }),

/***/ "./node_modules/@clerk/nextjs/dist/esm/server/headers-utils.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/headers-utils.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectClerkMiddleware: () => (/* binding */ detectClerkMiddleware),\n/* harmony export */   getAuthKeyFromRequest: () => (/* binding */ getAuthKeyFromRequest),\n/* harmony export */   getCustomAttributeFromRequest: () => (/* binding */ getCustomAttributeFromRequest),\n/* harmony export */   getHeader: () => (/* binding */ getHeader),\n/* harmony export */   isNextRequest: () => (/* binding */ isNextRequest),\n/* harmony export */   isRequestWebAPI: () => (/* binding */ isRequestWebAPI)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend/internal */ \"./node_modules/@clerk/backend/dist/internal.mjs\");\n\n\nfunction getCustomAttributeFromRequest(req, key) {\n  return key in req ? req[key] : void 0;\n}\nfunction getAuthKeyFromRequest(req, key) {\n  return getCustomAttributeFromRequest(req, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Attributes[key]) || getHeader(req, _clerk_backend_internal__WEBPACK_IMPORTED_MODULE_0__.constants.Headers[key]);\n}\nfunction getHeader(req, name) {\n  var _a, _b;\n  if (isNextRequest(req) || isRequestWebAPI(req)) {\n    return req.headers.get(name);\n  }\n  return req.headers[name] || req.headers[name.toLowerCase()] || ((_b = (_a = req.socket) == null ? void 0 : _a._httpMessage) == null ? void 0 : _b.getHeader(name));\n}\nfunction detectClerkMiddleware(req) {\n  return Boolean(getAuthKeyFromRequest(req, \"AuthStatus\"));\n}\nfunction isNextRequest(val) {\n  try {\n    const { headers, nextUrl, cookies } = val || {};\n    return typeof (headers == null ? void 0 : headers.get) === \"function\" && typeof (nextUrl == null ? void 0 : nextUrl.searchParams.get) === \"function\" && typeof (cookies == null ? void 0 : cookies.get) === \"function\";\n  } catch {\n    return false;\n  }\n}\nfunction isRequestWebAPI(val) {\n  try {\n    const { headers } = val || {};\n    return typeof (headers == null ? void 0 : headers.get) === \"function\";\n  } catch {\n    return false;\n  }\n}\n\n//# sourceMappingURL=headers-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvaGVhZGVycy11dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQThCO0FBQ3NCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDhEQUFTLG9DQUFvQyw4REFBUztBQUNsRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNEJBQTRCO0FBQ3hDO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFVBQVU7QUFDdEI7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBUUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvaGVhZGVycy11dGlscy5qcz81YmIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uL2NodW5rLUJVU1lBMkI0LmpzXCI7XG5pbXBvcnQgeyBjb25zdGFudHMgfSBmcm9tIFwiQGNsZXJrL2JhY2tlbmQvaW50ZXJuYWxcIjtcbmZ1bmN0aW9uIGdldEN1c3RvbUF0dHJpYnV0ZUZyb21SZXF1ZXN0KHJlcSwga2V5KSB7XG4gIHJldHVybiBrZXkgaW4gcmVxID8gcmVxW2tleV0gOiB2b2lkIDA7XG59XG5mdW5jdGlvbiBnZXRBdXRoS2V5RnJvbVJlcXVlc3QocmVxLCBrZXkpIHtcbiAgcmV0dXJuIGdldEN1c3RvbUF0dHJpYnV0ZUZyb21SZXF1ZXN0KHJlcSwgY29uc3RhbnRzLkF0dHJpYnV0ZXNba2V5XSkgfHwgZ2V0SGVhZGVyKHJlcSwgY29uc3RhbnRzLkhlYWRlcnNba2V5XSk7XG59XG5mdW5jdGlvbiBnZXRIZWFkZXIocmVxLCBuYW1lKSB7XG4gIHZhciBfYSwgX2I7XG4gIGlmIChpc05leHRSZXF1ZXN0KHJlcSkgfHwgaXNSZXF1ZXN0V2ViQVBJKHJlcSkpIHtcbiAgICByZXR1cm4gcmVxLmhlYWRlcnMuZ2V0KG5hbWUpO1xuICB9XG4gIHJldHVybiByZXEuaGVhZGVyc1tuYW1lXSB8fCByZXEuaGVhZGVyc1tuYW1lLnRvTG93ZXJDYXNlKCldIHx8ICgoX2IgPSAoX2EgPSByZXEuc29ja2V0KSA9PSBudWxsID8gdm9pZCAwIDogX2EuX2h0dHBNZXNzYWdlKSA9PSBudWxsID8gdm9pZCAwIDogX2IuZ2V0SGVhZGVyKG5hbWUpKTtcbn1cbmZ1bmN0aW9uIGRldGVjdENsZXJrTWlkZGxld2FyZShyZXEpIHtcbiAgcmV0dXJuIEJvb2xlYW4oZ2V0QXV0aEtleUZyb21SZXF1ZXN0KHJlcSwgXCJBdXRoU3RhdHVzXCIpKTtcbn1cbmZ1bmN0aW9uIGlzTmV4dFJlcXVlc3QodmFsKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBoZWFkZXJzLCBuZXh0VXJsLCBjb29raWVzIH0gPSB2YWwgfHwge307XG4gICAgcmV0dXJuIHR5cGVvZiAoaGVhZGVycyA9PSBudWxsID8gdm9pZCAwIDogaGVhZGVycy5nZXQpID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIChuZXh0VXJsID09IG51bGwgPyB2b2lkIDAgOiBuZXh0VXJsLnNlYXJjaFBhcmFtcy5nZXQpID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIChjb29raWVzID09IG51bGwgPyB2b2lkIDAgOiBjb29raWVzLmdldCkgPT09IFwiZnVuY3Rpb25cIjtcbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5mdW5jdGlvbiBpc1JlcXVlc3RXZWJBUEkodmFsKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBoZWFkZXJzIH0gPSB2YWwgfHwge307XG4gICAgcmV0dXJuIHR5cGVvZiAoaGVhZGVycyA9PSBudWxsID8gdm9pZCAwIDogaGVhZGVycy5nZXQpID09PSBcImZ1bmN0aW9uXCI7XG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgZGV0ZWN0Q2xlcmtNaWRkbGV3YXJlLFxuICBnZXRBdXRoS2V5RnJvbVJlcXVlc3QsXG4gIGdldEN1c3RvbUF0dHJpYnV0ZUZyb21SZXF1ZXN0LFxuICBnZXRIZWFkZXIsXG4gIGlzTmV4dFJlcXVlc3QsXG4gIGlzUmVxdWVzdFdlYkFQSVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlYWRlcnMtdXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@clerk/nextjs/dist/esm/server/headers-utils.js\n"));

/***/ }),

/***/ "./node_modules/@clerk/nextjs/dist/esm/server/keyless.js":
/*!***************************************************************!*\
  !*** ./node_modules/@clerk/nextjs/dist/esm/server/keyless.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getKeylessCookieName: () => (/* binding */ getKeylessCookieName),\n/* harmony export */   getKeylessCookieValue: () => (/* binding */ getKeylessCookieValue)\n/* harmony export */ });\n/* harmony import */ var crypto_js_enc_hex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto-js/enc-hex */ \"./node_modules/crypto-js/enc-hex.js\");\n/* harmony import */ var crypto_js_enc_hex__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto_js_enc_hex__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var crypto_js_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto-js/sha256 */ \"./node_modules/crypto-js/sha256.js\");\n/* harmony import */ var crypto_js_sha256__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(crypto_js_sha256__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_feature_flags__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/feature-flags */ \"./node_modules/@clerk/nextjs/dist/esm/utils/feature-flags.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\nconst keylessCookiePrefix = `__clerk_keys_`;\nconst getKeylessCookieName = () => {\n  const PATH = process.env.PWD;\n  if (!PATH) {\n    return `${keylessCookiePrefix}${0}`;\n  }\n  const lastThreeDirs = PATH.split(\"/\").filter(Boolean).slice(-3).reverse().join(\"/\");\n  const hash = hashString(lastThreeDirs);\n  return `${keylessCookiePrefix}${hash}`;\n};\nfunction hashString(str) {\n  return crypto_js_sha256__WEBPACK_IMPORTED_MODULE_1___default()(str).toString((crypto_js_enc_hex__WEBPACK_IMPORTED_MODULE_0___default())).slice(0, 16);\n}\nfunction getKeylessCookieValue(getter) {\n  if (!_utils_feature_flags__WEBPACK_IMPORTED_MODULE_2__.canUseKeyless) {\n    return void 0;\n  }\n  const keylessCookieName = getKeylessCookieName();\n  let keyless;\n  try {\n    if (keylessCookieName) {\n      keyless = JSON.parse(getter(keylessCookieName) || \"{}\");\n    }\n  } catch {\n    keyless = void 0;\n  }\n  return keyless;\n}\n\n//# sourceMappingURL=keyless.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIva2V5bGVzcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE4QjtBQUNNO0FBQ0U7QUFDaUI7QUFDdkQ7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QjtBQUNBLGNBQWMsb0JBQW9CLEVBQUUsRUFBRTtBQUN0QztBQUNBO0FBQ0E7QUFDQSxZQUFZLG9CQUFvQixFQUFFLEtBQUs7QUFDdkM7QUFDQTtBQUNBLFNBQVMsdURBQU0sZUFBZSwwREFBRztBQUNqQztBQUNBO0FBQ0EsT0FBTywrREFBYTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0Q7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9rZXlsZXNzLmpzP2RhYjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi4vY2h1bmstQlVTWUEyQjQuanNcIjtcbmltcG9ydCBoZXggZnJvbSBcImNyeXB0by1qcy9lbmMtaGV4XCI7XG5pbXBvcnQgc2hhMjU2IGZyb20gXCJjcnlwdG8tanMvc2hhMjU2XCI7XG5pbXBvcnQgeyBjYW5Vc2VLZXlsZXNzIH0gZnJvbSBcIi4uL3V0aWxzL2ZlYXR1cmUtZmxhZ3NcIjtcbmNvbnN0IGtleWxlc3NDb29raWVQcmVmaXggPSBgX19jbGVya19rZXlzX2A7XG5jb25zdCBnZXRLZXlsZXNzQ29va2llTmFtZSA9ICgpID0+IHtcbiAgY29uc3QgUEFUSCA9IHByb2Nlc3MuZW52LlBXRDtcbiAgaWYgKCFQQVRIKSB7XG4gICAgcmV0dXJuIGAke2tleWxlc3NDb29raWVQcmVmaXh9JHswfWA7XG4gIH1cbiAgY29uc3QgbGFzdFRocmVlRGlycyA9IFBBVEguc3BsaXQoXCIvXCIpLmZpbHRlcihCb29sZWFuKS5zbGljZSgtMykucmV2ZXJzZSgpLmpvaW4oXCIvXCIpO1xuICBjb25zdCBoYXNoID0gaGFzaFN0cmluZyhsYXN0VGhyZWVEaXJzKTtcbiAgcmV0dXJuIGAke2tleWxlc3NDb29raWVQcmVmaXh9JHtoYXNofWA7XG59O1xuZnVuY3Rpb24gaGFzaFN0cmluZyhzdHIpIHtcbiAgcmV0dXJuIHNoYTI1NihzdHIpLnRvU3RyaW5nKGhleCkuc2xpY2UoMCwgMTYpO1xufVxuZnVuY3Rpb24gZ2V0S2V5bGVzc0Nvb2tpZVZhbHVlKGdldHRlcikge1xuICBpZiAoIWNhblVzZUtleWxlc3MpIHtcbiAgICByZXR1cm4gdm9pZCAwO1xuICB9XG4gIGNvbnN0IGtleWxlc3NDb29raWVOYW1lID0gZ2V0S2V5bGVzc0Nvb2tpZU5hbWUoKTtcbiAgbGV0IGtleWxlc3M7XG4gIHRyeSB7XG4gICAgaWYgKGtleWxlc3NDb29raWVOYW1lKSB7XG4gICAgICBrZXlsZXNzID0gSlNPTi5wYXJzZShnZXR0ZXIoa2V5bGVzc0Nvb2tpZU5hbWUpIHx8IFwie31cIik7XG4gICAgfVxuICB9IGNhdGNoIHtcbiAgICBrZXlsZXNzID0gdm9pZCAwO1xuICB9XG4gIHJldHVybiBrZXlsZXNzO1xufVxuZXhwb3J0IHtcbiAgZ2V0S2V5bGVzc0Nvb2tpZU5hbWUsXG4gIGdldEtleWxlc3NDb29raWVWYWx1ZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtleWxlc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@clerk/nextjs/dist/esm/server/keyless.js\n"));

/***/ }),

/***/ "./node_modules/cookie/dist/index.js":
/*!*******************************************!*\
  !*** ./node_modules/cookie/dist/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = parse;\nexports.serialize = serialize;\n/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\nconst __toString = Object.prototype.toString;\nconst NullObject = /* @__PURE__ */ (() => {\n    const C = function () { };\n    C.prototype = Object.create(null);\n    return C;\n})();\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nfunction parse(str, options) {\n    const obj = new NullObject();\n    const len = str.length;\n    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n    if (len < 2)\n        return obj;\n    const dec = options?.decode || decode;\n    let index = 0;\n    do {\n        const eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1)\n            break; // No more cookie pairs.\n        const colonIdx = str.indexOf(\";\", index);\n        const endIdx = colonIdx === -1 ? len : colonIdx;\n        if (eqIdx > endIdx) {\n            // backtrack on prior semicolon\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        const keyStartIdx = startIndex(str, index, eqIdx);\n        const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n        const key = str.slice(keyStartIdx, keyEndIdx);\n        // only assign once\n        if (obj[key] === undefined) {\n            let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n            let valEndIdx = endIndex(str, endIdx, valStartIdx);\n            const value = dec(str.slice(valStartIdx, valEndIdx));\n            obj[key] = value;\n        }\n        index = endIdx + 1;\n    } while (index < len);\n    return obj;\n}\nfunction startIndex(str, index, max) {\n    do {\n        const code = str.charCodeAt(index);\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\n            return index;\n    } while (++index < max);\n    return max;\n}\nfunction endIndex(str, index, min) {\n    while (index > min) {\n        const code = str.charCodeAt(--index);\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\n            return index + 1;\n    }\n    return min;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nfunction serialize(name, val, options) {\n    const enc = options?.encode || encodeURIComponent;\n    if (!cookieNameRegExp.test(name)) {\n        throw new TypeError(`argument name is invalid: ${name}`);\n    }\n    const value = enc(val);\n    if (!cookieValueRegExp.test(value)) {\n        throw new TypeError(`argument val is invalid: ${val}`);\n    }\n    let str = name + \"=\" + value;\n    if (!options)\n        return str;\n    if (options.maxAge !== undefined) {\n        if (!Number.isInteger(options.maxAge)) {\n            throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n        }\n        str += \"; Max-Age=\" + options.maxAge;\n    }\n    if (options.domain) {\n        if (!domainValueRegExp.test(options.domain)) {\n            throw new TypeError(`option domain is invalid: ${options.domain}`);\n        }\n        str += \"; Domain=\" + options.domain;\n    }\n    if (options.path) {\n        if (!pathValueRegExp.test(options.path)) {\n            throw new TypeError(`option path is invalid: ${options.path}`);\n        }\n        str += \"; Path=\" + options.path;\n    }\n    if (options.expires) {\n        if (!isDate(options.expires) ||\n            !Number.isFinite(options.expires.valueOf())) {\n            throw new TypeError(`option expires is invalid: ${options.expires}`);\n        }\n        str += \"; Expires=\" + options.expires.toUTCString();\n    }\n    if (options.httpOnly) {\n        str += \"; HttpOnly\";\n    }\n    if (options.secure) {\n        str += \"; Secure\";\n    }\n    if (options.partitioned) {\n        str += \"; Partitioned\";\n    }\n    if (options.priority) {\n        const priority = typeof options.priority === \"string\"\n            ? options.priority.toLowerCase()\n            : undefined;\n        switch (priority) {\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(`option priority is invalid: ${options.priority}`);\n        }\n    }\n    if (options.sameSite) {\n        const sameSite = typeof options.sameSite === \"string\"\n            ? options.sameSite.toLowerCase()\n            : options.sameSite;\n        switch (sameSite) {\n            case true:\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n        }\n    }\n    return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str) {\n    if (str.indexOf(\"%\") === -1)\n        return str;\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (e) {\n        return str;\n    }\n}\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val) {\n    return __toString.call(val) === \"[object Date]\";\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cookie/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/crypto-js/core.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/core.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse {}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.crypto) {\n\t        crypto = __webpack_require__.g.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && \"function\" === 'function') {\n\t        try {\n\t            crypto = __webpack_require__(/*! crypto */ \"?599d\");\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/crypto-js/core.js\n"));

/***/ }),

/***/ "./node_modules/crypto-js/enc-hex.js":
/*!*******************************************!*\
  !*** ./node_modules/crypto-js/enc-hex.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.enc.Hex;\n\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3J5cHRvLWpzL2VuYy1oZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsQ0FBQztBQUNELEtBQUssSUFBMkI7QUFDaEM7QUFDQSxxQ0FBcUMsbUJBQU8sQ0FBQyxnREFBUTtBQUNyRDtBQUNBLE1BQU0sRUFPSjtBQUNGLENBQUM7O0FBRUQ7O0FBRUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY3J5cHRvLWpzL2VuYy1oZXguanM/ZTczOCJdLCJzb3VyY2VzQ29udGVudCI6WyI7KGZ1bmN0aW9uIChyb290LCBmYWN0b3J5KSB7XG5cdGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gXCJvYmplY3RcIikge1xuXHRcdC8vIENvbW1vbkpTXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKFwiLi9jb3JlXCIpKTtcblx0fVxuXHRlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIEFNRFxuXHRcdGRlZmluZShbXCIuL2NvcmVcIl0sIGZhY3RvcnkpO1xuXHR9XG5cdGVsc2Uge1xuXHRcdC8vIEdsb2JhbCAoYnJvd3Nlcilcblx0XHRmYWN0b3J5KHJvb3QuQ3J5cHRvSlMpO1xuXHR9XG59KHRoaXMsIGZ1bmN0aW9uIChDcnlwdG9KUykge1xuXG5cdHJldHVybiBDcnlwdG9KUy5lbmMuSGV4O1xuXG59KSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/crypto-js/enc-hex.js\n"));

/***/ }),

/***/ "./node_modules/crypto-js/sha256.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/sha256.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts(";(function (root, factory) {\n\tif (true) {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(__webpack_require__(/*! ./core */ \"./node_modules/crypto-js/core.js\"));\n\t}\n\telse {}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/crypto-js/sha256.js\n"));

/***/ }),

/***/ "./node_modules/dot-case/dist.es2015/index.js":
/*!****************************************************!*\
  !*** ./node_modules/dot-case/dist.es2015/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dotCase: () => (/* binding */ dotCase)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"./node_modules/dot-case/node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var no_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! no-case */ \"./node_modules/no-case/dist.es2015/index.js\");\n\n\nfunction dotCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return (0,no_case__WEBPACK_IMPORTED_MODULE_0__.noCase)(input, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ delimiter: \".\" }, options));\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG90LWNhc2UvZGlzdC5lczIwMTUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBQ0E7QUFDMUI7QUFDUCw4QkFBOEI7QUFDOUIsV0FBVywrQ0FBTSxRQUFRLCtDQUFRLEdBQUcsZ0JBQWdCO0FBQ3BEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RvdC1jYXNlL2Rpc3QuZXMyMDE1L2luZGV4LmpzPzZlNDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24gfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IG5vQ2FzZSB9IGZyb20gXCJuby1jYXNlXCI7XG5leHBvcnQgZnVuY3Rpb24gZG90Q2FzZShpbnB1dCwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgcmV0dXJuIG5vQ2FzZShpbnB1dCwgX19hc3NpZ24oeyBkZWxpbWl0ZXI6IFwiLlwiIH0sIG9wdGlvbnMpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dot-case/dist.es2015/index.js\n"));

/***/ }),

/***/ "./node_modules/lower-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/lower-case/dist.es2015/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   localeLowerCase: () => (/* binding */ localeLowerCase),\n/* harmony export */   lowerCase: () => (/* binding */ lowerCase)\n/* harmony export */ });\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"\\u0069\\u0307\",\n            J: \"\\u006A\\u0307\",\n            Į: \"\\u012F\\u0307\",\n            Ì: \"\\u0069\\u0307\\u0300\",\n            Í: \"\\u0069\\u0307\\u0301\",\n            Ĩ: \"\\u0069\\u0307\\u0303\",\n        },\n    },\n};\n/**\n * Localized lower case.\n */\nfunction localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nfunction lowerCase(str) {\n    return str.toLowerCase();\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG93ZXItY2FzZS9kaXN0LmVzMjAxNS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxpRUFBaUUscUJBQXFCO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG93ZXItY2FzZS9kaXN0LmVzMjAxNS9pbmRleC5qcz85MDZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU291cmNlOiBmdHA6Ly9mdHAudW5pY29kZS5vcmcvUHVibGljL1VDRC9sYXRlc3QvdWNkL1NwZWNpYWxDYXNpbmcudHh0XG4gKi9cbnZhciBTVVBQT1JURURfTE9DQUxFID0ge1xuICAgIHRyOiB7XG4gICAgICAgIHJlZ2V4cDogL1xcdTAxMzB8XFx1MDA0OXxcXHUwMDQ5XFx1MDMwNy9nLFxuICAgICAgICBtYXA6IHtcbiAgICAgICAgICAgIMSwOiBcIlxcdTAwNjlcIixcbiAgICAgICAgICAgIEk6IFwiXFx1MDEzMVwiLFxuICAgICAgICAgICAgScyHOiBcIlxcdTAwNjlcIixcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIGF6OiB7XG4gICAgICAgIHJlZ2V4cDogL1xcdTAxMzAvZyxcbiAgICAgICAgbWFwOiB7XG4gICAgICAgICAgICDEsDogXCJcXHUwMDY5XCIsXG4gICAgICAgICAgICBJOiBcIlxcdTAxMzFcIixcbiAgICAgICAgICAgIEnMhzogXCJcXHUwMDY5XCIsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBsdDoge1xuICAgICAgICByZWdleHA6IC9cXHUwMDQ5fFxcdTAwNEF8XFx1MDEyRXxcXHUwMENDfFxcdTAwQ0R8XFx1MDEyOC9nLFxuICAgICAgICBtYXA6IHtcbiAgICAgICAgICAgIEk6IFwiXFx1MDA2OVxcdTAzMDdcIixcbiAgICAgICAgICAgIEo6IFwiXFx1MDA2QVxcdTAzMDdcIixcbiAgICAgICAgICAgIMSuOiBcIlxcdTAxMkZcXHUwMzA3XCIsXG4gICAgICAgICAgICDDjDogXCJcXHUwMDY5XFx1MDMwN1xcdTAzMDBcIixcbiAgICAgICAgICAgIMONOiBcIlxcdTAwNjlcXHUwMzA3XFx1MDMwMVwiLFxuICAgICAgICAgICAgxKg6IFwiXFx1MDA2OVxcdTAzMDdcXHUwMzAzXCIsXG4gICAgICAgIH0sXG4gICAgfSxcbn07XG4vKipcbiAqIExvY2FsaXplZCBsb3dlciBjYXNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9jYWxlTG93ZXJDYXNlKHN0ciwgbG9jYWxlKSB7XG4gICAgdmFyIGxhbmcgPSBTVVBQT1JURURfTE9DQUxFW2xvY2FsZS50b0xvd2VyQ2FzZSgpXTtcbiAgICBpZiAobGFuZylcbiAgICAgICAgcmV0dXJuIGxvd2VyQ2FzZShzdHIucmVwbGFjZShsYW5nLnJlZ2V4cCwgZnVuY3Rpb24gKG0pIHsgcmV0dXJuIGxhbmcubWFwW21dOyB9KSk7XG4gICAgcmV0dXJuIGxvd2VyQ2FzZShzdHIpO1xufVxuLyoqXG4gKiBMb3dlciBjYXNlIGFzIGEgZnVuY3Rpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsb3dlckNhc2Uoc3RyKSB7XG4gICAgcmV0dXJuIHN0ci50b0xvd2VyQ2FzZSgpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lower-case/dist.es2015/index.js\n"));

/***/ }),

/***/ "./node_modules/map-obj/index.js":
/*!***************************************!*\
  !*** ./node_modules/map-obj/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nconst isObject = value => typeof value === 'object' && value !== null;\nconst mapObjectSkip = Symbol('skip');\n\n// Customized for this use-case\nconst isObjectCustom = value =>\n\tisObject(value) &&\n\t!(value instanceof RegExp) &&\n\t!(value instanceof Error) &&\n\t!(value instanceof Date);\n\nconst mapObject = (object, mapper, options, isSeen = new WeakMap()) => {\n\toptions = {\n\t\tdeep: false,\n\t\ttarget: {},\n\t\t...options\n\t};\n\n\tif (isSeen.has(object)) {\n\t\treturn isSeen.get(object);\n\t}\n\n\tisSeen.set(object, options.target);\n\n\tconst {target} = options;\n\tdelete options.target;\n\n\tconst mapArray = array => array.map(element => isObjectCustom(element) ? mapObject(element, mapper, options, isSeen) : element);\n\tif (Array.isArray(object)) {\n\t\treturn mapArray(object);\n\t}\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tconst mapResult = mapper(key, value, object);\n\n\t\tif (mapResult === mapObjectSkip) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [newKey, newValue, {shouldRecurse = true} = {}] = mapResult;\n\n\t\t// Drop `__proto__` keys.\n\t\tif (newKey === '__proto__') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (options.deep && shouldRecurse && isObjectCustom(newValue)) {\n\t\t\tnewValue = Array.isArray(newValue) ?\n\t\t\t\tmapArray(newValue) :\n\t\t\t\tmapObject(newValue, mapper, options, isSeen);\n\t\t}\n\n\t\ttarget[newKey] = newValue;\n\t}\n\n\treturn target;\n};\n\nmodule.exports = (object, mapper, options) => {\n\tif (!isObject(object)) {\n\t\tthrow new TypeError(`Expected an object, got \\`${object}\\` (${typeof object})`);\n\t}\n\n\treturn mapObject(object, mapper, options);\n};\n\nmodule.exports.mapObjectSkip = mapObjectSkip;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWFwLW9iai9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsUUFBUSxRQUFRO0FBQ2hCOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDBCQUEwQixzQkFBc0IsSUFBSTs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1EQUFtRCxPQUFPLE1BQU0sY0FBYztBQUM5RTs7QUFFQTtBQUNBOztBQUVBLDRCQUE0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWFwLW9iai9pbmRleC5qcz9lNDgxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgaXNPYmplY3QgPSB2YWx1ZSA9PiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICE9PSBudWxsO1xuY29uc3QgbWFwT2JqZWN0U2tpcCA9IFN5bWJvbCgnc2tpcCcpO1xuXG4vLyBDdXN0b21pemVkIGZvciB0aGlzIHVzZS1jYXNlXG5jb25zdCBpc09iamVjdEN1c3RvbSA9IHZhbHVlID0+XG5cdGlzT2JqZWN0KHZhbHVlKSAmJlxuXHQhKHZhbHVlIGluc3RhbmNlb2YgUmVnRXhwKSAmJlxuXHQhKHZhbHVlIGluc3RhbmNlb2YgRXJyb3IpICYmXG5cdCEodmFsdWUgaW5zdGFuY2VvZiBEYXRlKTtcblxuY29uc3QgbWFwT2JqZWN0ID0gKG9iamVjdCwgbWFwcGVyLCBvcHRpb25zLCBpc1NlZW4gPSBuZXcgV2Vha01hcCgpKSA9PiB7XG5cdG9wdGlvbnMgPSB7XG5cdFx0ZGVlcDogZmFsc2UsXG5cdFx0dGFyZ2V0OiB7fSxcblx0XHQuLi5vcHRpb25zXG5cdH07XG5cblx0aWYgKGlzU2Vlbi5oYXMob2JqZWN0KSkge1xuXHRcdHJldHVybiBpc1NlZW4uZ2V0KG9iamVjdCk7XG5cdH1cblxuXHRpc1NlZW4uc2V0KG9iamVjdCwgb3B0aW9ucy50YXJnZXQpO1xuXG5cdGNvbnN0IHt0YXJnZXR9ID0gb3B0aW9ucztcblx0ZGVsZXRlIG9wdGlvbnMudGFyZ2V0O1xuXG5cdGNvbnN0IG1hcEFycmF5ID0gYXJyYXkgPT4gYXJyYXkubWFwKGVsZW1lbnQgPT4gaXNPYmplY3RDdXN0b20oZWxlbWVudCkgPyBtYXBPYmplY3QoZWxlbWVudCwgbWFwcGVyLCBvcHRpb25zLCBpc1NlZW4pIDogZWxlbWVudCk7XG5cdGlmIChBcnJheS5pc0FycmF5KG9iamVjdCkpIHtcblx0XHRyZXR1cm4gbWFwQXJyYXkob2JqZWN0KTtcblx0fVxuXG5cdGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKG9iamVjdCkpIHtcblx0XHRjb25zdCBtYXBSZXN1bHQgPSBtYXBwZXIoa2V5LCB2YWx1ZSwgb2JqZWN0KTtcblxuXHRcdGlmIChtYXBSZXN1bHQgPT09IG1hcE9iamVjdFNraXApIHtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGxldCBbbmV3S2V5LCBuZXdWYWx1ZSwge3Nob3VsZFJlY3Vyc2UgPSB0cnVlfSA9IHt9XSA9IG1hcFJlc3VsdDtcblxuXHRcdC8vIERyb3AgYF9fcHJvdG9fX2Aga2V5cy5cblx0XHRpZiAobmV3S2V5ID09PSAnX19wcm90b19fJykge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0aWYgKG9wdGlvbnMuZGVlcCAmJiBzaG91bGRSZWN1cnNlICYmIGlzT2JqZWN0Q3VzdG9tKG5ld1ZhbHVlKSkge1xuXHRcdFx0bmV3VmFsdWUgPSBBcnJheS5pc0FycmF5KG5ld1ZhbHVlKSA/XG5cdFx0XHRcdG1hcEFycmF5KG5ld1ZhbHVlKSA6XG5cdFx0XHRcdG1hcE9iamVjdChuZXdWYWx1ZSwgbWFwcGVyLCBvcHRpb25zLCBpc1NlZW4pO1xuXHRcdH1cblxuXHRcdHRhcmdldFtuZXdLZXldID0gbmV3VmFsdWU7XG5cdH1cblxuXHRyZXR1cm4gdGFyZ2V0O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSAob2JqZWN0LCBtYXBwZXIsIG9wdGlvbnMpID0+IHtcblx0aWYgKCFpc09iamVjdChvYmplY3QpKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihgRXhwZWN0ZWQgYW4gb2JqZWN0LCBnb3QgXFxgJHtvYmplY3R9XFxgICgke3R5cGVvZiBvYmplY3R9KWApO1xuXHR9XG5cblx0cmV0dXJuIG1hcE9iamVjdChvYmplY3QsIG1hcHBlciwgb3B0aW9ucyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5tYXBPYmplY3RTa2lwID0gbWFwT2JqZWN0U2tpcDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/map-obj/index.js\n"));

/***/ }),

/***/ "./node_modules/no-case/dist.es2015/index.js":
/*!***************************************************!*\
  !*** ./node_modules/no-case/dist.es2015/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   noCase: () => (/* binding */ noCase)\n/* harmony export */ });\n/* harmony import */ var lower_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lower-case */ \"./node_modules/lower-case/dist.es2015/index.js\");\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nfunction noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lower_case__WEBPACK_IMPORTED_MODULE_0__.lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbm8tY2FzZS9kaXN0LmVzMjAxNS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsOEJBQThCO0FBQzlCLGtPQUFrTyxpREFBUztBQUMzTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLGtDQUFrQztBQUM5RTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uby1jYXNlL2Rpc3QuZXMyMDE1L2luZGV4LmpzPzk2OWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG93ZXJDYXNlIH0gZnJvbSBcImxvd2VyLWNhc2VcIjtcbi8vIFN1cHBvcnQgY2FtZWwgY2FzZSAoXCJjYW1lbENhc2VcIiAtPiBcImNhbWVsIENhc2VcIiBhbmQgXCJDQU1FTENhc2VcIiAtPiBcIkNBTUVMIENhc2VcIikuXG52YXIgREVGQVVMVF9TUExJVF9SRUdFWFAgPSBbLyhbYS16MC05XSkoW0EtWl0pL2csIC8oW0EtWl0pKFtBLVpdW2Etel0pL2ddO1xuLy8gUmVtb3ZlIGFsbCBub24td29yZCBjaGFyYWN0ZXJzLlxudmFyIERFRkFVTFRfU1RSSVBfUkVHRVhQID0gL1teQS1aMC05XSsvZ2k7XG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgc3RyaW5nIGludG8gc29tZXRoaW5nIG90aGVyIGxpYnJhcmllcyBjYW4gbWFuaXB1bGF0ZSBlYXNpZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub0Nhc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIHZhciBfYSA9IG9wdGlvbnMuc3BsaXRSZWdleHAsIHNwbGl0UmVnZXhwID0gX2EgPT09IHZvaWQgMCA/IERFRkFVTFRfU1BMSVRfUkVHRVhQIDogX2EsIF9iID0gb3B0aW9ucy5zdHJpcFJlZ2V4cCwgc3RyaXBSZWdleHAgPSBfYiA9PT0gdm9pZCAwID8gREVGQVVMVF9TVFJJUF9SRUdFWFAgOiBfYiwgX2MgPSBvcHRpb25zLnRyYW5zZm9ybSwgdHJhbnNmb3JtID0gX2MgPT09IHZvaWQgMCA/IGxvd2VyQ2FzZSA6IF9jLCBfZCA9IG9wdGlvbnMuZGVsaW1pdGVyLCBkZWxpbWl0ZXIgPSBfZCA9PT0gdm9pZCAwID8gXCIgXCIgOiBfZDtcbiAgICB2YXIgcmVzdWx0ID0gcmVwbGFjZShyZXBsYWNlKGlucHV0LCBzcGxpdFJlZ2V4cCwgXCIkMVxcMCQyXCIpLCBzdHJpcFJlZ2V4cCwgXCJcXDBcIik7XG4gICAgdmFyIHN0YXJ0ID0gMDtcbiAgICB2YXIgZW5kID0gcmVzdWx0Lmxlbmd0aDtcbiAgICAvLyBUcmltIHRoZSBkZWxpbWl0ZXIgZnJvbSBhcm91bmQgdGhlIG91dHB1dCBzdHJpbmcuXG4gICAgd2hpbGUgKHJlc3VsdC5jaGFyQXQoc3RhcnQpID09PSBcIlxcMFwiKVxuICAgICAgICBzdGFydCsrO1xuICAgIHdoaWxlIChyZXN1bHQuY2hhckF0KGVuZCAtIDEpID09PSBcIlxcMFwiKVxuICAgICAgICBlbmQtLTtcbiAgICAvLyBUcmFuc2Zvcm0gZWFjaCB0b2tlbiBpbmRlcGVuZGVudGx5LlxuICAgIHJldHVybiByZXN1bHQuc2xpY2Uoc3RhcnQsIGVuZCkuc3BsaXQoXCJcXDBcIikubWFwKHRyYW5zZm9ybSkuam9pbihkZWxpbWl0ZXIpO1xufVxuLyoqXG4gKiBSZXBsYWNlIGByZWAgaW4gdGhlIGlucHV0IHN0cmluZyB3aXRoIHRoZSByZXBsYWNlbWVudCB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gcmVwbGFjZShpbnB1dCwgcmUsIHZhbHVlKSB7XG4gICAgaWYgKHJlIGluc3RhbmNlb2YgUmVnRXhwKVxuICAgICAgICByZXR1cm4gaW5wdXQucmVwbGFjZShyZSwgdmFsdWUpO1xuICAgIHJldHVybiByZS5yZWR1Y2UoZnVuY3Rpb24gKGlucHV0LCByZSkgeyByZXR1cm4gaW5wdXQucmVwbGFjZShyZSwgdmFsdWUpOyB9LCBpbnB1dCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/no-case/dist.es2015/index.js\n"));

/***/ }),

/***/ "./node_modules/snake-case/dist.es2015/index.js":
/*!******************************************************!*\
  !*** ./node_modules/snake-case/dist.es2015/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   snakeCase: () => (/* binding */ snakeCase)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"./node_modules/snake-case/node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var dot_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dot-case */ \"./node_modules/dot-case/dist.es2015/index.js\");\n\n\nfunction snakeCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return (0,dot_case__WEBPACK_IMPORTED_MODULE_0__.dotCase)(input, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ delimiter: \"_\" }, options));\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc25ha2UtY2FzZS9kaXN0LmVzMjAxNS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUM7QUFDRTtBQUM1QjtBQUNQLDhCQUE4QjtBQUM5QixXQUFXLGlEQUFPLFFBQVEsK0NBQVEsR0FBRyxnQkFBZ0I7QUFDckQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc25ha2UtY2FzZS9kaXN0LmVzMjAxNS9pbmRleC5qcz8yNjc5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXNzaWduIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBkb3RDYXNlIH0gZnJvbSBcImRvdC1jYXNlXCI7XG5leHBvcnQgZnVuY3Rpb24gc25ha2VDYXNlKGlucHV0LCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICByZXR1cm4gZG90Q2FzZShpbnB1dCwgX19hc3NpZ24oeyBkZWxpbWl0ZXI6IFwiX1wiIH0sIG9wdGlvbnMpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/snake-case/dist.es2015/index.js\n"));

/***/ }),

/***/ "./node_modules/snakecase-keys/index.js":
/*!**********************************************!*\
  !*** ./node_modules/snakecase-keys/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nconst map = __webpack_require__(/*! map-obj */ \"./node_modules/map-obj/index.js\")\nconst { snakeCase } = __webpack_require__(/*! snake-case */ \"./node_modules/snake-case/dist.es2015/index.js\")\n\nconst PlainObjectConstructor = {}.constructor\n\nmodule.exports = function (obj, options) {\n  if (Array.isArray(obj)) {\n    if (obj.some(item => item.constructor !== PlainObjectConstructor)) {\n      throw new Error('obj must be array of plain objects')\n    }\n  } else {\n    if (obj.constructor !== PlainObjectConstructor) {\n      throw new Error('obj must be an plain object')\n    }\n  }\n\n  options = Object.assign({ deep: true, exclude: [], parsingOptions: {} }, options)\n\n  return map(obj, function (key, val) {\n    return [\n      matches(options.exclude, key) ? key : snakeCase(key, options.parsingOptions),\n      val,\n      mapperOptions(key, val, options)\n    ]\n  }, options)\n}\n\nfunction matches (patterns, value) {\n  return patterns.some(function (pattern) {\n    return typeof pattern === 'string'\n      ? pattern === value\n      : pattern.test(value)\n  })\n}\n\nfunction mapperOptions (key, val, options) {\n  return options.shouldRecurse\n    ? { shouldRecurse: options.shouldRecurse(key, val) }\n    : undefined\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc25ha2VjYXNlLWtleXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVosWUFBWSxtQkFBTyxDQUFDLGdEQUFTO0FBQzdCLFFBQVEsWUFBWSxFQUFFLG1CQUFPLENBQUMsa0VBQVk7O0FBRTFDLGlDQUFpQzs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw0QkFBNEIsNkNBQTZDOztBQUV6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NuYWtlY2FzZS1rZXlzL2luZGV4LmpzPzBlZjEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IG1hcCA9IHJlcXVpcmUoJ21hcC1vYmonKVxuY29uc3QgeyBzbmFrZUNhc2UgfSA9IHJlcXVpcmUoJ3NuYWtlLWNhc2UnKVxuXG5jb25zdCBQbGFpbk9iamVjdENvbnN0cnVjdG9yID0ge30uY29uc3RydWN0b3JcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqLCBvcHRpb25zKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICBpZiAob2JqLnNvbWUoaXRlbSA9PiBpdGVtLmNvbnN0cnVjdG9yICE9PSBQbGFpbk9iamVjdENvbnN0cnVjdG9yKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdvYmogbXVzdCBiZSBhcnJheSBvZiBwbGFpbiBvYmplY3RzJylcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKG9iai5jb25zdHJ1Y3RvciAhPT0gUGxhaW5PYmplY3RDb25zdHJ1Y3Rvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdvYmogbXVzdCBiZSBhbiBwbGFpbiBvYmplY3QnKVxuICAgIH1cbiAgfVxuXG4gIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHsgZGVlcDogdHJ1ZSwgZXhjbHVkZTogW10sIHBhcnNpbmdPcHRpb25zOiB7fSB9LCBvcHRpb25zKVxuXG4gIHJldHVybiBtYXAob2JqLCBmdW5jdGlvbiAoa2V5LCB2YWwpIHtcbiAgICByZXR1cm4gW1xuICAgICAgbWF0Y2hlcyhvcHRpb25zLmV4Y2x1ZGUsIGtleSkgPyBrZXkgOiBzbmFrZUNhc2Uoa2V5LCBvcHRpb25zLnBhcnNpbmdPcHRpb25zKSxcbiAgICAgIHZhbCxcbiAgICAgIG1hcHBlck9wdGlvbnMoa2V5LCB2YWwsIG9wdGlvbnMpXG4gICAgXVxuICB9LCBvcHRpb25zKVxufVxuXG5mdW5jdGlvbiBtYXRjaGVzIChwYXR0ZXJucywgdmFsdWUpIHtcbiAgcmV0dXJuIHBhdHRlcm5zLnNvbWUoZnVuY3Rpb24gKHBhdHRlcm4pIHtcbiAgICByZXR1cm4gdHlwZW9mIHBhdHRlcm4gPT09ICdzdHJpbmcnXG4gICAgICA/IHBhdHRlcm4gPT09IHZhbHVlXG4gICAgICA6IHBhdHRlcm4udGVzdCh2YWx1ZSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gbWFwcGVyT3B0aW9ucyAoa2V5LCB2YWwsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnMuc2hvdWxkUmVjdXJzZVxuICAgID8geyBzaG91bGRSZWN1cnNlOiBvcHRpb25zLnNob3VsZFJlY3Vyc2Uoa2V5LCB2YWwpIH1cbiAgICA6IHVuZGVmaW5lZFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/snakecase-keys/index.js\n"));

/***/ }),

/***/ "?599d":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/* (ignored) */

/***/ }),

/***/ "./node_modules/@clerk/backend/dist/chunk-4WPMFHK6.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/chunk-4WPMFHK6.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthStatus: () => (/* binding */ AuthStatus),\n/* harmony export */   constants: () => (/* binding */ constants),\n/* harmony export */   createAuthenticateRequest: () => (/* binding */ createAuthenticateRequest),\n/* harmony export */   createBackendApiClient: () => (/* binding */ createBackendApiClient),\n/* harmony export */   createClerkRequest: () => (/* binding */ createClerkRequest),\n/* harmony export */   debugRequestState: () => (/* binding */ debugRequestState),\n/* harmony export */   errorThrower: () => (/* binding */ errorThrower),\n/* harmony export */   makeAuthObjectSerializable: () => (/* binding */ makeAuthObjectSerializable),\n/* harmony export */   parsePublishableKey: () => (/* reexport safe */ _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_6__.parsePublishableKey),\n/* harmony export */   signedInAuthObject: () => (/* binding */ signedInAuthObject),\n/* harmony export */   signedOutAuthObject: () => (/* binding */ signedOutAuthObject),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-AT3FJU3M.mjs */ \"./node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs\");\n/* harmony import */ var _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-5JS2VYLU.mjs */ \"./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\");\n/* harmony import */ var _clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/error */ \"./node_modules/@clerk/shared/dist/error.mjs\");\n/* harmony import */ var snakecase_keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! snakecase-keys */ \"./node_modules/snakecase-keys/index.js\");\n/* harmony import */ var _clerk_shared_url__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/url */ \"./node_modules/@clerk/shared/dist/url.mjs\");\n/* harmony import */ var _clerk_shared_callWithRetry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @clerk/shared/callWithRetry */ \"./node_modules/@clerk/shared/dist/callWithRetry.mjs\");\n/* harmony import */ var _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @clerk/shared/keys */ \"./node_modules/@clerk/shared/dist/keys.mjs\");\n/* harmony import */ var _clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @clerk/shared/deprecated */ \"./node_modules/@clerk/shared/dist/deprecated.mjs\");\n/* harmony import */ var _clerk_shared_authorization__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @clerk/shared/authorization */ \"./node_modules/@clerk/shared/dist/authorization.mjs\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! cookie */ \"./node_modules/cookie/dist/index.js\");\n/* harmony import */ var _clerk_shared_pathToRegexp__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @clerk/shared/pathToRegexp */ \"./node_modules/@clerk/shared/dist/pathToRegexp.mjs\");\n\n\n\n// src/constants.ts\nvar API_URL = \"https://api.clerk.com\";\nvar API_VERSION = \"v1\";\nvar USER_AGENT = `${\"@clerk/backend\"}@${\"1.23.11\"}`;\nvar MAX_CACHE_LAST_UPDATED_AT_SECONDS = 5 * 60;\nvar JWKS_CACHE_TTL_MS = 1e3 * 60 * 60;\nvar SUPPORTED_BAPI_VERSION = \"2024-10-01\";\nvar Attributes = {\n  AuthToken: \"__clerkAuthToken\",\n  AuthSignature: \"__clerkAuthSignature\",\n  AuthStatus: \"__clerkAuthStatus\",\n  AuthReason: \"__clerkAuthReason\",\n  AuthMessage: \"__clerkAuthMessage\",\n  ClerkUrl: \"__clerkUrl\"\n};\nvar Cookies = {\n  Session: \"__session\",\n  Refresh: \"__refresh\",\n  ClientUat: \"__client_uat\",\n  Handshake: \"__clerk_handshake\",\n  DevBrowser: \"__clerk_db_jwt\",\n  RedirectCount: \"__clerk_redirect_count\"\n};\nvar QueryParameters = {\n  ClerkSynced: \"__clerk_synced\",\n  SuffixedCookies: \"suffixed_cookies\",\n  ClerkRedirectUrl: \"__clerk_redirect_url\",\n  // use the reference to Cookies to indicate that it's the same value\n  DevBrowser: Cookies.DevBrowser,\n  Handshake: Cookies.Handshake,\n  HandshakeHelp: \"__clerk_help\",\n  LegacyDevBrowser: \"__dev_session\",\n  HandshakeReason: \"__clerk_hs_reason\"\n};\nvar Headers2 = {\n  AuthToken: \"x-clerk-auth-token\",\n  AuthSignature: \"x-clerk-auth-signature\",\n  AuthStatus: \"x-clerk-auth-status\",\n  AuthReason: \"x-clerk-auth-reason\",\n  AuthMessage: \"x-clerk-auth-message\",\n  ClerkUrl: \"x-clerk-clerk-url\",\n  EnableDebug: \"x-clerk-debug\",\n  ClerkRequestData: \"x-clerk-request-data\",\n  ClerkRedirectTo: \"x-clerk-redirect-to\",\n  CloudFrontForwardedProto: \"cloudfront-forwarded-proto\",\n  Authorization: \"authorization\",\n  ForwardedPort: \"x-forwarded-port\",\n  ForwardedProto: \"x-forwarded-proto\",\n  ForwardedHost: \"x-forwarded-host\",\n  Accept: \"accept\",\n  Referrer: \"referer\",\n  UserAgent: \"user-agent\",\n  Origin: \"origin\",\n  Host: \"host\",\n  ContentType: \"content-type\",\n  SecFetchDest: \"sec-fetch-dest\",\n  Location: \"location\",\n  CacheControl: \"cache-control\"\n};\nvar ContentTypes = {\n  Json: \"application/json\"\n};\nvar constants = {\n  Attributes,\n  Cookies,\n  Headers: Headers2,\n  ContentTypes,\n  QueryParameters\n};\n\n// src/util/path.ts\nvar SEPARATOR = \"/\";\nvar MULTIPLE_SEPARATOR_REGEX = new RegExp(\"(?<!:)\" + SEPARATOR + \"{1,}\", \"g\");\nfunction joinPaths(...args) {\n  return args.filter((p) => p).join(SEPARATOR).replace(MULTIPLE_SEPARATOR_REGEX, SEPARATOR);\n}\n\n// src/api/endpoints/AbstractApi.ts\nvar AbstractAPI = class {\n  constructor(request) {\n    this.request = request;\n  }\n  requireId(id) {\n    if (!id) {\n      throw new Error(\"A valid resource ID is required.\");\n    }\n  }\n};\n\n// src/api/endpoints/AccountlessApplicationsAPI.ts\nvar basePath = \"/accountless_applications\";\nvar AccountlessApplicationAPI = class extends AbstractAPI {\n  async createAccountlessApplication() {\n    return this.request({\n      method: \"POST\",\n      path: basePath\n    });\n  }\n  async completeAccountlessApplicationOnboarding() {\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath, \"complete\")\n    });\n  }\n};\n\n// src/api/endpoints/AllowlistIdentifierApi.ts\nvar basePath2 = \"/allowlist_identifiers\";\nvar AllowlistIdentifierAPI = class extends AbstractAPI {\n  async getAllowlistIdentifierList() {\n    return this.request({\n      method: \"GET\",\n      path: basePath2,\n      queryParams: { paginated: true }\n    });\n  }\n  async createAllowlistIdentifier(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath2,\n      bodyParams: params\n    });\n  }\n  async deleteAllowlistIdentifier(allowlistIdentifierId) {\n    this.requireId(allowlistIdentifierId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath2, allowlistIdentifierId)\n    });\n  }\n};\n\n// src/api/endpoints/ClientApi.ts\nvar basePath3 = \"/clients\";\nvar ClientAPI = class extends AbstractAPI {\n  async getClientList(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: basePath3,\n      queryParams: { ...params, paginated: true }\n    });\n  }\n  async getClient(clientId) {\n    this.requireId(clientId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath3, clientId)\n    });\n  }\n  verifyClient(token) {\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath3, \"verify\"),\n      bodyParams: { token }\n    });\n  }\n};\n\n// src/api/endpoints/DomainApi.ts\nvar basePath4 = \"/domains\";\nvar DomainAPI = class extends AbstractAPI {\n  async deleteDomain(id) {\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath4, id)\n    });\n  }\n};\n\n// src/api/endpoints/EmailAddressApi.ts\nvar basePath5 = \"/email_addresses\";\nvar EmailAddressAPI = class extends AbstractAPI {\n  async getEmailAddress(emailAddressId) {\n    this.requireId(emailAddressId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath5, emailAddressId)\n    });\n  }\n  async createEmailAddress(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath5,\n      bodyParams: params\n    });\n  }\n  async updateEmailAddress(emailAddressId, params = {}) {\n    this.requireId(emailAddressId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath5, emailAddressId),\n      bodyParams: params\n    });\n  }\n  async deleteEmailAddress(emailAddressId) {\n    this.requireId(emailAddressId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath5, emailAddressId)\n    });\n  }\n};\n\n// src/api/endpoints/InvitationApi.ts\nvar basePath6 = \"/invitations\";\nvar InvitationAPI = class extends AbstractAPI {\n  async getInvitationList(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: basePath6,\n      queryParams: { ...params, paginated: true }\n    });\n  }\n  async createInvitation(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath6,\n      bodyParams: params\n    });\n  }\n  async revokeInvitation(invitationId) {\n    this.requireId(invitationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath6, invitationId, \"revoke\")\n    });\n  }\n};\n\n// src/api/endpoints/OrganizationApi.ts\nvar basePath7 = \"/organizations\";\nvar OrganizationAPI = class extends AbstractAPI {\n  async getOrganizationList(params) {\n    return this.request({\n      method: \"GET\",\n      path: basePath7,\n      queryParams: params\n    });\n  }\n  async createOrganization(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath7,\n      bodyParams: params\n    });\n  }\n  async getOrganization(params) {\n    const { includeMembersCount } = params;\n    const organizationIdOrSlug = \"organizationId\" in params ? params.organizationId : params.slug;\n    this.requireId(organizationIdOrSlug);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath7, organizationIdOrSlug),\n      queryParams: {\n        includeMembersCount\n      }\n    });\n  }\n  async updateOrganization(organizationId, params) {\n    this.requireId(organizationId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath7, organizationId),\n      bodyParams: params\n    });\n  }\n  async updateOrganizationLogo(organizationId, params) {\n    this.requireId(organizationId);\n    const formData = new _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.FormData();\n    formData.append(\"file\", params?.file);\n    if (params?.uploaderUserId) {\n      formData.append(\"uploader_user_id\", params?.uploaderUserId);\n    }\n    return this.request({\n      method: \"PUT\",\n      path: joinPaths(basePath7, organizationId, \"logo\"),\n      formData\n    });\n  }\n  async deleteOrganizationLogo(organizationId) {\n    this.requireId(organizationId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath7, organizationId, \"logo\")\n    });\n  }\n  async updateOrganizationMetadata(organizationId, params) {\n    this.requireId(organizationId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath7, organizationId, \"metadata\"),\n      bodyParams: params\n    });\n  }\n  async deleteOrganization(organizationId) {\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath7, organizationId)\n    });\n  }\n  async getOrganizationMembershipList(params) {\n    const { organizationId, ...queryParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath7, organizationId, \"memberships\"),\n      queryParams\n    });\n  }\n  async createOrganizationMembership(params) {\n    const { organizationId, ...bodyParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath7, organizationId, \"memberships\"),\n      bodyParams\n    });\n  }\n  async updateOrganizationMembership(params) {\n    const { organizationId, userId, ...bodyParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath7, organizationId, \"memberships\", userId),\n      bodyParams\n    });\n  }\n  async updateOrganizationMembershipMetadata(params) {\n    const { organizationId, userId, ...bodyParams } = params;\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath7, organizationId, \"memberships\", userId, \"metadata\"),\n      bodyParams\n    });\n  }\n  async deleteOrganizationMembership(params) {\n    const { organizationId, userId } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath7, organizationId, \"memberships\", userId)\n    });\n  }\n  async getOrganizationInvitationList(params) {\n    const { organizationId, ...queryParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath7, organizationId, \"invitations\"),\n      queryParams\n    });\n  }\n  async createOrganizationInvitation(params) {\n    const { organizationId, ...bodyParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath7, organizationId, \"invitations\"),\n      bodyParams\n    });\n  }\n  async getOrganizationInvitation(params) {\n    const { organizationId, invitationId } = params;\n    this.requireId(organizationId);\n    this.requireId(invitationId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath7, organizationId, \"invitations\", invitationId)\n    });\n  }\n  async revokeOrganizationInvitation(params) {\n    const { organizationId, invitationId, ...bodyParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath7, organizationId, \"invitations\", invitationId, \"revoke\"),\n      bodyParams\n    });\n  }\n  async getOrganizationDomainList(params) {\n    const { organizationId, ...queryParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath7, organizationId, \"domains\"),\n      queryParams\n    });\n  }\n  async createOrganizationDomain(params) {\n    const { organizationId, ...bodyParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath7, organizationId, \"domains\"),\n      bodyParams: {\n        ...bodyParams,\n        verified: bodyParams.verified ?? true\n      }\n    });\n  }\n  async updateOrganizationDomain(params) {\n    const { organizationId, domainId, ...bodyParams } = params;\n    this.requireId(organizationId);\n    this.requireId(domainId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath7, organizationId, \"domains\", domainId),\n      bodyParams\n    });\n  }\n  async deleteOrganizationDomain(params) {\n    const { organizationId, domainId } = params;\n    this.requireId(organizationId);\n    this.requireId(domainId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath7, organizationId, \"domains\", domainId)\n    });\n  }\n};\n\n// src/api/endpoints/PhoneNumberApi.ts\nvar basePath8 = \"/phone_numbers\";\nvar PhoneNumberAPI = class extends AbstractAPI {\n  async getPhoneNumber(phoneNumberId) {\n    this.requireId(phoneNumberId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath8, phoneNumberId)\n    });\n  }\n  async createPhoneNumber(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath8,\n      bodyParams: params\n    });\n  }\n  async updatePhoneNumber(phoneNumberId, params = {}) {\n    this.requireId(phoneNumberId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath8, phoneNumberId),\n      bodyParams: params\n    });\n  }\n  async deletePhoneNumber(phoneNumberId) {\n    this.requireId(phoneNumberId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath8, phoneNumberId)\n    });\n  }\n};\n\n// src/api/endpoints/RedirectUrlApi.ts\nvar basePath9 = \"/redirect_urls\";\nvar RedirectUrlAPI = class extends AbstractAPI {\n  async getRedirectUrlList() {\n    return this.request({\n      method: \"GET\",\n      path: basePath9,\n      queryParams: { paginated: true }\n    });\n  }\n  async getRedirectUrl(redirectUrlId) {\n    this.requireId(redirectUrlId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath9, redirectUrlId)\n    });\n  }\n  async createRedirectUrl(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath9,\n      bodyParams: params\n    });\n  }\n  async deleteRedirectUrl(redirectUrlId) {\n    this.requireId(redirectUrlId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath9, redirectUrlId)\n    });\n  }\n};\n\n// src/api/endpoints/SessionApi.ts\nvar basePath10 = \"/sessions\";\nvar SessionAPI = class extends AbstractAPI {\n  async getSessionList(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: basePath10,\n      queryParams: { ...params, paginated: true }\n    });\n  }\n  async getSession(sessionId) {\n    this.requireId(sessionId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath10, sessionId)\n    });\n  }\n  async revokeSession(sessionId) {\n    this.requireId(sessionId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath10, sessionId, \"revoke\")\n    });\n  }\n  async verifySession(sessionId, token) {\n    this.requireId(sessionId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath10, sessionId, \"verify\"),\n      bodyParams: { token }\n    });\n  }\n  async getToken(sessionId, template) {\n    this.requireId(sessionId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath10, sessionId, \"tokens\", template || \"\")\n    });\n  }\n  async refreshSession(sessionId, params) {\n    this.requireId(sessionId);\n    const { suffixed_cookies, ...restParams } = params;\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath10, sessionId, \"refresh\"),\n      bodyParams: restParams,\n      queryParams: { suffixed_cookies }\n    });\n  }\n};\n\n// src/api/endpoints/SignInTokenApi.ts\nvar basePath11 = \"/sign_in_tokens\";\nvar SignInTokenAPI = class extends AbstractAPI {\n  async createSignInToken(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath11,\n      bodyParams: params\n    });\n  }\n  async revokeSignInToken(signInTokenId) {\n    this.requireId(signInTokenId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath11, signInTokenId, \"revoke\")\n    });\n  }\n};\n\n// src/api/endpoints/UserApi.ts\nvar basePath12 = \"/users\";\nvar UserAPI = class extends AbstractAPI {\n  async getUserList(params = {}) {\n    const { limit, offset, orderBy, ...userCountParams } = params;\n    const [data, totalCount] = await Promise.all([\n      this.request({\n        method: \"GET\",\n        path: basePath12,\n        queryParams: params\n      }),\n      this.getCount(userCountParams)\n    ]);\n    return { data, totalCount };\n  }\n  async getUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath12, userId)\n    });\n  }\n  async createUser(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath12,\n      bodyParams: params\n    });\n  }\n  async updateUser(userId, params = {}) {\n    this.requireId(userId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath12, userId),\n      bodyParams: params\n    });\n  }\n  async updateUserProfileImage(userId, params) {\n    this.requireId(userId);\n    const formData = new _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.FormData();\n    formData.append(\"file\", params?.file);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"profile_image\"),\n      formData\n    });\n  }\n  async updateUserMetadata(userId, params) {\n    this.requireId(userId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath12, userId, \"metadata\"),\n      bodyParams: params\n    });\n  }\n  async deleteUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath12, userId)\n    });\n  }\n  async getCount(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath12, \"count\"),\n      queryParams: params\n    });\n  }\n  async getUserOauthAccessToken(userId, provider) {\n    this.requireId(userId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath12, userId, \"oauth_access_tokens\", provider),\n      queryParams: { paginated: true }\n    });\n  }\n  async disableUserMFA(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath12, userId, \"mfa\")\n    });\n  }\n  async getOrganizationMembershipList(params) {\n    const { userId, limit, offset } = params;\n    this.requireId(userId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath12, userId, \"organization_memberships\"),\n      queryParams: { limit, offset }\n    });\n  }\n  async verifyPassword(params) {\n    const { userId, password } = params;\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"verify_password\"),\n      bodyParams: { password }\n    });\n  }\n  async verifyTOTP(params) {\n    const { userId, code } = params;\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"verify_totp\"),\n      bodyParams: { code }\n    });\n  }\n  async banUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"ban\")\n    });\n  }\n  async unbanUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"unban\")\n    });\n  }\n  async lockUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"lock\")\n    });\n  }\n  async unlockUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"unlock\")\n    });\n  }\n  async deleteUserProfileImage(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath12, userId, \"profile_image\")\n    });\n  }\n};\n\n// src/api/endpoints/SamlConnectionApi.ts\nvar basePath13 = \"/saml_connections\";\nvar SamlConnectionAPI = class extends AbstractAPI {\n  async getSamlConnectionList(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: basePath13,\n      queryParams: params\n    });\n  }\n  async createSamlConnection(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath13,\n      bodyParams: params\n    });\n  }\n  async getSamlConnection(samlConnectionId) {\n    this.requireId(samlConnectionId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath13, samlConnectionId)\n    });\n  }\n  async updateSamlConnection(samlConnectionId, params = {}) {\n    this.requireId(samlConnectionId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath13, samlConnectionId),\n      bodyParams: params\n    });\n  }\n  async deleteSamlConnection(samlConnectionId) {\n    this.requireId(samlConnectionId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath13, samlConnectionId)\n    });\n  }\n};\n\n// src/api/endpoints/TestingTokenApi.ts\nvar basePath14 = \"/testing_tokens\";\nvar TestingTokenAPI = class extends AbstractAPI {\n  async createTestingToken() {\n    return this.request({\n      method: \"POST\",\n      path: basePath14\n    });\n  }\n};\n\n// src/api/request.ts\n\n\n\n// src/util/shared.ts\n\n\n\n\n\n\nvar errorThrower = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.buildErrorThrower)({ packageName: \"@clerk/backend\" });\nvar { isDevOrStagingUrl } = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_6__.createDevOrStagingUrlCache)();\n\n// src/util/optionsAssertions.ts\nfunction assertValidSecretKey(val) {\n  if (!val || typeof val !== \"string\") {\n    throw Error(\"Missing Clerk Secret Key. Go to https://dashboard.clerk.com and get your key for your instance.\");\n  }\n}\nfunction assertValidPublishableKey(val) {\n  (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_6__.parsePublishableKey)(val, { fatal: true });\n}\n\n// src/api/resources/AccountlessApplication.ts\nvar AccountlessApplication = class _AccountlessApplication {\n  constructor(publishableKey, secretKey, claimUrl, apiKeysUrl) {\n    this.publishableKey = publishableKey;\n    this.secretKey = secretKey;\n    this.claimUrl = claimUrl;\n    this.apiKeysUrl = apiKeysUrl;\n  }\n  static fromJSON(data) {\n    return new _AccountlessApplication(data.publishable_key, data.secret_key, data.claim_url, data.api_keys_url);\n  }\n};\n\n// src/api/resources/AllowlistIdentifier.ts\nvar AllowlistIdentifier = class _AllowlistIdentifier {\n  constructor(id, identifier, createdAt, updatedAt, invitationId) {\n    this.id = id;\n    this.identifier = identifier;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.invitationId = invitationId;\n  }\n  static fromJSON(data) {\n    return new _AllowlistIdentifier(data.id, data.identifier, data.created_at, data.updated_at, data.invitation_id);\n  }\n};\n\n// src/api/resources/Session.ts\nvar SessionActivity = class _SessionActivity {\n  constructor(id, isMobile, ipAddress, city, country, browserVersion, browserName, deviceType) {\n    this.id = id;\n    this.isMobile = isMobile;\n    this.ipAddress = ipAddress;\n    this.city = city;\n    this.country = country;\n    this.browserVersion = browserVersion;\n    this.browserName = browserName;\n    this.deviceType = deviceType;\n  }\n  static fromJSON(data) {\n    return new _SessionActivity(\n      data.id,\n      data.is_mobile,\n      data.ip_address,\n      data.city,\n      data.country,\n      data.browser_version,\n      data.browser_name,\n      data.device_type\n    );\n  }\n};\nvar Session = class _Session {\n  constructor(id, clientId, userId, status, lastActiveAt, expireAt, abandonAt, createdAt, updatedAt, lastActiveOrganizationId, latestActivity, actor = null) {\n    this.id = id;\n    this.clientId = clientId;\n    this.userId = userId;\n    this.status = status;\n    this.lastActiveAt = lastActiveAt;\n    this.expireAt = expireAt;\n    this.abandonAt = abandonAt;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.lastActiveOrganizationId = lastActiveOrganizationId;\n    this.latestActivity = latestActivity;\n    this.actor = actor;\n  }\n  static fromJSON(data) {\n    return new _Session(\n      data.id,\n      data.client_id,\n      data.user_id,\n      data.status,\n      data.last_active_at,\n      data.expire_at,\n      data.abandon_at,\n      data.created_at,\n      data.updated_at,\n      data.last_active_organization_id,\n      data.latest_activity && SessionActivity.fromJSON(data.latest_activity),\n      data.actor\n    );\n  }\n};\n\n// src/api/resources/Client.ts\nvar Client = class _Client {\n  constructor(id, sessionIds, sessions, signInId, signUpId, lastActiveSessionId, createdAt, updatedAt) {\n    this.id = id;\n    this.sessionIds = sessionIds;\n    this.sessions = sessions;\n    this.signInId = signInId;\n    this.signUpId = signUpId;\n    this.lastActiveSessionId = lastActiveSessionId;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n  }\n  static fromJSON(data) {\n    return new _Client(\n      data.id,\n      data.session_ids,\n      data.sessions.map((x) => Session.fromJSON(x)),\n      data.sign_in_id,\n      data.sign_up_id,\n      data.last_active_session_id,\n      data.created_at,\n      data.updated_at\n    );\n  }\n};\n\n// src/api/resources/Cookies.ts\nvar Cookies2 = class _Cookies {\n  constructor(cookies) {\n    this.cookies = cookies;\n  }\n  static fromJSON(data) {\n    return new _Cookies(data.cookies);\n  }\n};\n\n// src/api/resources/DeletedObject.ts\nvar DeletedObject = class _DeletedObject {\n  constructor(object, id, slug, deleted) {\n    this.object = object;\n    this.id = id;\n    this.slug = slug;\n    this.deleted = deleted;\n  }\n  static fromJSON(data) {\n    return new _DeletedObject(data.object, data.id || null, data.slug || null, data.deleted);\n  }\n};\n\n// src/api/resources/Email.ts\nvar Email = class _Email {\n  constructor(id, fromEmailName, emailAddressId, toEmailAddress, subject, body, bodyPlain, status, slug, data, deliveredByClerk) {\n    this.id = id;\n    this.fromEmailName = fromEmailName;\n    this.emailAddressId = emailAddressId;\n    this.toEmailAddress = toEmailAddress;\n    this.subject = subject;\n    this.body = body;\n    this.bodyPlain = bodyPlain;\n    this.status = status;\n    this.slug = slug;\n    this.data = data;\n    this.deliveredByClerk = deliveredByClerk;\n  }\n  static fromJSON(data) {\n    return new _Email(\n      data.id,\n      data.from_email_name,\n      data.email_address_id,\n      data.to_email_address,\n      data.subject,\n      data.body,\n      data.body_plain,\n      data.status,\n      data.slug,\n      data.data,\n      data.delivered_by_clerk\n    );\n  }\n};\n\n// src/api/resources/IdentificationLink.ts\nvar IdentificationLink = class _IdentificationLink {\n  constructor(id, type) {\n    this.id = id;\n    this.type = type;\n  }\n  static fromJSON(data) {\n    return new _IdentificationLink(data.id, data.type);\n  }\n};\n\n// src/api/resources/Verification.ts\nvar Verification = class _Verification {\n  constructor(status, strategy, externalVerificationRedirectURL = null, attempts = null, expireAt = null, nonce = null, message = null) {\n    this.status = status;\n    this.strategy = strategy;\n    this.externalVerificationRedirectURL = externalVerificationRedirectURL;\n    this.attempts = attempts;\n    this.expireAt = expireAt;\n    this.nonce = nonce;\n    this.message = message;\n  }\n  static fromJSON(data) {\n    return new _Verification(\n      data.status,\n      data.strategy,\n      data.external_verification_redirect_url ? new URL(data.external_verification_redirect_url) : null,\n      data.attempts,\n      data.expire_at,\n      data.nonce\n    );\n  }\n};\n\n// src/api/resources/EmailAddress.ts\nvar EmailAddress = class _EmailAddress {\n  constructor(id, emailAddress, verification, linkedTo) {\n    this.id = id;\n    this.emailAddress = emailAddress;\n    this.verification = verification;\n    this.linkedTo = linkedTo;\n  }\n  static fromJSON(data) {\n    return new _EmailAddress(\n      data.id,\n      data.email_address,\n      data.verification && Verification.fromJSON(data.verification),\n      data.linked_to.map((link) => IdentificationLink.fromJSON(link))\n    );\n  }\n};\n\n// src/api/resources/ExternalAccount.ts\nvar ExternalAccount = class _ExternalAccount {\n  constructor(id, provider, identificationId, externalId, approvedScopes, emailAddress, firstName, lastName, imageUrl, username, publicMetadata = {}, label, verification) {\n    this.id = id;\n    this.provider = provider;\n    this.identificationId = identificationId;\n    this.externalId = externalId;\n    this.approvedScopes = approvedScopes;\n    this.emailAddress = emailAddress;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.imageUrl = imageUrl;\n    this.username = username;\n    this.publicMetadata = publicMetadata;\n    this.label = label;\n    this.verification = verification;\n  }\n  static fromJSON(data) {\n    return new _ExternalAccount(\n      data.id,\n      data.provider,\n      data.identification_id,\n      data.provider_user_id,\n      data.approved_scopes,\n      data.email_address,\n      data.first_name,\n      data.last_name,\n      data.image_url || \"\",\n      data.username,\n      data.public_metadata,\n      data.label,\n      data.verification && Verification.fromJSON(data.verification)\n    );\n  }\n};\n\n// src/api/resources/Invitation.ts\nvar Invitation = class _Invitation {\n  constructor(id, emailAddress, publicMetadata, createdAt, updatedAt, status, url, revoked) {\n    this.id = id;\n    this.emailAddress = emailAddress;\n    this.publicMetadata = publicMetadata;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.status = status;\n    this.url = url;\n    this.revoked = revoked;\n  }\n  static fromJSON(data) {\n    return new _Invitation(\n      data.id,\n      data.email_address,\n      data.public_metadata,\n      data.created_at,\n      data.updated_at,\n      data.status,\n      data.url,\n      data.revoked\n    );\n  }\n};\n\n// src/api/resources/JSON.ts\nvar ObjectType = {\n  AccountlessApplication: \"accountless_application\",\n  AllowlistIdentifier: \"allowlist_identifier\",\n  Client: \"client\",\n  Cookies: \"cookies\",\n  Email: \"email\",\n  EmailAddress: \"email_address\",\n  ExternalAccount: \"external_account\",\n  FacebookAccount: \"facebook_account\",\n  GoogleAccount: \"google_account\",\n  Invitation: \"invitation\",\n  OauthAccessToken: \"oauth_access_token\",\n  Organization: \"organization\",\n  OrganizationInvitation: \"organization_invitation\",\n  OrganizationMembership: \"organization_membership\",\n  PhoneNumber: \"phone_number\",\n  RedirectUrl: \"redirect_url\",\n  SamlAccount: \"saml_account\",\n  Session: \"session\",\n  SignInAttempt: \"sign_in_attempt\",\n  SignInToken: \"sign_in_token\",\n  SignUpAttempt: \"sign_up_attempt\",\n  SmsMessage: \"sms_message\",\n  User: \"user\",\n  Web3Wallet: \"web3_wallet\",\n  Token: \"token\",\n  TotalCount: \"total_count\",\n  TestingToken: \"testing_token\",\n  Role: \"role\",\n  Permission: \"permission\"\n};\n\n// src/api/resources/OauthAccessToken.ts\nvar OauthAccessToken = class _OauthAccessToken {\n  constructor(externalAccountId, provider, token, publicMetadata = {}, label, scopes, tokenSecret) {\n    this.externalAccountId = externalAccountId;\n    this.provider = provider;\n    this.token = token;\n    this.publicMetadata = publicMetadata;\n    this.label = label;\n    this.scopes = scopes;\n    this.tokenSecret = tokenSecret;\n  }\n  static fromJSON(data) {\n    return new _OauthAccessToken(\n      data.external_account_id,\n      data.provider,\n      data.token,\n      data.public_metadata,\n      data.label || \"\",\n      data.scopes,\n      data.token_secret\n    );\n  }\n};\n\n// src/api/resources/Organization.ts\nvar Organization = class _Organization {\n  constructor(id, name, slug, imageUrl, hasImage, createdAt, updatedAt, publicMetadata = {}, privateMetadata = {}, maxAllowedMemberships, adminDeleteEnabled, membersCount, createdBy) {\n    this.id = id;\n    this.name = name;\n    this.slug = slug;\n    this.imageUrl = imageUrl;\n    this.hasImage = hasImage;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.publicMetadata = publicMetadata;\n    this.privateMetadata = privateMetadata;\n    this.maxAllowedMemberships = maxAllowedMemberships;\n    this.adminDeleteEnabled = adminDeleteEnabled;\n    this.membersCount = membersCount;\n    this.createdBy = createdBy;\n  }\n  static fromJSON(data) {\n    return new _Organization(\n      data.id,\n      data.name,\n      data.slug,\n      data.image_url || \"\",\n      data.has_image,\n      data.created_at,\n      data.updated_at,\n      data.public_metadata,\n      data.private_metadata,\n      data.max_allowed_memberships,\n      data.admin_delete_enabled,\n      data.members_count,\n      data.created_by\n    );\n  }\n};\n\n// src/api/resources/OrganizationInvitation.ts\nvar OrganizationInvitation = class _OrganizationInvitation {\n  constructor(id, emailAddress, role, organizationId, createdAt, updatedAt, status, publicMetadata = {}, privateMetadata = {}) {\n    this.id = id;\n    this.emailAddress = emailAddress;\n    this.role = role;\n    this.organizationId = organizationId;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.status = status;\n    this.publicMetadata = publicMetadata;\n    this.privateMetadata = privateMetadata;\n  }\n  static fromJSON(data) {\n    return new _OrganizationInvitation(\n      data.id,\n      data.email_address,\n      data.role,\n      data.organization_id,\n      data.created_at,\n      data.updated_at,\n      data.status,\n      data.public_metadata,\n      data.private_metadata\n    );\n  }\n};\n\n// src/api/resources/OrganizationMembership.ts\nvar OrganizationMembership = class _OrganizationMembership {\n  constructor(id, role, permissions, publicMetadata = {}, privateMetadata = {}, createdAt, updatedAt, organization, publicUserData) {\n    this.id = id;\n    this.role = role;\n    this.permissions = permissions;\n    this.publicMetadata = publicMetadata;\n    this.privateMetadata = privateMetadata;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.organization = organization;\n    this.publicUserData = publicUserData;\n  }\n  static fromJSON(data) {\n    return new _OrganizationMembership(\n      data.id,\n      data.role,\n      data.permissions,\n      data.public_metadata,\n      data.private_metadata,\n      data.created_at,\n      data.updated_at,\n      Organization.fromJSON(data.organization),\n      OrganizationMembershipPublicUserData.fromJSON(data.public_user_data)\n    );\n  }\n};\nvar OrganizationMembershipPublicUserData = class _OrganizationMembershipPublicUserData {\n  constructor(identifier, firstName, lastName, imageUrl, hasImage, userId) {\n    this.identifier = identifier;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.imageUrl = imageUrl;\n    this.hasImage = hasImage;\n    this.userId = userId;\n  }\n  static fromJSON(data) {\n    return new _OrganizationMembershipPublicUserData(\n      data.identifier,\n      data.first_name,\n      data.last_name,\n      data.image_url,\n      data.has_image,\n      data.user_id\n    );\n  }\n};\n\n// src/api/resources/PhoneNumber.ts\nvar PhoneNumber = class _PhoneNumber {\n  constructor(id, phoneNumber, reservedForSecondFactor, defaultSecondFactor, verification, linkedTo) {\n    this.id = id;\n    this.phoneNumber = phoneNumber;\n    this.reservedForSecondFactor = reservedForSecondFactor;\n    this.defaultSecondFactor = defaultSecondFactor;\n    this.verification = verification;\n    this.linkedTo = linkedTo;\n  }\n  static fromJSON(data) {\n    return new _PhoneNumber(\n      data.id,\n      data.phone_number,\n      data.reserved_for_second_factor,\n      data.default_second_factor,\n      data.verification && Verification.fromJSON(data.verification),\n      data.linked_to.map((link) => IdentificationLink.fromJSON(link))\n    );\n  }\n};\n\n// src/api/resources/RedirectUrl.ts\nvar RedirectUrl = class _RedirectUrl {\n  constructor(id, url, createdAt, updatedAt) {\n    this.id = id;\n    this.url = url;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n  }\n  static fromJSON(data) {\n    return new _RedirectUrl(data.id, data.url, data.created_at, data.updated_at);\n  }\n};\n\n// src/api/resources/SignInTokens.ts\nvar SignInToken = class _SignInToken {\n  constructor(id, userId, token, status, url, createdAt, updatedAt) {\n    this.id = id;\n    this.userId = userId;\n    this.token = token;\n    this.status = status;\n    this.url = url;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n  }\n  static fromJSON(data) {\n    return new _SignInToken(data.id, data.user_id, data.token, data.status, data.url, data.created_at, data.updated_at);\n  }\n};\n\n// src/api/resources/SMSMessage.ts\nvar SMSMessage = class _SMSMessage {\n  constructor(id, fromPhoneNumber, toPhoneNumber, message, status, phoneNumberId, data) {\n    this.id = id;\n    this.fromPhoneNumber = fromPhoneNumber;\n    this.toPhoneNumber = toPhoneNumber;\n    this.message = message;\n    this.status = status;\n    this.phoneNumberId = phoneNumberId;\n    this.data = data;\n  }\n  static fromJSON(data) {\n    return new _SMSMessage(\n      data.id,\n      data.from_phone_number,\n      data.to_phone_number,\n      data.message,\n      data.status,\n      data.phone_number_id,\n      data.data\n    );\n  }\n};\n\n// src/api/resources/Token.ts\nvar Token = class _Token {\n  constructor(jwt) {\n    this.jwt = jwt;\n  }\n  static fromJSON(data) {\n    return new _Token(data.jwt);\n  }\n};\n\n// src/api/resources/SamlConnection.ts\nvar SamlAccountConnection = class _SamlAccountConnection {\n  constructor(id, name, domain, active, provider, syncUserAttributes, allowSubdomains, allowIdpInitiated, createdAt, updatedAt) {\n    this.id = id;\n    this.name = name;\n    this.domain = domain;\n    this.active = active;\n    this.provider = provider;\n    this.syncUserAttributes = syncUserAttributes;\n    this.allowSubdomains = allowSubdomains;\n    this.allowIdpInitiated = allowIdpInitiated;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n  }\n  static fromJSON(data) {\n    return new _SamlAccountConnection(\n      data.id,\n      data.name,\n      data.domain,\n      data.active,\n      data.provider,\n      data.sync_user_attributes,\n      data.allow_subdomains,\n      data.allow_idp_initiated,\n      data.created_at,\n      data.updated_at\n    );\n  }\n};\n\n// src/api/resources/SamlAccount.ts\nvar SamlAccount = class _SamlAccount {\n  constructor(id, provider, providerUserId, active, emailAddress, firstName, lastName, verification, samlConnection) {\n    this.id = id;\n    this.provider = provider;\n    this.providerUserId = providerUserId;\n    this.active = active;\n    this.emailAddress = emailAddress;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.verification = verification;\n    this.samlConnection = samlConnection;\n  }\n  static fromJSON(data) {\n    return new _SamlAccount(\n      data.id,\n      data.provider,\n      data.provider_user_id,\n      data.active,\n      data.email_address,\n      data.first_name,\n      data.last_name,\n      data.verification && Verification.fromJSON(data.verification),\n      data.saml_connection && SamlAccountConnection.fromJSON(data.saml_connection)\n    );\n  }\n};\n\n// src/api/resources/Web3Wallet.ts\nvar Web3Wallet = class _Web3Wallet {\n  constructor(id, web3Wallet, verification) {\n    this.id = id;\n    this.web3Wallet = web3Wallet;\n    this.verification = verification;\n  }\n  static fromJSON(data) {\n    return new _Web3Wallet(data.id, data.web3_wallet, data.verification && Verification.fromJSON(data.verification));\n  }\n};\n\n// src/api/resources/User.ts\nvar User = class _User {\n  constructor(id, passwordEnabled, totpEnabled, backupCodeEnabled, twoFactorEnabled, banned, locked, createdAt, updatedAt, imageUrl, hasImage, primaryEmailAddressId, primaryPhoneNumberId, primaryWeb3WalletId, lastSignInAt, externalId, username, firstName, lastName, publicMetadata = {}, privateMetadata = {}, unsafeMetadata = {}, emailAddresses = [], phoneNumbers = [], web3Wallets = [], externalAccounts = [], samlAccounts = [], lastActiveAt, createOrganizationEnabled, createOrganizationsLimit = null, deleteSelfEnabled, legalAcceptedAt) {\n    this.id = id;\n    this.passwordEnabled = passwordEnabled;\n    this.totpEnabled = totpEnabled;\n    this.backupCodeEnabled = backupCodeEnabled;\n    this.twoFactorEnabled = twoFactorEnabled;\n    this.banned = banned;\n    this.locked = locked;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.imageUrl = imageUrl;\n    this.hasImage = hasImage;\n    this.primaryEmailAddressId = primaryEmailAddressId;\n    this.primaryPhoneNumberId = primaryPhoneNumberId;\n    this.primaryWeb3WalletId = primaryWeb3WalletId;\n    this.lastSignInAt = lastSignInAt;\n    this.externalId = externalId;\n    this.username = username;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.publicMetadata = publicMetadata;\n    this.privateMetadata = privateMetadata;\n    this.unsafeMetadata = unsafeMetadata;\n    this.emailAddresses = emailAddresses;\n    this.phoneNumbers = phoneNumbers;\n    this.web3Wallets = web3Wallets;\n    this.externalAccounts = externalAccounts;\n    this.samlAccounts = samlAccounts;\n    this.lastActiveAt = lastActiveAt;\n    this.createOrganizationEnabled = createOrganizationEnabled;\n    this.createOrganizationsLimit = createOrganizationsLimit;\n    this.deleteSelfEnabled = deleteSelfEnabled;\n    this.legalAcceptedAt = legalAcceptedAt;\n  }\n  static fromJSON(data) {\n    return new _User(\n      data.id,\n      data.password_enabled,\n      data.totp_enabled,\n      data.backup_code_enabled,\n      data.two_factor_enabled,\n      data.banned,\n      data.locked,\n      data.created_at,\n      data.updated_at,\n      data.image_url,\n      data.has_image,\n      data.primary_email_address_id,\n      data.primary_phone_number_id,\n      data.primary_web3_wallet_id,\n      data.last_sign_in_at,\n      data.external_id,\n      data.username,\n      data.first_name,\n      data.last_name,\n      data.public_metadata,\n      data.private_metadata,\n      data.unsafe_metadata,\n      (data.email_addresses || []).map((x) => EmailAddress.fromJSON(x)),\n      (data.phone_numbers || []).map((x) => PhoneNumber.fromJSON(x)),\n      (data.web3_wallets || []).map((x) => Web3Wallet.fromJSON(x)),\n      (data.external_accounts || []).map((x) => ExternalAccount.fromJSON(x)),\n      (data.saml_accounts || []).map((x) => SamlAccount.fromJSON(x)),\n      data.last_active_at,\n      data.create_organization_enabled,\n      data.create_organizations_limit,\n      data.delete_self_enabled,\n      data.legal_accepted_at\n    );\n  }\n  get primaryEmailAddress() {\n    return this.emailAddresses.find(({ id }) => id === this.primaryEmailAddressId) ?? null;\n  }\n  get primaryPhoneNumber() {\n    return this.phoneNumbers.find(({ id }) => id === this.primaryPhoneNumberId) ?? null;\n  }\n  get primaryWeb3Wallet() {\n    return this.web3Wallets.find(({ id }) => id === this.primaryWeb3WalletId) ?? null;\n  }\n  get fullName() {\n    return [this.firstName, this.lastName].join(\" \").trim() || null;\n  }\n};\n\n// src/api/resources/Deserializer.ts\nfunction deserialize(payload) {\n  let data, totalCount;\n  if (Array.isArray(payload)) {\n    const data2 = payload.map((item) => jsonToObject(item));\n    return { data: data2 };\n  } else if (isPaginated(payload)) {\n    data = payload.data.map((item) => jsonToObject(item));\n    totalCount = payload.total_count;\n    return { data, totalCount };\n  } else {\n    return { data: jsonToObject(payload) };\n  }\n}\nfunction isPaginated(payload) {\n  if (!payload || typeof payload !== \"object\" || !(\"data\" in payload)) {\n    return false;\n  }\n  return Array.isArray(payload.data) && payload.data !== void 0;\n}\nfunction getCount(item) {\n  return item.total_count;\n}\nfunction jsonToObject(item) {\n  if (typeof item !== \"string\" && \"object\" in item && \"deleted\" in item) {\n    return DeletedObject.fromJSON(item);\n  }\n  switch (item.object) {\n    case ObjectType.AccountlessApplication:\n      return AccountlessApplication.fromJSON(item);\n    case ObjectType.AllowlistIdentifier:\n      return AllowlistIdentifier.fromJSON(item);\n    case ObjectType.Client:\n      return Client.fromJSON(item);\n    case ObjectType.Cookies:\n      return Cookies2.fromJSON(item);\n    case ObjectType.EmailAddress:\n      return EmailAddress.fromJSON(item);\n    case ObjectType.Email:\n      return Email.fromJSON(item);\n    case ObjectType.Invitation:\n      return Invitation.fromJSON(item);\n    case ObjectType.OauthAccessToken:\n      return OauthAccessToken.fromJSON(item);\n    case ObjectType.Organization:\n      return Organization.fromJSON(item);\n    case ObjectType.OrganizationInvitation:\n      return OrganizationInvitation.fromJSON(item);\n    case ObjectType.OrganizationMembership:\n      return OrganizationMembership.fromJSON(item);\n    case ObjectType.PhoneNumber:\n      return PhoneNumber.fromJSON(item);\n    case ObjectType.RedirectUrl:\n      return RedirectUrl.fromJSON(item);\n    case ObjectType.SignInToken:\n      return SignInToken.fromJSON(item);\n    case ObjectType.Session:\n      return Session.fromJSON(item);\n    case ObjectType.SmsMessage:\n      return SMSMessage.fromJSON(item);\n    case ObjectType.Token:\n      return Token.fromJSON(item);\n    case ObjectType.TotalCount:\n      return getCount(item);\n    case ObjectType.User:\n      return User.fromJSON(item);\n    default:\n      return item;\n  }\n}\n\n// src/api/request.ts\nfunction buildRequest(options) {\n  const requestFn = async (requestOptions) => {\n    const {\n      secretKey,\n      requireSecretKey = true,\n      apiUrl = API_URL,\n      apiVersion = API_VERSION,\n      userAgent = USER_AGENT\n    } = options;\n    const { path, method, queryParams, headerParams, bodyParams, formData } = requestOptions;\n    if (requireSecretKey) {\n      assertValidSecretKey(secretKey);\n    }\n    const url = joinPaths(apiUrl, apiVersion, path);\n    const finalUrl = new URL(url);\n    if (queryParams) {\n      const snakecasedQueryParams = snakecase_keys__WEBPACK_IMPORTED_MODULE_3__({ ...queryParams });\n      for (const [key, val] of Object.entries(snakecasedQueryParams)) {\n        if (val) {\n          [val].flat().forEach((v) => finalUrl.searchParams.append(key, v));\n        }\n      }\n    }\n    const headers = {\n      Authorization: `Bearer ${secretKey}`,\n      \"Clerk-API-Version\": SUPPORTED_BAPI_VERSION,\n      \"User-Agent\": userAgent,\n      ...headerParams\n    };\n    let res;\n    try {\n      if (formData) {\n        res = await _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.fetch(finalUrl.href, {\n          method,\n          headers,\n          body: formData\n        });\n      } else {\n        headers[\"Content-Type\"] = \"application/json\";\n        const hasBody = method !== \"GET\" && bodyParams && Object.keys(bodyParams).length > 0;\n        const body = hasBody ? { body: JSON.stringify(snakecase_keys__WEBPACK_IMPORTED_MODULE_3__(bodyParams, { deep: false })) } : null;\n        res = await _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.fetch(finalUrl.href, {\n          method,\n          headers,\n          ...body\n        });\n      }\n      const isJSONResponse = res?.headers && res.headers?.get(constants.Headers.ContentType) === constants.ContentTypes.Json;\n      const responseBody = await (isJSONResponse ? res.json() : res.text());\n      if (!res.ok) {\n        return {\n          data: null,\n          errors: parseErrors(responseBody),\n          status: res?.status,\n          statusText: res?.statusText,\n          clerkTraceId: getTraceId(responseBody, res?.headers)\n        };\n      }\n      return {\n        ...deserialize(responseBody),\n        errors: null\n      };\n    } catch (err) {\n      if (err instanceof Error) {\n        return {\n          data: null,\n          errors: [\n            {\n              code: \"unexpected_error\",\n              message: err.message || \"Unexpected error\"\n            }\n          ],\n          clerkTraceId: getTraceId(err, res?.headers)\n        };\n      }\n      return {\n        data: null,\n        errors: parseErrors(err),\n        status: res?.status,\n        statusText: res?.statusText,\n        clerkTraceId: getTraceId(err, res?.headers)\n      };\n    }\n  };\n  return withLegacyRequestReturn(requestFn);\n}\nfunction getTraceId(data, headers) {\n  if (data && typeof data === \"object\" && \"clerk_trace_id\" in data && typeof data.clerk_trace_id === \"string\") {\n    return data.clerk_trace_id;\n  }\n  const cfRay = headers?.get(\"cf-ray\");\n  return cfRay || \"\";\n}\nfunction parseErrors(data) {\n  if (!!data && typeof data === \"object\" && \"errors\" in data) {\n    const errors = data.errors;\n    return errors.length > 0 ? errors.map(_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.parseError) : [];\n  }\n  return [];\n}\nfunction withLegacyRequestReturn(cb) {\n  return async (...args) => {\n    const { data, errors, totalCount, status, statusText, clerkTraceId } = await cb(...args);\n    if (errors) {\n      const error = new _clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.ClerkAPIResponseError(statusText || \"\", {\n        data: [],\n        status,\n        clerkTraceId\n      });\n      error.errors = errors;\n      throw error;\n    }\n    if (typeof totalCount !== \"undefined\") {\n      return { data, totalCount };\n    }\n    return data;\n  };\n}\n\n// src/api/factory.ts\nfunction createBackendApiClient(options) {\n  const request = buildRequest(options);\n  return {\n    __experimental_accountlessApplications: new AccountlessApplicationAPI(\n      buildRequest({ ...options, requireSecretKey: false })\n    ),\n    allowlistIdentifiers: new AllowlistIdentifierAPI(request),\n    clients: new ClientAPI(request),\n    emailAddresses: new EmailAddressAPI(request),\n    invitations: new InvitationAPI(request),\n    organizations: new OrganizationAPI(request),\n    phoneNumbers: new PhoneNumberAPI(request),\n    redirectUrls: new RedirectUrlAPI(request),\n    sessions: new SessionAPI(request),\n    signInTokens: new SignInTokenAPI(request),\n    users: new UserAPI(request),\n    domains: new DomainAPI(request),\n    samlConnections: new SamlConnectionAPI(request),\n    testingTokens: new TestingTokenAPI(request)\n  };\n}\n\n// src/tokens/authObjects.ts\n\nvar createDebug = (data) => {\n  return () => {\n    const res = { ...data };\n    res.secretKey = (res.secretKey || \"\").substring(0, 7);\n    res.jwtKey = (res.jwtKey || \"\").substring(0, 7);\n    return { ...res };\n  };\n};\nfunction signedInAuthObject(authenticateContext, sessionToken, sessionClaims) {\n  const {\n    act: actor,\n    sid: sessionId,\n    org_id: orgId,\n    org_role: orgRole,\n    org_slug: orgSlug,\n    org_permissions: orgPermissions,\n    sub: userId,\n    fva\n  } = sessionClaims;\n  const apiClient = createBackendApiClient(authenticateContext);\n  const getToken = createGetToken({\n    sessionId,\n    sessionToken,\n    fetcher: async (...args) => (await apiClient.sessions.getToken(...args)).jwt\n  });\n  const factorVerificationAge = fva ?? null;\n  return {\n    actor,\n    sessionClaims,\n    sessionId,\n    userId,\n    orgId,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    factorVerificationAge,\n    getToken,\n    has: (0,_clerk_shared_authorization__WEBPACK_IMPORTED_MODULE_8__.createCheckAuthorization)({ orgId, orgRole, orgPermissions, userId, factorVerificationAge }),\n    debug: createDebug({ ...authenticateContext, sessionToken })\n  };\n}\nfunction signedOutAuthObject(debugData) {\n  return {\n    sessionClaims: null,\n    sessionId: null,\n    userId: null,\n    actor: null,\n    orgId: null,\n    orgRole: null,\n    orgSlug: null,\n    orgPermissions: null,\n    factorVerificationAge: null,\n    getToken: () => Promise.resolve(null),\n    has: () => false,\n    debug: createDebug(debugData)\n  };\n}\nvar makeAuthObjectSerializable = (obj) => {\n  const { debug, getToken, has, ...rest } = obj;\n  return rest;\n};\nvar createGetToken = (params) => {\n  const { fetcher, sessionToken, sessionId } = params || {};\n  return async (options = {}) => {\n    if (!sessionId) {\n      return null;\n    }\n    if (options.template) {\n      return fetcher(sessionId, options.template);\n    }\n    return sessionToken;\n  };\n};\n\n// src/tokens/authStatus.ts\nvar AuthStatus = {\n  SignedIn: \"signed-in\",\n  SignedOut: \"signed-out\",\n  Handshake: \"handshake\"\n};\nvar AuthErrorReason = {\n  ClientUATWithoutSessionToken: \"client-uat-but-no-session-token\",\n  DevBrowserMissing: \"dev-browser-missing\",\n  DevBrowserSync: \"dev-browser-sync\",\n  PrimaryRespondsToSyncing: \"primary-responds-to-syncing\",\n  SatelliteCookieNeedsSyncing: \"satellite-needs-syncing\",\n  SessionTokenAndUATMissing: \"session-token-and-uat-missing\",\n  SessionTokenMissing: \"session-token-missing\",\n  SessionTokenExpired: \"session-token-expired\",\n  SessionTokenIATBeforeClientUAT: \"session-token-iat-before-client-uat\",\n  SessionTokenNBF: \"session-token-nbf\",\n  SessionTokenIatInTheFuture: \"session-token-iat-in-the-future\",\n  SessionTokenWithoutClientUAT: \"session-token-but-no-client-uat\",\n  ActiveOrganizationMismatch: \"active-organization-mismatch\",\n  UnexpectedError: \"unexpected-error\"\n};\nfunction signedIn(authenticateContext, sessionClaims, headers = new Headers(), token) {\n  const authObject = signedInAuthObject(authenticateContext, token, sessionClaims);\n  return {\n    status: AuthStatus.SignedIn,\n    reason: null,\n    message: null,\n    proxyUrl: authenticateContext.proxyUrl || \"\",\n    publishableKey: authenticateContext.publishableKey || \"\",\n    isSatellite: authenticateContext.isSatellite || false,\n    domain: authenticateContext.domain || \"\",\n    signInUrl: authenticateContext.signInUrl || \"\",\n    signUpUrl: authenticateContext.signUpUrl || \"\",\n    afterSignInUrl: authenticateContext.afterSignInUrl || \"\",\n    afterSignUpUrl: authenticateContext.afterSignUpUrl || \"\",\n    isSignedIn: true,\n    toAuth: () => authObject,\n    headers,\n    token\n  };\n}\nfunction signedOut(authenticateContext, reason, message = \"\", headers = new Headers()) {\n  return withDebugHeaders({\n    status: AuthStatus.SignedOut,\n    reason,\n    message,\n    proxyUrl: authenticateContext.proxyUrl || \"\",\n    publishableKey: authenticateContext.publishableKey || \"\",\n    isSatellite: authenticateContext.isSatellite || false,\n    domain: authenticateContext.domain || \"\",\n    signInUrl: authenticateContext.signInUrl || \"\",\n    signUpUrl: authenticateContext.signUpUrl || \"\",\n    afterSignInUrl: authenticateContext.afterSignInUrl || \"\",\n    afterSignUpUrl: authenticateContext.afterSignUpUrl || \"\",\n    isSignedIn: false,\n    headers,\n    toAuth: () => signedOutAuthObject({ ...authenticateContext, status: AuthStatus.SignedOut, reason, message }),\n    token: null\n  });\n}\nfunction handshake(authenticateContext, reason, message = \"\", headers) {\n  return withDebugHeaders({\n    status: AuthStatus.Handshake,\n    reason,\n    message,\n    publishableKey: authenticateContext.publishableKey || \"\",\n    isSatellite: authenticateContext.isSatellite || false,\n    domain: authenticateContext.domain || \"\",\n    proxyUrl: authenticateContext.proxyUrl || \"\",\n    signInUrl: authenticateContext.signInUrl || \"\",\n    signUpUrl: authenticateContext.signUpUrl || \"\",\n    afterSignInUrl: authenticateContext.afterSignInUrl || \"\",\n    afterSignUpUrl: authenticateContext.afterSignUpUrl || \"\",\n    isSignedIn: false,\n    headers,\n    toAuth: () => null,\n    token: null\n  });\n}\nvar withDebugHeaders = (requestState) => {\n  const headers = new Headers(requestState.headers || {});\n  if (requestState.message) {\n    try {\n      headers.set(constants.Headers.AuthMessage, requestState.message);\n    } catch {\n    }\n  }\n  if (requestState.reason) {\n    try {\n      headers.set(constants.Headers.AuthReason, requestState.reason);\n    } catch {\n    }\n  }\n  if (requestState.status) {\n    try {\n      headers.set(constants.Headers.AuthStatus, requestState.status);\n    } catch {\n    }\n  }\n  requestState.headers = headers;\n  return requestState;\n};\n\n// src/tokens/clerkRequest.ts\n\n\n// src/tokens/clerkUrl.ts\nvar ClerkUrl = class extends URL {\n  isCrossOrigin(other) {\n    return this.origin !== new URL(other.toString()).origin;\n  }\n};\nvar createClerkUrl = (...args) => {\n  return new ClerkUrl(...args);\n};\n\n// src/tokens/clerkRequest.ts\nvar ClerkRequest = class extends Request {\n  constructor(input, init) {\n    const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n    super(url, init || typeof input === \"string\" ? void 0 : input);\n    this.clerkUrl = this.deriveUrlFromHeaders(this);\n    this.cookies = this.parseCookies(this);\n  }\n  toJSON() {\n    return {\n      url: this.clerkUrl.href,\n      method: this.method,\n      headers: JSON.stringify(Object.fromEntries(this.headers)),\n      clerkUrl: this.clerkUrl.toString(),\n      cookies: JSON.stringify(Object.fromEntries(this.cookies))\n    };\n  }\n  /**\n   * Used to fix request.url using the x-forwarded-* headers\n   * TODO add detailed description of the issues this solves\n   */\n  deriveUrlFromHeaders(req) {\n    const initialUrl = new URL(req.url);\n    const forwardedProto = req.headers.get(constants.Headers.ForwardedProto);\n    const forwardedHost = req.headers.get(constants.Headers.ForwardedHost);\n    const host = req.headers.get(constants.Headers.Host);\n    const protocol = initialUrl.protocol;\n    const resolvedHost = this.getFirstValueFromHeader(forwardedHost) ?? host;\n    const resolvedProtocol = this.getFirstValueFromHeader(forwardedProto) ?? protocol?.replace(/[:/]/, \"\");\n    const origin = resolvedHost && resolvedProtocol ? `${resolvedProtocol}://${resolvedHost}` : initialUrl.origin;\n    if (origin === initialUrl.origin) {\n      return createClerkUrl(initialUrl);\n    }\n    return createClerkUrl(initialUrl.pathname + initialUrl.search, origin);\n  }\n  getFirstValueFromHeader(value) {\n    return value?.split(\",\")[0];\n  }\n  parseCookies(req) {\n    const cookiesRecord = (0,cookie__WEBPACK_IMPORTED_MODULE_9__.parse)(this.decodeCookieValue(req.headers.get(\"cookie\") || \"\"));\n    return new Map(Object.entries(cookiesRecord));\n  }\n  decodeCookieValue(str) {\n    return str ? str.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent) : str;\n  }\n};\nvar createClerkRequest = (...args) => {\n  return args[0] instanceof ClerkRequest ? args[0] : new ClerkRequest(...args);\n};\n\n// src/tokens/keys.ts\nvar cache = {};\nvar lastUpdatedAt = 0;\nfunction getFromCache(kid) {\n  return cache[kid];\n}\nfunction getCacheValues() {\n  return Object.values(cache);\n}\nfunction setInCache(jwk, shouldExpire = true) {\n  cache[jwk.kid] = jwk;\n  lastUpdatedAt = shouldExpire ? Date.now() : -1;\n}\nvar LocalJwkKid = \"local\";\nvar PEM_HEADER = \"-----BEGIN PUBLIC KEY-----\";\nvar PEM_TRAILER = \"-----END PUBLIC KEY-----\";\nvar RSA_PREFIX = \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\";\nvar RSA_SUFFIX = \"IDAQAB\";\nfunction loadClerkJWKFromLocal(localKey) {\n  if (!getFromCache(LocalJwkKid)) {\n    if (!localKey) {\n      throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n        action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkJWTKey,\n        message: \"Missing local JWK.\",\n        reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.LocalJWKMissing\n      });\n    }\n    const modulus = localKey.replace(/\\r\\n|\\n|\\r/g, \"\").replace(PEM_HEADER, \"\").replace(PEM_TRAILER, \"\").replace(RSA_PREFIX, \"\").replace(RSA_SUFFIX, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n    setInCache(\n      {\n        kid: \"local\",\n        kty: \"RSA\",\n        alg: \"RS256\",\n        n: modulus,\n        e: \"AQAB\"\n      },\n      false\n      // local key never expires in cache\n    );\n  }\n  return getFromCache(LocalJwkKid);\n}\nasync function loadClerkJWKFromRemote({\n  secretKey,\n  apiUrl = API_URL,\n  apiVersion = API_VERSION,\n  kid,\n  skipJwksCache\n}) {\n  if (skipJwksCache || cacheHasExpired() || !getFromCache(kid)) {\n    if (!secretKey) {\n      throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n        action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n        message: \"Failed to load JWKS from Clerk Backend or Frontend API.\",\n        reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n      });\n    }\n    const fetcher = () => fetchJWKSFromBAPI(apiUrl, secretKey, apiVersion);\n    const { keys } = await (0,_clerk_shared_callWithRetry__WEBPACK_IMPORTED_MODULE_5__.callWithRetry)(fetcher);\n    if (!keys || !keys.length) {\n      throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n        action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n        message: \"The JWKS endpoint did not contain any signing keys. Contact support@clerk.com.\",\n        reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n      });\n    }\n    keys.forEach((key) => setInCache(key));\n  }\n  const jwk = getFromCache(kid);\n  if (!jwk) {\n    const cacheValues = getCacheValues();\n    const jwkKeys = cacheValues.map((jwk2) => jwk2.kid).sort().join(\", \");\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      action: `Go to your Dashboard and validate your secret and public keys are correct. ${_chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport} if the issue persists.`,\n      message: `Unable to find a signing key in JWKS that matches the kid='${kid}' of the provided session token. Please make sure that the __session cookie or the HTTP authorization header contain a Clerk-generated session JWT. The following kid is available: ${jwkKeys}`,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.JWKKidMismatch\n    });\n  }\n  return jwk;\n}\nasync function fetchJWKSFromBAPI(apiUrl, key, apiVersion) {\n  if (!key) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkSecretKey,\n      message: \"Missing Clerk Secret Key or API Key. Go to https://dashboard.clerk.com and get your key for your instance.\",\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n    });\n  }\n  const url = new URL(apiUrl);\n  url.pathname = joinPaths(url.pathname, apiVersion, \"/jwks\");\n  const response = await _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.fetch(url.href, {\n    headers: {\n      Authorization: `Bearer ${key}`,\n      \"Clerk-API-Version\": SUPPORTED_BAPI_VERSION,\n      \"Content-Type\": \"application/json\",\n      \"User-Agent\": USER_AGENT\n    }\n  });\n  if (!response.ok) {\n    const json = await response.json();\n    const invalidSecretKeyError = getErrorObjectByCode(json?.errors, _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorCode.InvalidSecretKey);\n    if (invalidSecretKeyError) {\n      const reason = _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.InvalidSecretKey;\n      throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n        action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n        message: invalidSecretKeyError.message,\n        reason\n      });\n    }\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n      message: `Error loading Clerk JWKS from ${url.href} with code=${response.status}`,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n    });\n  }\n  return response.json();\n}\nfunction cacheHasExpired() {\n  if (lastUpdatedAt === -1) {\n    return false;\n  }\n  const isExpired = Date.now() - lastUpdatedAt >= MAX_CACHE_LAST_UPDATED_AT_SECONDS * 1e3;\n  if (isExpired) {\n    cache = {};\n  }\n  return isExpired;\n}\nvar getErrorObjectByCode = (errors, code) => {\n  if (!errors) {\n    return null;\n  }\n  return errors.find((err) => err.code === code);\n};\n\n// src/tokens/verify.ts\nasync function verifyToken(token, options) {\n  const { data: decodedResult, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n  if (errors) {\n    return { errors };\n  }\n  const { header } = decodedResult;\n  const { kid } = header;\n  try {\n    let key;\n    if (options.jwtKey) {\n      key = loadClerkJWKFromLocal(options.jwtKey);\n    } else if (options.secretKey) {\n      key = await loadClerkJWKFromRemote({ ...options, kid });\n    } else {\n      return {\n        errors: [\n          new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n            action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkJWTKey,\n            message: \"Failed to resolve JWK during verification.\",\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.JWKFailedToResolve\n          })\n        ]\n      };\n    }\n    return await (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.verifyJwt)(token, { ...options, key });\n  } catch (error) {\n    return { errors: [error] };\n  }\n}\n\n// src/tokens/request.ts\n\n\n// src/tokens/authenticateContext.ts\nvar AuthenticateContext = class {\n  constructor(cookieSuffix, clerkRequest, options) {\n    this.cookieSuffix = cookieSuffix;\n    this.clerkRequest = clerkRequest;\n    this.initPublishableKeyValues(options);\n    this.initHeaderValues();\n    this.initCookieValues();\n    this.initHandshakeValues();\n    Object.assign(this, options);\n    this.clerkUrl = this.clerkRequest.clerkUrl;\n  }\n  /**\n   * Retrieves the session token from either the cookie or the header.\n   *\n   * @returns {string | undefined} The session token if available, otherwise undefined.\n   */\n  get sessionToken() {\n    return this.sessionTokenInCookie || this.sessionTokenInHeader;\n  }\n  usesSuffixedCookies() {\n    const suffixedClientUat = this.getSuffixedCookie(constants.Cookies.ClientUat);\n    const clientUat = this.getCookie(constants.Cookies.ClientUat);\n    const suffixedSession = this.getSuffixedCookie(constants.Cookies.Session) || \"\";\n    const session = this.getCookie(constants.Cookies.Session) || \"\";\n    if (session && !this.tokenHasIssuer(session)) {\n      return false;\n    }\n    if (session && !this.tokenBelongsToInstance(session)) {\n      return true;\n    }\n    if (!suffixedClientUat && !suffixedSession) {\n      return false;\n    }\n    const { data: sessionData } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(session);\n    const sessionIat = sessionData?.payload.iat || 0;\n    const { data: suffixedSessionData } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(suffixedSession);\n    const suffixedSessionIat = suffixedSessionData?.payload.iat || 0;\n    if (suffixedClientUat !== \"0\" && clientUat !== \"0\" && sessionIat > suffixedSessionIat) {\n      return false;\n    }\n    if (suffixedClientUat === \"0\" && clientUat !== \"0\") {\n      return false;\n    }\n    if (this.instanceType !== \"production\") {\n      const isSuffixedSessionExpired = this.sessionExpired(suffixedSessionData);\n      if (suffixedClientUat !== \"0\" && clientUat === \"0\" && isSuffixedSessionExpired) {\n        return false;\n      }\n    }\n    if (!suffixedClientUat && suffixedSession) {\n      return false;\n    }\n    return true;\n  }\n  initPublishableKeyValues(options) {\n    assertValidPublishableKey(options.publishableKey);\n    this.publishableKey = options.publishableKey;\n    const pk = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_6__.parsePublishableKey)(this.publishableKey, {\n      fatal: true,\n      proxyUrl: options.proxyUrl,\n      domain: options.domain\n    });\n    this.instanceType = pk.instanceType;\n    this.frontendApi = pk.frontendApi;\n  }\n  initHeaderValues() {\n    this.sessionTokenInHeader = this.stripAuthorizationHeader(this.getHeader(constants.Headers.Authorization));\n    this.origin = this.getHeader(constants.Headers.Origin);\n    this.host = this.getHeader(constants.Headers.Host);\n    this.forwardedHost = this.getHeader(constants.Headers.ForwardedHost);\n    this.forwardedProto = this.getHeader(constants.Headers.CloudFrontForwardedProto) || this.getHeader(constants.Headers.ForwardedProto);\n    this.referrer = this.getHeader(constants.Headers.Referrer);\n    this.userAgent = this.getHeader(constants.Headers.UserAgent);\n    this.secFetchDest = this.getHeader(constants.Headers.SecFetchDest);\n    this.accept = this.getHeader(constants.Headers.Accept);\n  }\n  initCookieValues() {\n    this.sessionTokenInCookie = this.getSuffixedOrUnSuffixedCookie(constants.Cookies.Session);\n    this.refreshTokenInCookie = this.getSuffixedCookie(constants.Cookies.Refresh);\n    this.clientUat = Number.parseInt(this.getSuffixedOrUnSuffixedCookie(constants.Cookies.ClientUat) || \"\") || 0;\n  }\n  initHandshakeValues() {\n    this.devBrowserToken = this.getQueryParam(constants.QueryParameters.DevBrowser) || this.getSuffixedOrUnSuffixedCookie(constants.Cookies.DevBrowser);\n    this.handshakeToken = this.getQueryParam(constants.QueryParameters.Handshake) || this.getCookie(constants.Cookies.Handshake);\n    this.handshakeRedirectLoopCounter = Number(this.getCookie(constants.Cookies.RedirectCount)) || 0;\n  }\n  stripAuthorizationHeader(authValue) {\n    return authValue?.replace(\"Bearer \", \"\");\n  }\n  getQueryParam(name) {\n    return this.clerkRequest.clerkUrl.searchParams.get(name);\n  }\n  getHeader(name) {\n    return this.clerkRequest.headers.get(name) || void 0;\n  }\n  getCookie(name) {\n    return this.clerkRequest.cookies.get(name) || void 0;\n  }\n  getSuffixedCookie(name) {\n    return this.getCookie((0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_6__.getSuffixedCookieName)(name, this.cookieSuffix)) || void 0;\n  }\n  getSuffixedOrUnSuffixedCookie(cookieName) {\n    if (this.usesSuffixedCookies()) {\n      return this.getSuffixedCookie(cookieName);\n    }\n    return this.getCookie(cookieName);\n  }\n  tokenHasIssuer(token) {\n    const { data, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n    if (errors) {\n      return false;\n    }\n    return !!data.payload.iss;\n  }\n  tokenBelongsToInstance(token) {\n    if (!token) {\n      return false;\n    }\n    const { data, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n    if (errors) {\n      return false;\n    }\n    const tokenIssuer = data.payload.iss.replace(/https?:\\/\\//gi, \"\");\n    return this.frontendApi === tokenIssuer;\n  }\n  sessionExpired(jwt) {\n    return !!jwt && jwt?.payload.exp <= Date.now() / 1e3 >> 0;\n  }\n};\nvar createAuthenticateContext = async (clerkRequest, options) => {\n  const cookieSuffix = options.publishableKey ? await (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_6__.getCookieSuffix)(options.publishableKey, _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.crypto.subtle) : \"\";\n  return new AuthenticateContext(cookieSuffix, clerkRequest, options);\n};\n\n// src/tokens/cookie.ts\nvar getCookieName = (cookieDirective) => {\n  return cookieDirective.split(\";\")[0]?.split(\"=\")[0];\n};\nvar getCookieValue = (cookieDirective) => {\n  return cookieDirective.split(\";\")[0]?.split(\"=\")[1];\n};\n\n// src/tokens/handshake.ts\nasync function verifyHandshakeJwt(token, { key }) {\n  const { data: decoded, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n  if (errors) {\n    throw errors[0];\n  }\n  const { header, payload } = decoded;\n  const { typ, alg } = header;\n  (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.assertHeaderType)(typ);\n  (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.assertHeaderAlgorithm)(alg);\n  const { data: signatureValid, errors: signatureErrors } = await (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.hasValidSignature)(decoded, key);\n  if (signatureErrors) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Error verifying handshake token. ${signatureErrors[0]}`\n    });\n  }\n  if (!signatureValid) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenInvalidSignature,\n      message: \"Handshake signature is invalid.\"\n    });\n  }\n  return payload;\n}\nasync function verifyHandshakeToken(token, options) {\n  const { secretKey, apiUrl, apiVersion, jwksCacheTtlInMs, jwtKey, skipJwksCache } = options;\n  const { data, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n  if (errors) {\n    throw errors[0];\n  }\n  const { kid } = data.header;\n  let key;\n  if (jwtKey) {\n    key = loadClerkJWKFromLocal(jwtKey);\n  } else if (secretKey) {\n    key = await loadClerkJWKFromRemote({ secretKey, apiUrl, apiVersion, kid, jwksCacheTtlInMs, skipJwksCache });\n  } else {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkJWTKey,\n      message: \"Failed to resolve JWK during handshake verification.\",\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.JWKFailedToResolve\n    });\n  }\n  return await verifyHandshakeJwt(token, {\n    key\n  });\n}\n\n// src/tokens/request.ts\nvar RefreshTokenErrorReason = {\n  NonEligibleNoCookie: \"non-eligible-no-refresh-cookie\",\n  NonEligibleNonGet: \"non-eligible-non-get\",\n  InvalidSessionToken: \"invalid-session-token\",\n  MissingApiClient: \"missing-api-client\",\n  MissingSessionToken: \"missing-session-token\",\n  MissingRefreshToken: \"missing-refresh-token\",\n  ExpiredSessionTokenDecodeFailed: \"expired-session-token-decode-failed\",\n  ExpiredSessionTokenMissingSidClaim: \"expired-session-token-missing-sid-claim\",\n  FetchError: \"fetch-error\",\n  UnexpectedSDKError: \"unexpected-sdk-error\",\n  UnexpectedBAPIError: \"unexpected-bapi-error\"\n};\nfunction assertSignInUrlExists(signInUrl, key) {\n  if (!signInUrl && (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_6__.isDevelopmentFromSecretKey)(key)) {\n    throw new Error(`Missing signInUrl. Pass a signInUrl for dev instances if an app is satellite`);\n  }\n}\nfunction assertProxyUrlOrDomain(proxyUrlOrDomain) {\n  if (!proxyUrlOrDomain) {\n    throw new Error(`Missing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl`);\n  }\n}\nfunction assertSignInUrlFormatAndOrigin(_signInUrl, origin) {\n  let signInUrl;\n  try {\n    signInUrl = new URL(_signInUrl);\n  } catch {\n    throw new Error(`The signInUrl needs to have a absolute url format.`);\n  }\n  if (signInUrl.origin === origin) {\n    throw new Error(`The signInUrl needs to be on a different origin than your satellite application.`);\n  }\n}\nfunction isRequestEligibleForHandshake(authenticateContext) {\n  const { accept, secFetchDest } = authenticateContext;\n  if (secFetchDest === \"document\" || secFetchDest === \"iframe\") {\n    return true;\n  }\n  if (!secFetchDest && accept?.startsWith(\"text/html\")) {\n    return true;\n  }\n  return false;\n}\nfunction isRequestEligibleForRefresh(err, authenticateContext, request) {\n  return err.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired && !!authenticateContext.refreshTokenInCookie && request.method === \"GET\";\n}\nasync function authenticateRequest(request, options) {\n  const authenticateContext = await createAuthenticateContext(createClerkRequest(request), options);\n  assertValidSecretKey(authenticateContext.secretKey);\n  if (authenticateContext.isSatellite) {\n    assertSignInUrlExists(authenticateContext.signInUrl, authenticateContext.secretKey);\n    if (authenticateContext.signInUrl && authenticateContext.origin) {\n      assertSignInUrlFormatAndOrigin(authenticateContext.signInUrl, authenticateContext.origin);\n    }\n    assertProxyUrlOrDomain(authenticateContext.proxyUrl || authenticateContext.domain);\n  }\n  const organizationSyncTargetMatchers = computeOrganizationSyncTargetMatchers(options.organizationSyncOptions);\n  function removeDevBrowserFromURL(url) {\n    const updatedURL = new URL(url);\n    updatedURL.searchParams.delete(constants.QueryParameters.DevBrowser);\n    updatedURL.searchParams.delete(constants.QueryParameters.LegacyDevBrowser);\n    return updatedURL;\n  }\n  function buildRedirectToHandshake({ handshakeReason }) {\n    const redirectUrl = removeDevBrowserFromURL(authenticateContext.clerkUrl);\n    const frontendApiNoProtocol = authenticateContext.frontendApi.replace(/http(s)?:\\/\\//, \"\");\n    const url = new URL(`https://${frontendApiNoProtocol}/v1/client/handshake`);\n    url.searchParams.append(\"redirect_url\", redirectUrl?.href || \"\");\n    url.searchParams.append(\n      constants.QueryParameters.SuffixedCookies,\n      authenticateContext.usesSuffixedCookies().toString()\n    );\n    url.searchParams.append(constants.QueryParameters.HandshakeReason, handshakeReason);\n    if (authenticateContext.instanceType === \"development\" && authenticateContext.devBrowserToken) {\n      url.searchParams.append(constants.QueryParameters.DevBrowser, authenticateContext.devBrowserToken);\n    }\n    const toActivate = getOrganizationSyncTarget(\n      authenticateContext.clerkUrl,\n      options.organizationSyncOptions,\n      organizationSyncTargetMatchers\n    );\n    if (toActivate) {\n      const params = getOrganizationSyncQueryParams(toActivate);\n      params.forEach((value, key) => {\n        url.searchParams.append(key, value);\n      });\n    }\n    return new Headers({ [constants.Headers.Location]: url.href });\n  }\n  async function resolveHandshake() {\n    const headers = new Headers({\n      \"Access-Control-Allow-Origin\": \"null\",\n      \"Access-Control-Allow-Credentials\": \"true\"\n    });\n    const handshakePayload = await verifyHandshakeToken(authenticateContext.handshakeToken, authenticateContext);\n    const cookiesToSet = handshakePayload.handshake;\n    let sessionToken = \"\";\n    cookiesToSet.forEach((x) => {\n      headers.append(\"Set-Cookie\", x);\n      if (getCookieName(x).startsWith(constants.Cookies.Session)) {\n        sessionToken = getCookieValue(x);\n      }\n    });\n    if (authenticateContext.instanceType === \"development\") {\n      const newUrl = new URL(authenticateContext.clerkUrl);\n      newUrl.searchParams.delete(constants.QueryParameters.Handshake);\n      newUrl.searchParams.delete(constants.QueryParameters.HandshakeHelp);\n      headers.append(constants.Headers.Location, newUrl.toString());\n      headers.set(constants.Headers.CacheControl, \"no-store\");\n    }\n    if (sessionToken === \"\") {\n      return signedOut(authenticateContext, AuthErrorReason.SessionTokenMissing, \"\", headers);\n    }\n    const { data, errors: [error] = [] } = await verifyToken(sessionToken, authenticateContext);\n    if (data) {\n      return signedIn(authenticateContext, data, headers, sessionToken);\n    }\n    if (authenticateContext.instanceType === \"development\" && (error?.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired || error?.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenNotActiveYet || error?.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenIatInTheFuture)) {\n      error.tokenCarrier = \"cookie\";\n      console.error(\n        `Clerk: Clock skew detected. This usually means that your system clock is inaccurate. Clerk will attempt to account for the clock skew in development.\n\nTo resolve this issue, make sure your system's clock is set to the correct time (e.g. turn off and on automatic time synchronization).\n\n---\n\n${error.getFullMessage()}`\n      );\n      const { data: retryResult, errors: [retryError] = [] } = await verifyToken(sessionToken, {\n        ...authenticateContext,\n        clockSkewInMs: 864e5\n      });\n      if (retryResult) {\n        return signedIn(authenticateContext, retryResult, headers, sessionToken);\n      }\n      throw new Error(retryError?.message || \"Clerk: Handshake retry failed.\");\n    }\n    throw new Error(error?.message || \"Clerk: Handshake failed.\");\n  }\n  async function refreshToken(authenticateContext2) {\n    if (!options.apiClient) {\n      return {\n        data: null,\n        error: {\n          message: \"An apiClient is needed to perform token refresh.\",\n          cause: { reason: RefreshTokenErrorReason.MissingApiClient }\n        }\n      };\n    }\n    const { sessionToken: expiredSessionToken, refreshTokenInCookie: refreshToken2 } = authenticateContext2;\n    if (!expiredSessionToken) {\n      return {\n        data: null,\n        error: {\n          message: \"Session token must be provided.\",\n          cause: { reason: RefreshTokenErrorReason.MissingSessionToken }\n        }\n      };\n    }\n    if (!refreshToken2) {\n      return {\n        data: null,\n        error: {\n          message: \"Refresh token must be provided.\",\n          cause: { reason: RefreshTokenErrorReason.MissingRefreshToken }\n        }\n      };\n    }\n    const { data: decodeResult, errors: decodedErrors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(expiredSessionToken);\n    if (!decodeResult || decodedErrors) {\n      return {\n        data: null,\n        error: {\n          message: \"Unable to decode the expired session token.\",\n          cause: { reason: RefreshTokenErrorReason.ExpiredSessionTokenDecodeFailed, errors: decodedErrors }\n        }\n      };\n    }\n    if (!decodeResult?.payload?.sid) {\n      return {\n        data: null,\n        error: {\n          message: \"Expired session token is missing the `sid` claim.\",\n          cause: { reason: RefreshTokenErrorReason.ExpiredSessionTokenMissingSidClaim }\n        }\n      };\n    }\n    try {\n      const response = await options.apiClient.sessions.refreshSession(decodeResult.payload.sid, {\n        format: \"cookie\",\n        suffixed_cookies: authenticateContext2.usesSuffixedCookies(),\n        expired_token: expiredSessionToken || \"\",\n        refresh_token: refreshToken2 || \"\",\n        request_origin: authenticateContext2.clerkUrl.origin,\n        // The refresh endpoint expects headers as Record<string, string[]>, so we need to transform it.\n        request_headers: Object.fromEntries(Array.from(request.headers.entries()).map(([k, v]) => [k, [v]]))\n      });\n      return { data: response.cookies, error: null };\n    } catch (err) {\n      if (err?.errors?.length) {\n        if (err.errors[0].code === \"unexpected_error\") {\n          return {\n            data: null,\n            error: {\n              message: `Fetch unexpected error`,\n              cause: { reason: RefreshTokenErrorReason.FetchError, errors: err.errors }\n            }\n          };\n        }\n        return {\n          data: null,\n          error: {\n            message: err.errors[0].code,\n            cause: { reason: err.errors[0].code, errors: err.errors }\n          }\n        };\n      } else {\n        return {\n          data: null,\n          error: {\n            message: `Unexpected Server/BAPI error`,\n            cause: { reason: RefreshTokenErrorReason.UnexpectedBAPIError, errors: [err] }\n          }\n        };\n      }\n    }\n  }\n  async function attemptRefresh(authenticateContext2) {\n    const { data: cookiesToSet, error } = await refreshToken(authenticateContext2);\n    if (!cookiesToSet || cookiesToSet.length === 0) {\n      return { data: null, error };\n    }\n    const headers = new Headers();\n    let sessionToken = \"\";\n    cookiesToSet.forEach((x) => {\n      headers.append(\"Set-Cookie\", x);\n      if (getCookieName(x).startsWith(constants.Cookies.Session)) {\n        sessionToken = getCookieValue(x);\n      }\n    });\n    const { data: jwtPayload, errors } = await verifyToken(sessionToken, authenticateContext2);\n    if (errors) {\n      return {\n        data: null,\n        error: {\n          message: `Clerk: unable to verify refreshed session token.`,\n          cause: { reason: RefreshTokenErrorReason.InvalidSessionToken, errors }\n        }\n      };\n    }\n    return { data: { jwtPayload, sessionToken, headers }, error: null };\n  }\n  function handleMaybeHandshakeStatus(authenticateContext2, reason, message, headers) {\n    if (isRequestEligibleForHandshake(authenticateContext2)) {\n      const handshakeHeaders = headers ?? buildRedirectToHandshake({ handshakeReason: reason });\n      if (handshakeHeaders.get(constants.Headers.Location)) {\n        handshakeHeaders.set(constants.Headers.CacheControl, \"no-store\");\n      }\n      const isRedirectLoop = setHandshakeInfiniteRedirectionLoopHeaders(handshakeHeaders);\n      if (isRedirectLoop) {\n        const msg = `Clerk: Refreshing the session token resulted in an infinite redirect loop. This usually means that your Clerk instance keys do not match - make sure to copy the correct publishable and secret keys from the Clerk dashboard.`;\n        console.log(msg);\n        return signedOut(authenticateContext2, reason, message);\n      }\n      return handshake(authenticateContext2, reason, message, handshakeHeaders);\n    }\n    return signedOut(authenticateContext2, reason, message);\n  }\n  function handleMaybeOrganizationSyncHandshake(authenticateContext2, auth) {\n    const organizationSyncTarget = getOrganizationSyncTarget(\n      authenticateContext2.clerkUrl,\n      options.organizationSyncOptions,\n      organizationSyncTargetMatchers\n    );\n    if (!organizationSyncTarget) {\n      return null;\n    }\n    let mustActivate = false;\n    if (organizationSyncTarget.type === \"organization\") {\n      if (organizationSyncTarget.organizationSlug && organizationSyncTarget.organizationSlug !== auth.orgSlug) {\n        mustActivate = true;\n      }\n      if (organizationSyncTarget.organizationId && organizationSyncTarget.organizationId !== auth.orgId) {\n        mustActivate = true;\n      }\n    }\n    if (organizationSyncTarget.type === \"personalAccount\" && auth.orgId) {\n      mustActivate = true;\n    }\n    if (!mustActivate) {\n      return null;\n    }\n    if (authenticateContext2.handshakeRedirectLoopCounter > 0) {\n      console.warn(\n        \"Clerk: Organization activation handshake loop detected. This is likely due to an invalid organization ID or slug. Skipping organization activation.\"\n      );\n      return null;\n    }\n    const handshakeState = handleMaybeHandshakeStatus(\n      authenticateContext2,\n      AuthErrorReason.ActiveOrganizationMismatch,\n      \"\"\n    );\n    if (handshakeState.status !== \"handshake\") {\n      return null;\n    }\n    return handshakeState;\n  }\n  async function authenticateRequestWithTokenInHeader() {\n    const { sessionTokenInHeader } = authenticateContext;\n    try {\n      const { data, errors } = await verifyToken(sessionTokenInHeader, authenticateContext);\n      if (errors) {\n        throw errors[0];\n      }\n      return signedIn(authenticateContext, data, void 0, sessionTokenInHeader);\n    } catch (err) {\n      return handleError(err, \"header\");\n    }\n  }\n  function setHandshakeInfiniteRedirectionLoopHeaders(headers) {\n    if (authenticateContext.handshakeRedirectLoopCounter === 3) {\n      return true;\n    }\n    const newCounterValue = authenticateContext.handshakeRedirectLoopCounter + 1;\n    const cookieName = constants.Cookies.RedirectCount;\n    headers.append(\"Set-Cookie\", `${cookieName}=${newCounterValue}; SameSite=Lax; HttpOnly; Max-Age=3`);\n    return false;\n  }\n  function handleHandshakeTokenVerificationErrorInDevelopment(error) {\n    if (error.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenInvalidSignature) {\n      const msg = `Clerk: Handshake token verification failed due to an invalid signature. If you have switched Clerk keys locally, clear your cookies and try again.`;\n      throw new Error(msg);\n    }\n    throw new Error(`Clerk: Handshake token verification failed: ${error.getFullMessage()}.`);\n  }\n  async function authenticateRequestWithTokenInCookie() {\n    const hasActiveClient = authenticateContext.clientUat;\n    const hasSessionToken = !!authenticateContext.sessionTokenInCookie;\n    const hasDevBrowserToken = !!authenticateContext.devBrowserToken;\n    if (authenticateContext.handshakeToken) {\n      try {\n        return await resolveHandshake();\n      } catch (error) {\n        if (error instanceof _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError && authenticateContext.instanceType === \"development\") {\n          handleHandshakeTokenVerificationErrorInDevelopment(error);\n        } else {\n          console.error(\"Clerk: unable to resolve handshake:\", error);\n        }\n      }\n    }\n    if (authenticateContext.instanceType === \"development\" && authenticateContext.clerkUrl.searchParams.has(constants.QueryParameters.DevBrowser)) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.DevBrowserSync, \"\");\n    }\n    const isRequestEligibleForMultiDomainSync = authenticateContext.isSatellite && authenticateContext.secFetchDest === \"document\";\n    if (authenticateContext.instanceType === \"production\" && isRequestEligibleForMultiDomainSync) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SatelliteCookieNeedsSyncing, \"\");\n    }\n    if (authenticateContext.instanceType === \"development\" && isRequestEligibleForMultiDomainSync && !authenticateContext.clerkUrl.searchParams.has(constants.QueryParameters.ClerkSynced)) {\n      const redirectURL = new URL(authenticateContext.signInUrl);\n      redirectURL.searchParams.append(\n        constants.QueryParameters.ClerkRedirectUrl,\n        authenticateContext.clerkUrl.toString()\n      );\n      const headers = new Headers({ [constants.Headers.Location]: redirectURL.toString() });\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SatelliteCookieNeedsSyncing, \"\", headers);\n    }\n    const redirectUrl = new URL(authenticateContext.clerkUrl).searchParams.get(\n      constants.QueryParameters.ClerkRedirectUrl\n    );\n    if (authenticateContext.instanceType === \"development\" && !authenticateContext.isSatellite && redirectUrl) {\n      const redirectBackToSatelliteUrl = new URL(redirectUrl);\n      if (authenticateContext.devBrowserToken) {\n        redirectBackToSatelliteUrl.searchParams.append(\n          constants.QueryParameters.DevBrowser,\n          authenticateContext.devBrowserToken\n        );\n      }\n      redirectBackToSatelliteUrl.searchParams.append(constants.QueryParameters.ClerkSynced, \"true\");\n      const headers = new Headers({ [constants.Headers.Location]: redirectBackToSatelliteUrl.toString() });\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.PrimaryRespondsToSyncing, \"\", headers);\n    }\n    if (authenticateContext.instanceType === \"development\" && !hasDevBrowserToken) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.DevBrowserMissing, \"\");\n    }\n    if (!hasActiveClient && !hasSessionToken) {\n      return signedOut(authenticateContext, AuthErrorReason.SessionTokenAndUATMissing, \"\");\n    }\n    if (!hasActiveClient && hasSessionToken) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SessionTokenWithoutClientUAT, \"\");\n    }\n    if (hasActiveClient && !hasSessionToken) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.ClientUATWithoutSessionToken, \"\");\n    }\n    const { data: decodeResult, errors: decodedErrors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(authenticateContext.sessionTokenInCookie);\n    if (decodedErrors) {\n      return handleError(decodedErrors[0], \"cookie\");\n    }\n    if (decodeResult.payload.iat < authenticateContext.clientUat) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SessionTokenIATBeforeClientUAT, \"\");\n    }\n    try {\n      const { data, errors } = await verifyToken(authenticateContext.sessionTokenInCookie, authenticateContext);\n      if (errors) {\n        throw errors[0];\n      }\n      const signedInRequestState = signedIn(\n        authenticateContext,\n        data,\n        void 0,\n        authenticateContext.sessionTokenInCookie\n      );\n      const handshakeRequestState = handleMaybeOrganizationSyncHandshake(\n        authenticateContext,\n        signedInRequestState.toAuth()\n      );\n      if (handshakeRequestState) {\n        return handshakeRequestState;\n      }\n      return signedInRequestState;\n    } catch (err) {\n      return handleError(err, \"cookie\");\n    }\n    return signedOut(authenticateContext, AuthErrorReason.UnexpectedError);\n  }\n  async function handleError(err, tokenCarrier) {\n    if (!(err instanceof _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError)) {\n      return signedOut(authenticateContext, AuthErrorReason.UnexpectedError);\n    }\n    let refreshError;\n    if (isRequestEligibleForRefresh(err, authenticateContext, request)) {\n      const { data, error } = await attemptRefresh(authenticateContext);\n      if (data) {\n        return signedIn(authenticateContext, data.jwtPayload, data.headers, data.sessionToken);\n      }\n      if (error?.cause?.reason) {\n        refreshError = error.cause.reason;\n      } else {\n        refreshError = RefreshTokenErrorReason.UnexpectedSDKError;\n      }\n    } else {\n      if (request.method !== \"GET\") {\n        refreshError = RefreshTokenErrorReason.NonEligibleNonGet;\n      } else if (!authenticateContext.refreshTokenInCookie) {\n        refreshError = RefreshTokenErrorReason.NonEligibleNoCookie;\n      } else {\n        refreshError = null;\n      }\n    }\n    err.tokenCarrier = tokenCarrier;\n    const reasonToHandshake = [\n      _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired,\n      _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenNotActiveYet,\n      _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenIatInTheFuture\n    ].includes(err.reason);\n    if (reasonToHandshake) {\n      return handleMaybeHandshakeStatus(\n        authenticateContext,\n        convertTokenVerificationErrorReasonToAuthErrorReason({ tokenError: err.reason, refreshError }),\n        err.getFullMessage()\n      );\n    }\n    return signedOut(authenticateContext, err.reason, err.getFullMessage());\n  }\n  if (authenticateContext.sessionTokenInHeader) {\n    return authenticateRequestWithTokenInHeader();\n  }\n  return authenticateRequestWithTokenInCookie();\n}\nvar debugRequestState = (params) => {\n  const { isSignedIn, proxyUrl, reason, message, publishableKey, isSatellite, domain } = params;\n  return { isSignedIn, proxyUrl, reason, message, publishableKey, isSatellite, domain };\n};\nfunction computeOrganizationSyncTargetMatchers(options) {\n  let personalAccountMatcher = null;\n  if (options?.personalAccountPatterns) {\n    try {\n      personalAccountMatcher = (0,_clerk_shared_pathToRegexp__WEBPACK_IMPORTED_MODULE_10__.match)(options.personalAccountPatterns);\n    } catch (e) {\n      throw new Error(`Invalid personal account pattern \"${options.personalAccountPatterns}\": \"${e}\"`);\n    }\n  }\n  let organizationMatcher = null;\n  if (options?.organizationPatterns) {\n    try {\n      organizationMatcher = (0,_clerk_shared_pathToRegexp__WEBPACK_IMPORTED_MODULE_10__.match)(options.organizationPatterns);\n    } catch (e) {\n      throw new Error(`Clerk: Invalid organization pattern \"${options.organizationPatterns}\": \"${e}\"`);\n    }\n  }\n  return {\n    OrganizationMatcher: organizationMatcher,\n    PersonalAccountMatcher: personalAccountMatcher\n  };\n}\nfunction getOrganizationSyncTarget(url, options, matchers) {\n  if (!options) {\n    return null;\n  }\n  if (matchers.OrganizationMatcher) {\n    let orgResult;\n    try {\n      orgResult = matchers.OrganizationMatcher(url.pathname);\n    } catch (e) {\n      console.error(`Clerk: Failed to apply organization pattern \"${options.organizationPatterns}\" to a path`, e);\n      return null;\n    }\n    if (orgResult && \"params\" in orgResult) {\n      const params = orgResult.params;\n      if (\"id\" in params && typeof params.id === \"string\") {\n        return { type: \"organization\", organizationId: params.id };\n      }\n      if (\"slug\" in params && typeof params.slug === \"string\") {\n        return { type: \"organization\", organizationSlug: params.slug };\n      }\n      console.warn(\n        \"Clerk: Detected an organization pattern match, but no organization ID or slug was found in the URL. Does the pattern include `:id` or `:slug`?\"\n      );\n    }\n  }\n  if (matchers.PersonalAccountMatcher) {\n    let personalResult;\n    try {\n      personalResult = matchers.PersonalAccountMatcher(url.pathname);\n    } catch (e) {\n      console.error(`Failed to apply personal account pattern \"${options.personalAccountPatterns}\" to a path`, e);\n      return null;\n    }\n    if (personalResult) {\n      return { type: \"personalAccount\" };\n    }\n  }\n  return null;\n}\nfunction getOrganizationSyncQueryParams(toActivate) {\n  const ret = /* @__PURE__ */ new Map();\n  if (toActivate.type === \"personalAccount\") {\n    ret.set(\"organization_id\", \"\");\n  }\n  if (toActivate.type === \"organization\") {\n    if (toActivate.organizationId) {\n      ret.set(\"organization_id\", toActivate.organizationId);\n    }\n    if (toActivate.organizationSlug) {\n      ret.set(\"organization_id\", toActivate.organizationSlug);\n    }\n  }\n  return ret;\n}\nvar convertTokenVerificationErrorReasonToAuthErrorReason = ({\n  tokenError,\n  refreshError\n}) => {\n  switch (tokenError) {\n    case _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired:\n      return `${AuthErrorReason.SessionTokenExpired}-refresh-${refreshError}`;\n    case _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenNotActiveYet:\n      return AuthErrorReason.SessionTokenNBF;\n    case _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenIatInTheFuture:\n      return AuthErrorReason.SessionTokenIatInTheFuture;\n    default:\n      return AuthErrorReason.UnexpectedError;\n  }\n};\n\n// src/util/mergePreDefinedOptions.ts\nfunction mergePreDefinedOptions(preDefinedOptions, options) {\n  return Object.keys(preDefinedOptions).reduce(\n    (obj, key) => {\n      return { ...obj, [key]: options[key] || obj[key] };\n    },\n    { ...preDefinedOptions }\n  );\n}\n\n// src/tokens/factory.ts\nvar defaultOptions = {\n  secretKey: \"\",\n  jwtKey: \"\",\n  apiUrl: void 0,\n  apiVersion: void 0,\n  proxyUrl: \"\",\n  publishableKey: \"\",\n  isSatellite: false,\n  domain: \"\",\n  audience: \"\"\n};\nfunction createAuthenticateRequest(params) {\n  const buildTimeOptions = mergePreDefinedOptions(defaultOptions, params.options);\n  const apiClient = params.apiClient;\n  const authenticateRequest2 = (request, options = {}) => {\n    const { apiUrl, apiVersion } = buildTimeOptions;\n    const runTimeOptions = mergePreDefinedOptions(buildTimeOptions, options);\n    return authenticateRequest(request, {\n      ...options,\n      ...runTimeOptions,\n      // We should add all the omitted props from options here (eg apiUrl / apiVersion)\n      // to avoid runtime options override them.\n      apiUrl,\n      apiVersion,\n      apiClient\n    });\n  };\n  return {\n    authenticateRequest: authenticateRequest2,\n    debugRequestState\n  };\n}\n\n\n//# sourceMappingURL=chunk-4WPMFHK6.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@clerk/backend/dist/chunk-4WPMFHK6.mjs\n"));

/***/ }),

/***/ "./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignJWTError: () => (/* binding */ SignJWTError),\n/* harmony export */   TokenVerificationError: () => (/* binding */ TokenVerificationError),\n/* harmony export */   TokenVerificationErrorAction: () => (/* binding */ TokenVerificationErrorAction),\n/* harmony export */   TokenVerificationErrorCode: () => (/* binding */ TokenVerificationErrorCode),\n/* harmony export */   TokenVerificationErrorReason: () => (/* binding */ TokenVerificationErrorReason)\n/* harmony export */ });\n// src/errors.ts\nvar TokenVerificationErrorCode = {\n  InvalidSecretKey: \"clerk_key_invalid\"\n};\nvar TokenVerificationErrorReason = {\n  TokenExpired: \"token-expired\",\n  TokenInvalid: \"token-invalid\",\n  TokenInvalidAlgorithm: \"token-invalid-algorithm\",\n  TokenInvalidAuthorizedParties: \"token-invalid-authorized-parties\",\n  TokenInvalidSignature: \"token-invalid-signature\",\n  TokenNotActiveYet: \"token-not-active-yet\",\n  TokenIatInTheFuture: \"token-iat-in-the-future\",\n  TokenVerificationFailed: \"token-verification-failed\",\n  InvalidSecretKey: \"secret-key-invalid\",\n  LocalJWKMissing: \"jwk-local-missing\",\n  RemoteJWKFailedToLoad: \"jwk-remote-failed-to-load\",\n  RemoteJWKInvalid: \"jwk-remote-invalid\",\n  RemoteJWKMissing: \"jwk-remote-missing\",\n  JWKFailedToResolve: \"jwk-failed-to-resolve\",\n  JWKKidMismatch: \"jwk-kid-mismatch\"\n};\nvar TokenVerificationErrorAction = {\n  ContactSupport: \"Contact support@clerk.com\",\n  EnsureClerkJWT: \"Make sure that this is a valid Clerk generate JWT.\",\n  SetClerkJWTKey: \"Set the CLERK_JWT_KEY environment variable.\",\n  SetClerkSecretKey: \"Set the CLERK_SECRET_KEY environment variable.\",\n  EnsureClockSync: \"Make sure your system clock is in sync (e.g. turn off and on automatic time synchronization).\"\n};\nvar TokenVerificationError = class _TokenVerificationError extends Error {\n  constructor({\n    action,\n    message,\n    reason\n  }) {\n    super(message);\n    Object.setPrototypeOf(this, _TokenVerificationError.prototype);\n    this.reason = reason;\n    this.message = message;\n    this.action = action;\n  }\n  getFullMessage() {\n    return `${[this.message, this.action].filter((m) => m).join(\" \")} (reason=${this.reason}, token-carrier=${this.tokenCarrier})`;\n  }\n};\nvar SignJWTError = class extends Error {\n};\n\n\n//# sourceMappingURL=chunk-5JS2VYLU.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL2JhY2tlbmQvZGlzdC9jaHVuay01SlMyVllMVS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHdEQUF3RCxVQUFVLFlBQVksa0JBQWtCLGtCQUFrQjtBQUNoSTtBQUNBO0FBQ0E7QUFDQTs7QUFRRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvYmFja2VuZC9kaXN0L2NodW5rLTVKUzJWWUxVLm1qcz8zOWYxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9lcnJvcnMudHNcbnZhciBUb2tlblZlcmlmaWNhdGlvbkVycm9yQ29kZSA9IHtcbiAgSW52YWxpZFNlY3JldEtleTogXCJjbGVya19rZXlfaW52YWxpZFwiXG59O1xudmFyIFRva2VuVmVyaWZpY2F0aW9uRXJyb3JSZWFzb24gPSB7XG4gIFRva2VuRXhwaXJlZDogXCJ0b2tlbi1leHBpcmVkXCIsXG4gIFRva2VuSW52YWxpZDogXCJ0b2tlbi1pbnZhbGlkXCIsXG4gIFRva2VuSW52YWxpZEFsZ29yaXRobTogXCJ0b2tlbi1pbnZhbGlkLWFsZ29yaXRobVwiLFxuICBUb2tlbkludmFsaWRBdXRob3JpemVkUGFydGllczogXCJ0b2tlbi1pbnZhbGlkLWF1dGhvcml6ZWQtcGFydGllc1wiLFxuICBUb2tlbkludmFsaWRTaWduYXR1cmU6IFwidG9rZW4taW52YWxpZC1zaWduYXR1cmVcIixcbiAgVG9rZW5Ob3RBY3RpdmVZZXQ6IFwidG9rZW4tbm90LWFjdGl2ZS15ZXRcIixcbiAgVG9rZW5JYXRJblRoZUZ1dHVyZTogXCJ0b2tlbi1pYXQtaW4tdGhlLWZ1dHVyZVwiLFxuICBUb2tlblZlcmlmaWNhdGlvbkZhaWxlZDogXCJ0b2tlbi12ZXJpZmljYXRpb24tZmFpbGVkXCIsXG4gIEludmFsaWRTZWNyZXRLZXk6IFwic2VjcmV0LWtleS1pbnZhbGlkXCIsXG4gIExvY2FsSldLTWlzc2luZzogXCJqd2stbG9jYWwtbWlzc2luZ1wiLFxuICBSZW1vdGVKV0tGYWlsZWRUb0xvYWQ6IFwiandrLXJlbW90ZS1mYWlsZWQtdG8tbG9hZFwiLFxuICBSZW1vdGVKV0tJbnZhbGlkOiBcImp3ay1yZW1vdGUtaW52YWxpZFwiLFxuICBSZW1vdGVKV0tNaXNzaW5nOiBcImp3ay1yZW1vdGUtbWlzc2luZ1wiLFxuICBKV0tGYWlsZWRUb1Jlc29sdmU6IFwiandrLWZhaWxlZC10by1yZXNvbHZlXCIsXG4gIEpXS0tpZE1pc21hdGNoOiBcImp3ay1raWQtbWlzbWF0Y2hcIlxufTtcbnZhciBUb2tlblZlcmlmaWNhdGlvbkVycm9yQWN0aW9uID0ge1xuICBDb250YWN0U3VwcG9ydDogXCJDb250YWN0IHN1cHBvcnRAY2xlcmsuY29tXCIsXG4gIEVuc3VyZUNsZXJrSldUOiBcIk1ha2Ugc3VyZSB0aGF0IHRoaXMgaXMgYSB2YWxpZCBDbGVyayBnZW5lcmF0ZSBKV1QuXCIsXG4gIFNldENsZXJrSldUS2V5OiBcIlNldCB0aGUgQ0xFUktfSldUX0tFWSBlbnZpcm9ubWVudCB2YXJpYWJsZS5cIixcbiAgU2V0Q2xlcmtTZWNyZXRLZXk6IFwiU2V0IHRoZSBDTEVSS19TRUNSRVRfS0VZIGVudmlyb25tZW50IHZhcmlhYmxlLlwiLFxuICBFbnN1cmVDbG9ja1N5bmM6IFwiTWFrZSBzdXJlIHlvdXIgc3lzdGVtIGNsb2NrIGlzIGluIHN5bmMgKGUuZy4gdHVybiBvZmYgYW5kIG9uIGF1dG9tYXRpYyB0aW1lIHN5bmNocm9uaXphdGlvbikuXCJcbn07XG52YXIgVG9rZW5WZXJpZmljYXRpb25FcnJvciA9IGNsYXNzIF9Ub2tlblZlcmlmaWNhdGlvbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3Rvcih7XG4gICAgYWN0aW9uLFxuICAgIG1lc3NhZ2UsXG4gICAgcmVhc29uXG4gIH0pIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgX1Rva2VuVmVyaWZpY2F0aW9uRXJyb3IucHJvdG90eXBlKTtcbiAgICB0aGlzLnJlYXNvbiA9IHJlYXNvbjtcbiAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIHRoaXMuYWN0aW9uID0gYWN0aW9uO1xuICB9XG4gIGdldEZ1bGxNZXNzYWdlKCkge1xuICAgIHJldHVybiBgJHtbdGhpcy5tZXNzYWdlLCB0aGlzLmFjdGlvbl0uZmlsdGVyKChtKSA9PiBtKS5qb2luKFwiIFwiKX0gKHJlYXNvbj0ke3RoaXMucmVhc29ufSwgdG9rZW4tY2Fycmllcj0ke3RoaXMudG9rZW5DYXJyaWVyfSlgO1xuICB9XG59O1xudmFyIFNpZ25KV1RFcnJvciA9IGNsYXNzIGV4dGVuZHMgRXJyb3Ige1xufTtcblxuZXhwb3J0IHtcbiAgVG9rZW5WZXJpZmljYXRpb25FcnJvckNvZGUsXG4gIFRva2VuVmVyaWZpY2F0aW9uRXJyb3JSZWFzb24sXG4gIFRva2VuVmVyaWZpY2F0aW9uRXJyb3JBY3Rpb24sXG4gIFRva2VuVmVyaWZpY2F0aW9uRXJyb3IsXG4gIFNpZ25KV1RFcnJvclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTVKUzJWWUxVLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\n"));

/***/ }),

/***/ "./node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertHeaderAlgorithm: () => (/* binding */ assertHeaderAlgorithm),\n/* harmony export */   assertHeaderType: () => (/* binding */ assertHeaderType),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   decodeJwt: () => (/* binding */ decodeJwt),\n/* harmony export */   getCryptoAlgorithm: () => (/* binding */ getCryptoAlgorithm),\n/* harmony export */   hasValidSignature: () => (/* binding */ hasValidSignature),\n/* harmony export */   importKey: () => (/* binding */ importKey),\n/* harmony export */   runtime: () => (/* binding */ runtime),\n/* harmony export */   verifyJwt: () => (/* binding */ verifyJwt)\n/* harmony export */ });\n/* harmony import */ var _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-5JS2VYLU.mjs */ \"./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\");\n/* harmony import */ var _crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #crypto */ \"./node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs\");\n/* harmony import */ var _clerk_shared_isomorphicAtob__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/isomorphicAtob */ \"./node_modules/@clerk/shared/dist/isomorphicAtob.mjs\");\n\n\n// src/runtime.ts\n\nvar globalFetch = fetch.bind(globalThis);\nvar runtime = {\n  crypto: _crypto__WEBPACK_IMPORTED_MODULE_1__.webcrypto,\n  get fetch() {\n    return  false ? 0 : globalFetch;\n  },\n  AbortController: globalThis.AbortController,\n  Blob: globalThis.Blob,\n  FormData: globalThis.FormData,\n  Headers: globalThis.Headers,\n  Request: globalThis.Request,\n  Response: globalThis.Response\n};\n\n// src/util/rfc4648.ts\nvar base64url = {\n  parse(string, opts) {\n    return parse(string, base64UrlEncoding, opts);\n  },\n  stringify(data, opts) {\n    return stringify(data, base64UrlEncoding, opts);\n  }\n};\nvar base64UrlEncoding = {\n  chars: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n  bits: 6\n};\nfunction parse(string, encoding, opts = {}) {\n  if (!encoding.codes) {\n    encoding.codes = {};\n    for (let i = 0; i < encoding.chars.length; ++i) {\n      encoding.codes[encoding.chars[i]] = i;\n    }\n  }\n  if (!opts.loose && string.length * encoding.bits & 7) {\n    throw new SyntaxError(\"Invalid padding\");\n  }\n  let end = string.length;\n  while (string[end - 1] === \"=\") {\n    --end;\n    if (!opts.loose && !((string.length - end) * encoding.bits & 7)) {\n      throw new SyntaxError(\"Invalid padding\");\n    }\n  }\n  const out = new (opts.out ?? Uint8Array)(end * encoding.bits / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = encoding.codes[string[i]];\n    if (value === void 0) {\n      throw new SyntaxError(\"Invalid character \" + string[i]);\n    }\n    buffer = buffer << encoding.bits | value;\n    bits += encoding.bits;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= encoding.bits || 255 & buffer << 8 - bits) {\n    throw new SyntaxError(\"Unexpected end of data\");\n  }\n  return out;\n}\nfunction stringify(data, encoding, opts = {}) {\n  const { pad = true } = opts;\n  const mask = (1 << encoding.bits) - 1;\n  let out = \"\";\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | 255 & data[i];\n    bits += 8;\n    while (bits > encoding.bits) {\n      bits -= encoding.bits;\n      out += encoding.chars[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += encoding.chars[mask & buffer << encoding.bits - bits];\n  }\n  if (pad) {\n    while (out.length * encoding.bits & 7) {\n      out += \"=\";\n    }\n  }\n  return out;\n}\n\n// src/jwt/algorithms.ts\nvar algToHash = {\n  RS256: \"SHA-256\",\n  RS384: \"SHA-384\",\n  RS512: \"SHA-512\"\n};\nvar RSA_ALGORITHM_NAME = \"RSASSA-PKCS1-v1_5\";\nvar jwksAlgToCryptoAlg = {\n  RS256: RSA_ALGORITHM_NAME,\n  RS384: RSA_ALGORITHM_NAME,\n  RS512: RSA_ALGORITHM_NAME\n};\nvar algs = Object.keys(algToHash);\nfunction getCryptoAlgorithm(algorithmName) {\n  const hash = algToHash[algorithmName];\n  const name = jwksAlgToCryptoAlg[algorithmName];\n  if (!hash || !name) {\n    throw new Error(`Unsupported algorithm ${algorithmName}, expected one of ${algs.join(\",\")}.`);\n  }\n  return {\n    hash: { name: algToHash[algorithmName] },\n    name: jwksAlgToCryptoAlg[algorithmName]\n  };\n}\n\n// src/jwt/assertions.ts\nvar isArrayString = (s) => {\n  return Array.isArray(s) && s.length > 0 && s.every((a) => typeof a === \"string\");\n};\nvar assertAudienceClaim = (aud, audience) => {\n  const audienceList = [audience].flat().filter((a) => !!a);\n  const audList = [aud].flat().filter((a) => !!a);\n  const shouldVerifyAudience = audienceList.length > 0 && audList.length > 0;\n  if (!shouldVerifyAudience) {\n    return;\n  }\n  if (typeof aud === \"string\") {\n    if (!audienceList.includes(aud)) {\n      throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n        action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n        reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n        message: `Invalid JWT audience claim (aud) ${JSON.stringify(aud)}. Is not included in \"${JSON.stringify(\n          audienceList\n        )}\".`\n      });\n    }\n  } else if (isArrayString(aud)) {\n    if (!aud.some((a) => audienceList.includes(a))) {\n      throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n        action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n        reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n        message: `Invalid JWT audience claim array (aud) ${JSON.stringify(aud)}. Is not included in \"${JSON.stringify(\n          audienceList\n        )}\".`\n      });\n    }\n  }\n};\nvar assertHeaderType = (typ) => {\n  if (typeof typ === \"undefined\") {\n    return;\n  }\n  if (typ !== \"JWT\") {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalid,\n      message: `Invalid JWT type ${JSON.stringify(typ)}. Expected \"JWT\".`\n    });\n  }\n};\nvar assertHeaderAlgorithm = (alg) => {\n  if (!algs.includes(alg)) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidAlgorithm,\n      message: `Invalid JWT algorithm ${JSON.stringify(alg)}. Supported: ${algs}.`\n    });\n  }\n};\nvar assertSubClaim = (sub) => {\n  if (typeof sub !== \"string\") {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Subject claim (sub) is required and must be a string. Received ${JSON.stringify(sub)}.`\n    });\n  }\n};\nvar assertAuthorizedPartiesClaim = (azp, authorizedParties) => {\n  if (!azp || !authorizedParties || authorizedParties.length === 0) {\n    return;\n  }\n  if (!authorizedParties.includes(azp)) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidAuthorizedParties,\n      message: `Invalid JWT Authorized party claim (azp) ${JSON.stringify(azp)}. Expected \"${authorizedParties}\".`\n    });\n  }\n};\nvar assertExpirationClaim = (exp, clockSkewInMs) => {\n  if (typeof exp !== \"number\") {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Invalid JWT expiry date claim (exp) ${JSON.stringify(exp)}. Expected number.`\n    });\n  }\n  const currentDate = new Date(Date.now());\n  const expiryDate = /* @__PURE__ */ new Date(0);\n  expiryDate.setUTCSeconds(exp);\n  const expired = expiryDate.getTime() <= currentDate.getTime() - clockSkewInMs;\n  if (expired) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenExpired,\n      message: `JWT is expired. Expiry date: ${expiryDate.toUTCString()}, Current date: ${currentDate.toUTCString()}.`\n    });\n  }\n};\nvar assertActivationClaim = (nbf, clockSkewInMs) => {\n  if (typeof nbf === \"undefined\") {\n    return;\n  }\n  if (typeof nbf !== \"number\") {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Invalid JWT not before date claim (nbf) ${JSON.stringify(nbf)}. Expected number.`\n    });\n  }\n  const currentDate = new Date(Date.now());\n  const notBeforeDate = /* @__PURE__ */ new Date(0);\n  notBeforeDate.setUTCSeconds(nbf);\n  const early = notBeforeDate.getTime() > currentDate.getTime() + clockSkewInMs;\n  if (early) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenNotActiveYet,\n      message: `JWT cannot be used prior to not before date claim (nbf). Not before date: ${notBeforeDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`\n    });\n  }\n};\nvar assertIssuedAtClaim = (iat, clockSkewInMs) => {\n  if (typeof iat === \"undefined\") {\n    return;\n  }\n  if (typeof iat !== \"number\") {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Invalid JWT issued at date claim (iat) ${JSON.stringify(iat)}. Expected number.`\n    });\n  }\n  const currentDate = new Date(Date.now());\n  const issuedAtDate = /* @__PURE__ */ new Date(0);\n  issuedAtDate.setUTCSeconds(iat);\n  const postIssued = issuedAtDate.getTime() > currentDate.getTime() + clockSkewInMs;\n  if (postIssued) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenIatInTheFuture,\n      message: `JWT issued at date claim (iat) is in the future. Issued at date: ${issuedAtDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`\n    });\n  }\n};\n\n// src/jwt/cryptoKeys.ts\n\nfunction pemToBuffer(secret) {\n  const trimmed = secret.replace(/-----BEGIN.*?-----/g, \"\").replace(/-----END.*?-----/g, \"\").replace(/\\s/g, \"\");\n  const decoded = (0,_clerk_shared_isomorphicAtob__WEBPACK_IMPORTED_MODULE_2__.isomorphicAtob)(trimmed);\n  const buffer = new ArrayBuffer(decoded.length);\n  const bufView = new Uint8Array(buffer);\n  for (let i = 0, strLen = decoded.length; i < strLen; i++) {\n    bufView[i] = decoded.charCodeAt(i);\n  }\n  return bufView;\n}\nfunction importKey(key, algorithm, keyUsage) {\n  if (typeof key === \"object\") {\n    return runtime.crypto.subtle.importKey(\"jwk\", key, algorithm, false, [keyUsage]);\n  }\n  const keyData = pemToBuffer(key);\n  const format = keyUsage === \"sign\" ? \"pkcs8\" : \"spki\";\n  return runtime.crypto.subtle.importKey(format, keyData, algorithm, false, [keyUsage]);\n}\n\n// src/jwt/verifyJwt.ts\nvar DEFAULT_CLOCK_SKEW_IN_SECONDS = 5 * 1e3;\nasync function hasValidSignature(jwt, key) {\n  const { header, signature, raw } = jwt;\n  const encoder = new TextEncoder();\n  const data = encoder.encode([raw.header, raw.payload].join(\".\"));\n  const algorithm = getCryptoAlgorithm(header.alg);\n  try {\n    const cryptoKey = await importKey(key, algorithm, \"verify\");\n    const verified = await runtime.crypto.subtle.verify(algorithm.name, cryptoKey, signature, data);\n    return { data: verified };\n  } catch (error) {\n    return {\n      errors: [\n        new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n          reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidSignature,\n          message: error?.message\n        })\n      ]\n    };\n  }\n}\nfunction decodeJwt(token) {\n  const tokenParts = (token || \"\").toString().split(\".\");\n  if (tokenParts.length !== 3) {\n    return {\n      errors: [\n        new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n          reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalid,\n          message: `Invalid JWT form. A JWT consists of three parts separated by dots.`\n        })\n      ]\n    };\n  }\n  const [rawHeader, rawPayload, rawSignature] = tokenParts;\n  const decoder = new TextDecoder();\n  const header = JSON.parse(decoder.decode(base64url.parse(rawHeader, { loose: true })));\n  const payload = JSON.parse(decoder.decode(base64url.parse(rawPayload, { loose: true })));\n  const signature = base64url.parse(rawSignature, { loose: true });\n  const data = {\n    header,\n    payload,\n    signature,\n    raw: {\n      header: rawHeader,\n      payload: rawPayload,\n      signature: rawSignature,\n      text: token\n    }\n  };\n  return { data };\n}\nasync function verifyJwt(token, options) {\n  const { audience, authorizedParties, clockSkewInMs, key } = options;\n  const clockSkew = clockSkewInMs || DEFAULT_CLOCK_SKEW_IN_SECONDS;\n  const { data: decoded, errors } = decodeJwt(token);\n  if (errors) {\n    return { errors };\n  }\n  const { header, payload } = decoded;\n  try {\n    const { typ, alg } = header;\n    assertHeaderType(typ);\n    assertHeaderAlgorithm(alg);\n    const { azp, sub, aud, iat, exp, nbf } = payload;\n    assertSubClaim(sub);\n    assertAudienceClaim([aud], [audience]);\n    assertAuthorizedPartiesClaim(azp, authorizedParties);\n    assertExpirationClaim(exp, clockSkew);\n    assertActivationClaim(nbf, clockSkew);\n    assertIssuedAtClaim(iat, clockSkew);\n  } catch (err) {\n    return { errors: [err] };\n  }\n  const { data: signatureValid, errors: signatureErrors } = await hasValidSignature(decoded, key);\n  if (signatureErrors) {\n    return {\n      errors: [\n        new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n          action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n          reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n          message: `Error verifying JWT signature. ${signatureErrors[0]}`\n        })\n      ]\n    };\n  }\n  if (!signatureValid) {\n    return {\n      errors: [\n        new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n          reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidSignature,\n          message: \"JWT signature is invalid.\"\n        })\n      ]\n    };\n  }\n  return { data: payload };\n}\n\n\n//# sourceMappingURL=chunk-AT3FJU3M.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs\n"));

/***/ }),

/***/ "./node_modules/@clerk/backend/dist/internal.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/internal.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthStatus: () => (/* reexport safe */ _chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthStatus),\n/* harmony export */   constants: () => (/* reexport safe */ _chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__.constants),\n/* harmony export */   createAuthenticateRequest: () => (/* reexport safe */ _chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__.createAuthenticateRequest),\n/* harmony export */   createClerkRequest: () => (/* reexport safe */ _chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__.createClerkRequest),\n/* harmony export */   createRedirect: () => (/* binding */ createRedirect),\n/* harmony export */   debugRequestState: () => (/* reexport safe */ _chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__.debugRequestState),\n/* harmony export */   decorateObjectWithResources: () => (/* binding */ decorateObjectWithResources),\n/* harmony export */   makeAuthObjectSerializable: () => (/* reexport safe */ _chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__.makeAuthObjectSerializable),\n/* harmony export */   reverificationError: () => (/* reexport safe */ _clerk_shared_authorization_errors__WEBPACK_IMPORTED_MODULE_3__.reverificationError),\n/* harmony export */   reverificationErrorResponse: () => (/* reexport safe */ _clerk_shared_authorization_errors__WEBPACK_IMPORTED_MODULE_3__.reverificationErrorResponse),\n/* harmony export */   signedInAuthObject: () => (/* reexport safe */ _chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__.signedInAuthObject),\n/* harmony export */   signedOutAuthObject: () => (/* reexport safe */ _chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__.signedOutAuthObject),\n/* harmony export */   stripPrivateDataFromObject: () => (/* binding */ stripPrivateDataFromObject)\n/* harmony export */ });\n/* harmony import */ var _chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-4WPMFHK6.mjs */ \"./node_modules/@clerk/backend/dist/chunk-4WPMFHK6.mjs\");\n/* harmony import */ var _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-AT3FJU3M.mjs */ \"./node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs\");\n/* harmony import */ var _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-5JS2VYLU.mjs */ \"./node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\");\n/* harmony import */ var _clerk_shared_authorization_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/authorization-errors */ \"./node_modules/@clerk/shared/dist/authorization-errors.mjs\");\n\n\n\n\n// src/createRedirect.ts\nvar buildUrl = (_baseUrl, _targetUrl, _returnBackUrl, _devBrowserToken) => {\n  if (_baseUrl === \"\") {\n    return legacyBuildUrl(_targetUrl.toString(), _returnBackUrl?.toString());\n  }\n  const baseUrl = new URL(_baseUrl);\n  const returnBackUrl = _returnBackUrl ? new URL(_returnBackUrl, baseUrl) : void 0;\n  const res = new URL(_targetUrl, baseUrl);\n  if (returnBackUrl) {\n    res.searchParams.set(\"redirect_url\", returnBackUrl.toString());\n  }\n  if (_devBrowserToken && baseUrl.hostname !== res.hostname) {\n    res.searchParams.set(_chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__.constants.QueryParameters.DevBrowser, _devBrowserToken);\n  }\n  return res.toString();\n};\nvar legacyBuildUrl = (targetUrl, redirectUrl) => {\n  let url;\n  if (!targetUrl.startsWith(\"http\")) {\n    if (!redirectUrl || !redirectUrl.startsWith(\"http\")) {\n      throw new Error(\"destination url or return back url should be an absolute path url!\");\n    }\n    const baseURL = new URL(redirectUrl);\n    url = new URL(targetUrl, baseURL.origin);\n  } else {\n    url = new URL(targetUrl);\n  }\n  if (redirectUrl) {\n    url.searchParams.set(\"redirect_url\", redirectUrl);\n  }\n  return url.toString();\n};\nvar buildAccountsBaseUrl = (frontendApi) => {\n  if (!frontendApi) {\n    return \"\";\n  }\n  const accountsBaseUrl = frontendApi.replace(/clerk\\.accountsstage\\./, \"accountsstage.\").replace(/clerk\\.accounts\\.|clerk\\./, \"accounts.\");\n  return `https://${accountsBaseUrl}`;\n};\nvar createRedirect = (params) => {\n  const { publishableKey, redirectAdapter, signInUrl, signUpUrl, baseUrl } = params;\n  const parsedPublishableKey = (0,_chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__.parsePublishableKey)(publishableKey);\n  const frontendApi = parsedPublishableKey?.frontendApi;\n  const isDevelopment = parsedPublishableKey?.instanceType === \"development\";\n  const accountsBaseUrl = buildAccountsBaseUrl(frontendApi);\n  const redirectToSignUp = ({ returnBackUrl } = {}) => {\n    if (!signUpUrl && !accountsBaseUrl) {\n      _chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throwMissingPublishableKeyError();\n    }\n    const accountsSignUpUrl = `${accountsBaseUrl}/sign-up`;\n    return redirectAdapter(\n      buildUrl(baseUrl, signUpUrl || accountsSignUpUrl, returnBackUrl, isDevelopment ? params.devBrowserToken : null)\n    );\n  };\n  const redirectToSignIn = ({ returnBackUrl } = {}) => {\n    if (!signInUrl && !accountsBaseUrl) {\n      _chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throwMissingPublishableKeyError();\n    }\n    const accountsSignInUrl = `${accountsBaseUrl}/sign-in`;\n    return redirectAdapter(\n      buildUrl(baseUrl, signInUrl || accountsSignInUrl, returnBackUrl, isDevelopment ? params.devBrowserToken : null)\n    );\n  };\n  return { redirectToSignUp, redirectToSignIn };\n};\n\n// src/util/decorateObjectWithResources.ts\nvar decorateObjectWithResources = async (obj, authObj, opts) => {\n  const { loadSession, loadUser, loadOrganization } = opts || {};\n  const { userId, sessionId, orgId } = authObj;\n  const { sessions, users, organizations } = (0,_chunk_4WPMFHK6_mjs__WEBPACK_IMPORTED_MODULE_0__.createBackendApiClient)({ ...opts });\n  const [sessionResp, userResp, organizationResp] = await Promise.all([\n    loadSession && sessionId ? sessions.getSession(sessionId) : Promise.resolve(void 0),\n    loadUser && userId ? users.getUser(userId) : Promise.resolve(void 0),\n    loadOrganization && orgId ? organizations.getOrganization({ organizationId: orgId }) : Promise.resolve(void 0)\n  ]);\n  const resources = stripPrivateDataFromObject({\n    session: sessionResp,\n    user: userResp,\n    organization: organizationResp\n  });\n  return Object.assign(obj, resources);\n};\nfunction stripPrivateDataFromObject(authObject) {\n  const user = authObject.user ? { ...authObject.user } : authObject.user;\n  const organization = authObject.organization ? { ...authObject.organization } : authObject.organization;\n  prunePrivateMetadata(user);\n  prunePrivateMetadata(organization);\n  return { ...authObject, user, organization };\n}\nfunction prunePrivateMetadata(resource) {\n  if (resource) {\n    delete resource[\"privateMetadata\"];\n    delete resource[\"private_metadata\"];\n  }\n  return resource;\n}\n\n// src/internal.ts\n\n\n//# sourceMappingURL=internal.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL2JhY2tlbmQvZGlzdC9pbnRlcm5hbC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFZOEI7QUFDQTtBQUNBOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMERBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQSxVQUFVLGlFQUFpRTtBQUMzRSwrQkFBK0Isd0VBQW1CO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixnQkFBZ0IsSUFBSTtBQUNsRDtBQUNBLE1BQU0sNkRBQVk7QUFDbEI7QUFDQSxpQ0FBaUMsZ0JBQWdCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGdCQUFnQixJQUFJO0FBQ2xEO0FBQ0EsTUFBTSw2REFBWTtBQUNsQjtBQUNBLGlDQUFpQyxnQkFBZ0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7O0FBRUE7QUFDQTtBQUNBLFVBQVUsMENBQTBDO0FBQ3BELFVBQVUsMkJBQTJCO0FBQ3JDLFVBQVUsaUNBQWlDLEVBQUUsMkVBQXNCLEdBQUcsU0FBUztBQUMvRTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0UsdUJBQXVCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHFCQUFxQjtBQUN4RCxtREFBbUQsNkJBQTZCO0FBQ2hGO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNzRztBQWVwRztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvYmFja2VuZC9kaXN0L2ludGVybmFsLm1qcz9lNWQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEF1dGhTdGF0dXMsXG4gIGNvbnN0YW50cyxcbiAgY3JlYXRlQXV0aGVudGljYXRlUmVxdWVzdCxcbiAgY3JlYXRlQmFja2VuZEFwaUNsaWVudCxcbiAgY3JlYXRlQ2xlcmtSZXF1ZXN0LFxuICBkZWJ1Z1JlcXVlc3RTdGF0ZSxcbiAgZXJyb3JUaHJvd2VyLFxuICBtYWtlQXV0aE9iamVjdFNlcmlhbGl6YWJsZSxcbiAgcGFyc2VQdWJsaXNoYWJsZUtleSxcbiAgc2lnbmVkSW5BdXRoT2JqZWN0LFxuICBzaWduZWRPdXRBdXRoT2JqZWN0XG59IGZyb20gXCIuL2NodW5rLTRXUE1GSEs2Lm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1BVDNGSlUzTS5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstNUpTMlZZTFUubWpzXCI7XG5cbi8vIHNyYy9jcmVhdGVSZWRpcmVjdC50c1xudmFyIGJ1aWxkVXJsID0gKF9iYXNlVXJsLCBfdGFyZ2V0VXJsLCBfcmV0dXJuQmFja1VybCwgX2RldkJyb3dzZXJUb2tlbikgPT4ge1xuICBpZiAoX2Jhc2VVcmwgPT09IFwiXCIpIHtcbiAgICByZXR1cm4gbGVnYWN5QnVpbGRVcmwoX3RhcmdldFVybC50b1N0cmluZygpLCBfcmV0dXJuQmFja1VybD8udG9TdHJpbmcoKSk7XG4gIH1cbiAgY29uc3QgYmFzZVVybCA9IG5ldyBVUkwoX2Jhc2VVcmwpO1xuICBjb25zdCByZXR1cm5CYWNrVXJsID0gX3JldHVybkJhY2tVcmwgPyBuZXcgVVJMKF9yZXR1cm5CYWNrVXJsLCBiYXNlVXJsKSA6IHZvaWQgMDtcbiAgY29uc3QgcmVzID0gbmV3IFVSTChfdGFyZ2V0VXJsLCBiYXNlVXJsKTtcbiAgaWYgKHJldHVybkJhY2tVcmwpIHtcbiAgICByZXMuc2VhcmNoUGFyYW1zLnNldChcInJlZGlyZWN0X3VybFwiLCByZXR1cm5CYWNrVXJsLnRvU3RyaW5nKCkpO1xuICB9XG4gIGlmIChfZGV2QnJvd3NlclRva2VuICYmIGJhc2VVcmwuaG9zdG5hbWUgIT09IHJlcy5ob3N0bmFtZSkge1xuICAgIHJlcy5zZWFyY2hQYXJhbXMuc2V0KGNvbnN0YW50cy5RdWVyeVBhcmFtZXRlcnMuRGV2QnJvd3NlciwgX2RldkJyb3dzZXJUb2tlbik7XG4gIH1cbiAgcmV0dXJuIHJlcy50b1N0cmluZygpO1xufTtcbnZhciBsZWdhY3lCdWlsZFVybCA9ICh0YXJnZXRVcmwsIHJlZGlyZWN0VXJsKSA9PiB7XG4gIGxldCB1cmw7XG4gIGlmICghdGFyZ2V0VXJsLnN0YXJ0c1dpdGgoXCJodHRwXCIpKSB7XG4gICAgaWYgKCFyZWRpcmVjdFVybCB8fCAhcmVkaXJlY3RVcmwuc3RhcnRzV2l0aChcImh0dHBcIikpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcImRlc3RpbmF0aW9uIHVybCBvciByZXR1cm4gYmFjayB1cmwgc2hvdWxkIGJlIGFuIGFic29sdXRlIHBhdGggdXJsIVwiKTtcbiAgICB9XG4gICAgY29uc3QgYmFzZVVSTCA9IG5ldyBVUkwocmVkaXJlY3RVcmwpO1xuICAgIHVybCA9IG5ldyBVUkwodGFyZ2V0VXJsLCBiYXNlVVJMLm9yaWdpbik7XG4gIH0gZWxzZSB7XG4gICAgdXJsID0gbmV3IFVSTCh0YXJnZXRVcmwpO1xuICB9XG4gIGlmIChyZWRpcmVjdFVybCkge1xuICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KFwicmVkaXJlY3RfdXJsXCIsIHJlZGlyZWN0VXJsKTtcbiAgfVxuICByZXR1cm4gdXJsLnRvU3RyaW5nKCk7XG59O1xudmFyIGJ1aWxkQWNjb3VudHNCYXNlVXJsID0gKGZyb250ZW5kQXBpKSA9PiB7XG4gIGlmICghZnJvbnRlbmRBcGkpIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuICBjb25zdCBhY2NvdW50c0Jhc2VVcmwgPSBmcm9udGVuZEFwaS5yZXBsYWNlKC9jbGVya1xcLmFjY291bnRzc3RhZ2VcXC4vLCBcImFjY291bnRzc3RhZ2UuXCIpLnJlcGxhY2UoL2NsZXJrXFwuYWNjb3VudHNcXC58Y2xlcmtcXC4vLCBcImFjY291bnRzLlwiKTtcbiAgcmV0dXJuIGBodHRwczovLyR7YWNjb3VudHNCYXNlVXJsfWA7XG59O1xudmFyIGNyZWF0ZVJlZGlyZWN0ID0gKHBhcmFtcykgPT4ge1xuICBjb25zdCB7IHB1Ymxpc2hhYmxlS2V5LCByZWRpcmVjdEFkYXB0ZXIsIHNpZ25JblVybCwgc2lnblVwVXJsLCBiYXNlVXJsIH0gPSBwYXJhbXM7XG4gIGNvbnN0IHBhcnNlZFB1Ymxpc2hhYmxlS2V5ID0gcGFyc2VQdWJsaXNoYWJsZUtleShwdWJsaXNoYWJsZUtleSk7XG4gIGNvbnN0IGZyb250ZW5kQXBpID0gcGFyc2VkUHVibGlzaGFibGVLZXk/LmZyb250ZW5kQXBpO1xuICBjb25zdCBpc0RldmVsb3BtZW50ID0gcGFyc2VkUHVibGlzaGFibGVLZXk/Lmluc3RhbmNlVHlwZSA9PT0gXCJkZXZlbG9wbWVudFwiO1xuICBjb25zdCBhY2NvdW50c0Jhc2VVcmwgPSBidWlsZEFjY291bnRzQmFzZVVybChmcm9udGVuZEFwaSk7XG4gIGNvbnN0IHJlZGlyZWN0VG9TaWduVXAgPSAoeyByZXR1cm5CYWNrVXJsIH0gPSB7fSkgPT4ge1xuICAgIGlmICghc2lnblVwVXJsICYmICFhY2NvdW50c0Jhc2VVcmwpIHtcbiAgICAgIGVycm9yVGhyb3dlci50aHJvd01pc3NpbmdQdWJsaXNoYWJsZUtleUVycm9yKCk7XG4gICAgfVxuICAgIGNvbnN0IGFjY291bnRzU2lnblVwVXJsID0gYCR7YWNjb3VudHNCYXNlVXJsfS9zaWduLXVwYDtcbiAgICByZXR1cm4gcmVkaXJlY3RBZGFwdGVyKFxuICAgICAgYnVpbGRVcmwoYmFzZVVybCwgc2lnblVwVXJsIHx8IGFjY291bnRzU2lnblVwVXJsLCByZXR1cm5CYWNrVXJsLCBpc0RldmVsb3BtZW50ID8gcGFyYW1zLmRldkJyb3dzZXJUb2tlbiA6IG51bGwpXG4gICAgKTtcbiAgfTtcbiAgY29uc3QgcmVkaXJlY3RUb1NpZ25JbiA9ICh7IHJldHVybkJhY2tVcmwgfSA9IHt9KSA9PiB7XG4gICAgaWYgKCFzaWduSW5VcmwgJiYgIWFjY291bnRzQmFzZVVybCkge1xuICAgICAgZXJyb3JUaHJvd2VyLnRocm93TWlzc2luZ1B1Ymxpc2hhYmxlS2V5RXJyb3IoKTtcbiAgICB9XG4gICAgY29uc3QgYWNjb3VudHNTaWduSW5VcmwgPSBgJHthY2NvdW50c0Jhc2VVcmx9L3NpZ24taW5gO1xuICAgIHJldHVybiByZWRpcmVjdEFkYXB0ZXIoXG4gICAgICBidWlsZFVybChiYXNlVXJsLCBzaWduSW5VcmwgfHwgYWNjb3VudHNTaWduSW5VcmwsIHJldHVybkJhY2tVcmwsIGlzRGV2ZWxvcG1lbnQgPyBwYXJhbXMuZGV2QnJvd3NlclRva2VuIDogbnVsbClcbiAgICApO1xuICB9O1xuICByZXR1cm4geyByZWRpcmVjdFRvU2lnblVwLCByZWRpcmVjdFRvU2lnbkluIH07XG59O1xuXG4vLyBzcmMvdXRpbC9kZWNvcmF0ZU9iamVjdFdpdGhSZXNvdXJjZXMudHNcbnZhciBkZWNvcmF0ZU9iamVjdFdpdGhSZXNvdXJjZXMgPSBhc3luYyAob2JqLCBhdXRoT2JqLCBvcHRzKSA9PiB7XG4gIGNvbnN0IHsgbG9hZFNlc3Npb24sIGxvYWRVc2VyLCBsb2FkT3JnYW5pemF0aW9uIH0gPSBvcHRzIHx8IHt9O1xuICBjb25zdCB7IHVzZXJJZCwgc2Vzc2lvbklkLCBvcmdJZCB9ID0gYXV0aE9iajtcbiAgY29uc3QgeyBzZXNzaW9ucywgdXNlcnMsIG9yZ2FuaXphdGlvbnMgfSA9IGNyZWF0ZUJhY2tlbmRBcGlDbGllbnQoeyAuLi5vcHRzIH0pO1xuICBjb25zdCBbc2Vzc2lvblJlc3AsIHVzZXJSZXNwLCBvcmdhbml6YXRpb25SZXNwXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICBsb2FkU2Vzc2lvbiAmJiBzZXNzaW9uSWQgPyBzZXNzaW9ucy5nZXRTZXNzaW9uKHNlc3Npb25JZCkgOiBQcm9taXNlLnJlc29sdmUodm9pZCAwKSxcbiAgICBsb2FkVXNlciAmJiB1c2VySWQgPyB1c2Vycy5nZXRVc2VyKHVzZXJJZCkgOiBQcm9taXNlLnJlc29sdmUodm9pZCAwKSxcbiAgICBsb2FkT3JnYW5pemF0aW9uICYmIG9yZ0lkID8gb3JnYW5pemF0aW9ucy5nZXRPcmdhbml6YXRpb24oeyBvcmdhbml6YXRpb25JZDogb3JnSWQgfSkgOiBQcm9taXNlLnJlc29sdmUodm9pZCAwKVxuICBdKTtcbiAgY29uc3QgcmVzb3VyY2VzID0gc3RyaXBQcml2YXRlRGF0YUZyb21PYmplY3Qoe1xuICAgIHNlc3Npb246IHNlc3Npb25SZXNwLFxuICAgIHVzZXI6IHVzZXJSZXNwLFxuICAgIG9yZ2FuaXphdGlvbjogb3JnYW5pemF0aW9uUmVzcFxuICB9KTtcbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24ob2JqLCByZXNvdXJjZXMpO1xufTtcbmZ1bmN0aW9uIHN0cmlwUHJpdmF0ZURhdGFGcm9tT2JqZWN0KGF1dGhPYmplY3QpIHtcbiAgY29uc3QgdXNlciA9IGF1dGhPYmplY3QudXNlciA/IHsgLi4uYXV0aE9iamVjdC51c2VyIH0gOiBhdXRoT2JqZWN0LnVzZXI7XG4gIGNvbnN0IG9yZ2FuaXphdGlvbiA9IGF1dGhPYmplY3Qub3JnYW5pemF0aW9uID8geyAuLi5hdXRoT2JqZWN0Lm9yZ2FuaXphdGlvbiB9IDogYXV0aE9iamVjdC5vcmdhbml6YXRpb247XG4gIHBydW5lUHJpdmF0ZU1ldGFkYXRhKHVzZXIpO1xuICBwcnVuZVByaXZhdGVNZXRhZGF0YShvcmdhbml6YXRpb24pO1xuICByZXR1cm4geyAuLi5hdXRoT2JqZWN0LCB1c2VyLCBvcmdhbml6YXRpb24gfTtcbn1cbmZ1bmN0aW9uIHBydW5lUHJpdmF0ZU1ldGFkYXRhKHJlc291cmNlKSB7XG4gIGlmIChyZXNvdXJjZSkge1xuICAgIGRlbGV0ZSByZXNvdXJjZVtcInByaXZhdGVNZXRhZGF0YVwiXTtcbiAgICBkZWxldGUgcmVzb3VyY2VbXCJwcml2YXRlX21ldGFkYXRhXCJdO1xuICB9XG4gIHJldHVybiByZXNvdXJjZTtcbn1cblxuLy8gc3JjL2ludGVybmFsLnRzXG5pbXBvcnQgeyByZXZlcmlmaWNhdGlvbkVycm9yLCByZXZlcmlmaWNhdGlvbkVycm9yUmVzcG9uc2UgfSBmcm9tIFwiQGNsZXJrL3NoYXJlZC9hdXRob3JpemF0aW9uLWVycm9yc1wiO1xuZXhwb3J0IHtcbiAgQXV0aFN0YXR1cyxcbiAgY29uc3RhbnRzLFxuICBjcmVhdGVBdXRoZW50aWNhdGVSZXF1ZXN0LFxuICBjcmVhdGVDbGVya1JlcXVlc3QsXG4gIGNyZWF0ZVJlZGlyZWN0LFxuICBkZWJ1Z1JlcXVlc3RTdGF0ZSxcbiAgZGVjb3JhdGVPYmplY3RXaXRoUmVzb3VyY2VzLFxuICBtYWtlQXV0aE9iamVjdFNlcmlhbGl6YWJsZSxcbiAgcmV2ZXJpZmljYXRpb25FcnJvcixcbiAgcmV2ZXJpZmljYXRpb25FcnJvclJlc3BvbnNlLFxuICBzaWduZWRJbkF1dGhPYmplY3QsXG4gIHNpZ25lZE91dEF1dGhPYmplY3QsXG4gIHN0cmlwUHJpdmF0ZURhdGFGcm9tT2JqZWN0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJuYWwubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@clerk/backend/dist/internal.mjs\n"));

/***/ }),

/***/ "./node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   webcrypto: () => (/* binding */ webcrypto)\n/* harmony export */ });\nconst webcrypto = crypto;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL2JhY2tlbmQvZGlzdC9ydW50aW1lL2Jyb3dzZXIvY3J5cHRvLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvcnVudGltZS9icm93c2VyL2NyeXB0by5tanM/ZDdjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgd2ViY3J5cHRvID0gY3J5cHRvO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs\n"));

/***/ }),

/***/ "./node_modules/@clerk/shared/dist/authorization-errors.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/authorization-errors.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isReverificationHint: () => (/* reexport safe */ _chunk_5C3LHKBE_mjs__WEBPACK_IMPORTED_MODULE_0__.isReverificationHint),\n/* harmony export */   reverificationError: () => (/* reexport safe */ _chunk_5C3LHKBE_mjs__WEBPACK_IMPORTED_MODULE_0__.reverificationError),\n/* harmony export */   reverificationErrorResponse: () => (/* reexport safe */ _chunk_5C3LHKBE_mjs__WEBPACK_IMPORTED_MODULE_0__.reverificationErrorResponse)\n/* harmony export */ });\n/* harmony import */ var _chunk_5C3LHKBE_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-5C3LHKBE.mjs */ \"./node_modules/@clerk/shared/dist/chunk-5C3LHKBE.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=authorization-errors.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2F1dGhvcml6YXRpb24tZXJyb3JzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUk4QjtBQUNBO0FBSzVCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9hdXRob3JpemF0aW9uLWVycm9ycy5tanM/MmRhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc1JldmVyaWZpY2F0aW9uSGludCxcbiAgcmV2ZXJpZmljYXRpb25FcnJvcixcbiAgcmV2ZXJpZmljYXRpb25FcnJvclJlc3BvbnNlXG59IGZyb20gXCIuL2NodW5rLTVDM0xIS0JFLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay03RUxUNzU1US5tanNcIjtcbmV4cG9ydCB7XG4gIGlzUmV2ZXJpZmljYXRpb25IaW50LFxuICByZXZlcmlmaWNhdGlvbkVycm9yLFxuICByZXZlcmlmaWNhdGlvbkVycm9yUmVzcG9uc2Vcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRob3JpemF0aW9uLWVycm9ycy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@clerk/shared/dist/authorization-errors.mjs\n"));

/***/ }),

/***/ "./node_modules/@clerk/shared/dist/callWithRetry.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/callWithRetry.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callWithRetry: () => (/* reexport safe */ _chunk_4PW5MDZA_mjs__WEBPACK_IMPORTED_MODULE_0__.callWithRetry)\n/* harmony export */ });\n/* harmony import */ var _chunk_4PW5MDZA_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-4PW5MDZA.mjs */ \"./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=callWithRetry.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NhbGxXaXRoUmV0cnkubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUU4QjtBQUNBO0FBRzVCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jYWxsV2l0aFJldHJ5Lm1qcz9iNTc5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGNhbGxXaXRoUmV0cnlcbn0gZnJvbSBcIi4vY2h1bmstNFBXNU1EWkEubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgY2FsbFdpdGhSZXRyeVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNhbGxXaXRoUmV0cnkubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@clerk/shared/dist/callWithRetry.mjs\n"));

/***/ }),

/***/ "./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callWithRetry: () => (/* binding */ callWithRetry)\n/* harmony export */ });\n// src/callWithRetry.ts\nfunction wait(ms) {\n  return new Promise((res) => setTimeout(res, ms));\n}\nvar MAX_NUMBER_OF_RETRIES = 5;\nasync function callWithRetry(fn, attempt = 1, maxAttempts = MAX_NUMBER_OF_RETRIES) {\n  try {\n    return await fn();\n  } catch (e) {\n    if (attempt >= maxAttempts) {\n      throw e;\n    }\n    await wait(2 ** attempt * 100);\n    return callWithRetry(fn, attempt + 1, maxAttempts);\n  }\n}\n\n\n//# sourceMappingURL=chunk-4PW5MDZA.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLTRQVzVNRFpBLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNFBXNU1EWkEubWpzPzJhMzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NhbGxXaXRoUmV0cnkudHNcbmZ1bmN0aW9uIHdhaXQobXMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMpID0+IHNldFRpbWVvdXQocmVzLCBtcykpO1xufVxudmFyIE1BWF9OVU1CRVJfT0ZfUkVUUklFUyA9IDU7XG5hc3luYyBmdW5jdGlvbiBjYWxsV2l0aFJldHJ5KGZuLCBhdHRlbXB0ID0gMSwgbWF4QXR0ZW1wdHMgPSBNQVhfTlVNQkVSX09GX1JFVFJJRVMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gYXdhaXQgZm4oKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChhdHRlbXB0ID49IG1heEF0dGVtcHRzKSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgICBhd2FpdCB3YWl0KDIgKiogYXR0ZW1wdCAqIDEwMCk7XG4gICAgcmV0dXJuIGNhbGxXaXRoUmV0cnkoZm4sIGF0dGVtcHQgKyAxLCBtYXhBdHRlbXB0cyk7XG4gIH1cbn1cblxuZXhwb3J0IHtcbiAgY2FsbFdpdGhSZXRyeVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTRQVzVNRFpBLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs\n"));

/***/ }),

/***/ "./node_modules/@clerk/shared/dist/chunk-JJHTUJGL.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/chunk-JJHTUJGL.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   pathToRegexp: () => (/* binding */ pathToRegexp)\n/* harmony export */ });\n// src/compiled/path-to-regexp/index.js\nfunction _(r) {\n  for (var n = [], e = 0; e < r.length; ) {\n    var a = r[e];\n    if (a === \"*\" || a === \"+\" || a === \"?\") {\n      n.push({\n        type: \"MODIFIER\",\n        index: e,\n        value: r[e++]\n      });\n      continue;\n    }\n    if (a === \"\\\\\") {\n      n.push({\n        type: \"ESCAPED_CHAR\",\n        index: e++,\n        value: r[e++]\n      });\n      continue;\n    }\n    if (a === \"{\") {\n      n.push({\n        type: \"OPEN\",\n        index: e,\n        value: r[e++]\n      });\n      continue;\n    }\n    if (a === \"}\") {\n      n.push({\n        type: \"CLOSE\",\n        index: e,\n        value: r[e++]\n      });\n      continue;\n    }\n    if (a === \":\") {\n      for (var u = \"\", t = e + 1; t < r.length; ) {\n        var c = r.charCodeAt(t);\n        if (c >= 48 && c <= 57 || c >= 65 && c <= 90 || c >= 97 && c <= 122 || c === 95) {\n          u += r[t++];\n          continue;\n        }\n        break;\n      }\n      if (!u) throw new TypeError(\"Missing parameter name at \".concat(e));\n      n.push({\n        type: \"NAME\",\n        index: e,\n        value: u\n      }), e = t;\n      continue;\n    }\n    if (a === \"(\") {\n      var o = 1, m = \"\", t = e + 1;\n      if (r[t] === \"?\") throw new TypeError('Pattern cannot start with \"?\" at '.concat(t));\n      for (; t < r.length; ) {\n        if (r[t] === \"\\\\\") {\n          m += r[t++] + r[t++];\n          continue;\n        }\n        if (r[t] === \")\") {\n          if (o--, o === 0) {\n            t++;\n            break;\n          }\n        } else if (r[t] === \"(\" && (o++, r[t + 1] !== \"?\"))\n          throw new TypeError(\"Capturing groups are not allowed at \".concat(t));\n        m += r[t++];\n      }\n      if (o) throw new TypeError(\"Unbalanced pattern at \".concat(e));\n      if (!m) throw new TypeError(\"Missing pattern at \".concat(e));\n      n.push({\n        type: \"PATTERN\",\n        index: e,\n        value: m\n      }), e = t;\n      continue;\n    }\n    n.push({\n      type: \"CHAR\",\n      index: e,\n      value: r[e++]\n    });\n  }\n  return n.push({\n    type: \"END\",\n    index: e,\n    value: \"\"\n  }), n;\n}\nfunction F(r, n) {\n  n === void 0 && (n = {});\n  for (var e = _(r), a = n.prefixes, u = a === void 0 ? \"./\" : a, t = n.delimiter, c = t === void 0 ? \"/#?\" : t, o = [], m = 0, h = 0, p = \"\", f = function(l) {\n    if (h < e.length && e[h].type === l) return e[h++].value;\n  }, w = function(l) {\n    var v = f(l);\n    if (v !== void 0) return v;\n    var E = e[h], N = E.type, S = E.index;\n    throw new TypeError(\"Unexpected \".concat(N, \" at \").concat(S, \", expected \").concat(l));\n  }, d = function() {\n    for (var l = \"\", v; v = f(\"CHAR\") || f(\"ESCAPED_CHAR\"); ) l += v;\n    return l;\n  }, M = function(l) {\n    for (var v = 0, E = c; v < E.length; v++) {\n      var N = E[v];\n      if (l.indexOf(N) > -1) return true;\n    }\n    return false;\n  }, A = function(l) {\n    var v = o[o.length - 1], E = l || (v && typeof v == \"string\" ? v : \"\");\n    if (v && !E)\n      throw new TypeError('Must have text between two parameters, missing text after \"'.concat(v.name, '\"'));\n    return !E || M(E) ? \"[^\".concat(s(c), \"]+?\") : \"(?:(?!\".concat(s(E), \")[^\").concat(s(c), \"])+?\");\n  }; h < e.length; ) {\n    var T = f(\"CHAR\"), x = f(\"NAME\"), C = f(\"PATTERN\");\n    if (x || C) {\n      var g = T || \"\";\n      u.indexOf(g) === -1 && (p += g, g = \"\"), p && (o.push(p), p = \"\"), o.push({\n        name: x || m++,\n        prefix: g,\n        suffix: \"\",\n        pattern: C || A(g),\n        modifier: f(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n    var i = T || f(\"ESCAPED_CHAR\");\n    if (i) {\n      p += i;\n      continue;\n    }\n    p && (o.push(p), p = \"\");\n    var R = f(\"OPEN\");\n    if (R) {\n      var g = d(), y = f(\"NAME\") || \"\", O = f(\"PATTERN\") || \"\", b = d();\n      w(\"CLOSE\"), o.push({\n        name: y || (O ? m++ : \"\"),\n        pattern: y && !O ? A(g) : O,\n        prefix: g,\n        suffix: b,\n        modifier: f(\"MODIFIER\") || \"\"\n      });\n      continue;\n    }\n    w(\"END\");\n  }\n  return o;\n}\nfunction H(r, n) {\n  var e = [], a = P(r, e, n);\n  return I(a, e, n);\n}\nfunction I(r, n, e) {\n  e === void 0 && (e = {});\n  var a = e.decode, u = a === void 0 ? function(t) {\n    return t;\n  } : a;\n  return function(t) {\n    var c = r.exec(t);\n    if (!c) return false;\n    for (var o = c[0], m = c.index, h = /* @__PURE__ */ Object.create(null), p = function(w) {\n      if (c[w] === void 0) return \"continue\";\n      var d = n[w - 1];\n      d.modifier === \"*\" || d.modifier === \"+\" ? h[d.name] = c[w].split(d.prefix + d.suffix).map(function(M) {\n        return u(M, d);\n      }) : h[d.name] = u(c[w], d);\n    }, f = 1; f < c.length; f++)\n      p(f);\n    return {\n      path: o,\n      index: m,\n      params: h\n    };\n  };\n}\nfunction s(r) {\n  return r.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\nfunction D(r) {\n  return r && r.sensitive ? \"\" : \"i\";\n}\nfunction $(r, n) {\n  if (!n) return r;\n  for (var e = /\\((?:\\?<(.*?)>)?(?!\\?)/g, a = 0, u = e.exec(r.source); u; )\n    n.push({\n      name: u[1] || a++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\"\n    }), u = e.exec(r.source);\n  return r;\n}\nfunction W(r, n, e) {\n  var a = r.map(function(u) {\n    return P(u, n, e).source;\n  });\n  return new RegExp(\"(?:\".concat(a.join(\"|\"), \")\"), D(e));\n}\nfunction L(r, n, e) {\n  return U(F(r, e), n, e);\n}\nfunction U(r, n, e) {\n  e === void 0 && (e = {});\n  for (var a = e.strict, u = a === void 0 ? false : a, t = e.start, c = t === void 0 ? true : t, o = e.end, m = o === void 0 ? true : o, h = e.encode, p = h === void 0 ? function(v) {\n    return v;\n  } : h, f = e.delimiter, w = f === void 0 ? \"/#?\" : f, d = e.endsWith, M = d === void 0 ? \"\" : d, A = \"[\".concat(s(M), \"]|$\"), T = \"[\".concat(s(w), \"]\"), x = c ? \"^\" : \"\", C = 0, g = r; C < g.length; C++) {\n    var i = g[C];\n    if (typeof i == \"string\") x += s(p(i));\n    else {\n      var R = s(p(i.prefix)), y = s(p(i.suffix));\n      if (i.pattern)\n        if (n && n.push(i), R || y)\n          if (i.modifier === \"+\" || i.modifier === \"*\") {\n            var O = i.modifier === \"*\" ? \"?\" : \"\";\n            x += \"(?:\".concat(R, \"((?:\").concat(i.pattern, \")(?:\").concat(y).concat(R, \"(?:\").concat(i.pattern, \"))*)\").concat(y, \")\").concat(O);\n          } else x += \"(?:\".concat(R, \"(\").concat(i.pattern, \")\").concat(y, \")\").concat(i.modifier);\n        else {\n          if (i.modifier === \"+\" || i.modifier === \"*\")\n            throw new TypeError('Can not repeat \"'.concat(i.name, '\" without a prefix and suffix'));\n          x += \"(\".concat(i.pattern, \")\").concat(i.modifier);\n        }\n      else x += \"(?:\".concat(R).concat(y, \")\").concat(i.modifier);\n    }\n  }\n  if (m) u || (x += \"\".concat(T, \"?\")), x += e.endsWith ? \"(?=\".concat(A, \")\") : \"$\";\n  else {\n    var b = r[r.length - 1], l = typeof b == \"string\" ? T.indexOf(b[b.length - 1]) > -1 : b === void 0;\n    u || (x += \"(?:\".concat(T, \"(?=\").concat(A, \"))?\")), l || (x += \"(?=\".concat(T, \"|\").concat(A, \")\"));\n  }\n  return new RegExp(x, D(e));\n}\nfunction P(r, n, e) {\n  return r instanceof RegExp ? $(r, n) : Array.isArray(r) ? W(r, n, e) : L(r, n, e);\n}\n\n// src/pathToRegexp.ts\nvar pathToRegexp = (path) => {\n  try {\n    return P(path);\n  } catch (e) {\n    throw new Error(\n      `Invalid path: ${path}.\nConsult the documentation of path-to-regexp here: https://github.com/pillarjs/path-to-regexp/tree/6.x\n${e.message}`\n    );\n  }\n};\nfunction match(str, options) {\n  try {\n    return H(str, options);\n  } catch (e) {\n    throw new Error(\n      `Invalid path and options: Consult the documentation of path-to-regexp here: https://github.com/pillarjs/path-to-regexp/tree/6.x\n${e.message}`\n    );\n  }\n}\n\n\n//# sourceMappingURL=chunk-JJHTUJGL.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@clerk/shared/dist/chunk-JJHTUJGL.mjs\n"));

/***/ }),

/***/ "./node_modules/@clerk/shared/dist/isomorphicAtob.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/isomorphicAtob.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicAtob: () => (/* reexport safe */ _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)\n/* harmony export */ });\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"./node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=isomorphicAtob.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2lzb21vcnBoaWNBdG9iLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFFOEI7QUFDQTtBQUc1QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvaXNvbW9ycGhpY0F0b2IubWpzPzA5MGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgaXNvbW9ycGhpY0F0b2Jcbn0gZnJvbSBcIi4vY2h1bmstVEVUR1RFSTIubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgaXNvbW9ycGhpY0F0b2Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc29tb3JwaGljQXRvYi5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@clerk/shared/dist/isomorphicAtob.mjs\n"));

/***/ }),

/***/ "./node_modules/@clerk/shared/dist/pathToRegexp.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/pathToRegexp.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   match: () => (/* reexport safe */ _chunk_JJHTUJGL_mjs__WEBPACK_IMPORTED_MODULE_0__.match),\n/* harmony export */   pathToRegexp: () => (/* reexport safe */ _chunk_JJHTUJGL_mjs__WEBPACK_IMPORTED_MODULE_0__.pathToRegexp)\n/* harmony export */ });\n/* harmony import */ var _chunk_JJHTUJGL_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-JJHTUJGL.mjs */ \"./node_modules/@clerk/shared/dist/chunk-JJHTUJGL.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n//# sourceMappingURL=pathToRegexp.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L3BhdGhUb1JlZ2V4cC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUc4QjtBQUNBO0FBSTVCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9wYXRoVG9SZWdleHAubWpzPzZhMDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgbWF0Y2gsXG4gIHBhdGhUb1JlZ2V4cFxufSBmcm9tIFwiLi9jaHVuay1KSkhUVUpHTC5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstN0VMVDc1NVEubWpzXCI7XG5leHBvcnQge1xuICBtYXRjaCxcbiAgcGF0aFRvUmVnZXhwXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGF0aFRvUmVnZXhwLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@clerk/shared/dist/pathToRegexp.mjs\n"));

/***/ }),

/***/ "./node_modules/@clerk/shared/dist/url.mjs":
/*!*************************************************!*\
  !*** ./node_modules/@clerk/shared/dist/url.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClerkPrefix: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.addClerkPrefix),\n/* harmony export */   cleanDoubleSlashes: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.cleanDoubleSlashes),\n/* harmony export */   getClerkJsMajorVersionOrTag: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.getClerkJsMajorVersionOrTag),\n/* harmony export */   getScriptUrl: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.getScriptUrl),\n/* harmony export */   hasLeadingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.hasLeadingSlash),\n/* harmony export */   hasTrailingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.hasTrailingSlash),\n/* harmony export */   isAbsoluteUrl: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbsoluteUrl),\n/* harmony export */   isCurrentDevAccountPortalOrigin: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.isCurrentDevAccountPortalOrigin),\n/* harmony export */   isLegacyDevAccountPortalOrigin: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.isLegacyDevAccountPortalOrigin),\n/* harmony export */   isNonEmptyURL: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.isNonEmptyURL),\n/* harmony export */   joinURL: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.joinURL),\n/* harmony export */   parseSearchParams: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.parseSearchParams),\n/* harmony export */   stripScheme: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.stripScheme),\n/* harmony export */   withLeadingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withLeadingSlash),\n/* harmony export */   withTrailingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withTrailingSlash),\n/* harmony export */   withoutLeadingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutLeadingSlash),\n/* harmony export */   withoutTrailingSlash: () => (/* reexport safe */ _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__.withoutTrailingSlash)\n/* harmony export */ });\n/* harmony import */ var _chunk_IFTVZ2LQ_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-IFTVZ2LQ.mjs */ \"./node_modules/@clerk/shared/dist/chunk-IFTVZ2LQ.mjs\");\n/* harmony import */ var _chunk_3TMSNP4L_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-3TMSNP4L.mjs */ \"./node_modules/@clerk/shared/dist/chunk-3TMSNP4L.mjs\");\n/* harmony import */ var _chunk_I6MTSTOF_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-I6MTSTOF.mjs */ \"./node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs\");\n/* harmony import */ var _chunk_7ELT755Q_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-7ELT755Q.mjs */ \"./node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs\");\n\n\n\n\n\n//# sourceMappingURL=url.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L3VybC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0I4QjtBQUNBO0FBQ0E7QUFDQTtBQW1CNUI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L3VybC5tanM/NDU0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBhZGRDbGVya1ByZWZpeCxcbiAgY2xlYW5Eb3VibGVTbGFzaGVzLFxuICBnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWcsXG4gIGdldFNjcmlwdFVybCxcbiAgaGFzTGVhZGluZ1NsYXNoLFxuICBoYXNUcmFpbGluZ1NsYXNoLFxuICBpc0Fic29sdXRlVXJsLFxuICBpc0N1cnJlbnREZXZBY2NvdW50UG9ydGFsT3JpZ2luLFxuICBpc0xlZ2FjeURldkFjY291bnRQb3J0YWxPcmlnaW4sXG4gIGlzTm9uRW1wdHlVUkwsXG4gIGpvaW5VUkwsXG4gIHBhcnNlU2VhcmNoUGFyYW1zLFxuICBzdHJpcFNjaGVtZSxcbiAgd2l0aExlYWRpbmdTbGFzaCxcbiAgd2l0aFRyYWlsaW5nU2xhc2gsXG4gIHdpdGhvdXRMZWFkaW5nU2xhc2gsXG4gIHdpdGhvdXRUcmFpbGluZ1NsYXNoXG59IGZyb20gXCIuL2NodW5rLUlGVFZaMkxRLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay0zVE1TTlA0TC5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstSTZNVFNUT0YubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTdFTFQ3NTVRLm1qc1wiO1xuZXhwb3J0IHtcbiAgYWRkQ2xlcmtQcmVmaXgsXG4gIGNsZWFuRG91YmxlU2xhc2hlcyxcbiAgZ2V0Q2xlcmtKc01ham9yVmVyc2lvbk9yVGFnLFxuICBnZXRTY3JpcHRVcmwsXG4gIGhhc0xlYWRpbmdTbGFzaCxcbiAgaGFzVHJhaWxpbmdTbGFzaCxcbiAgaXNBYnNvbHV0ZVVybCxcbiAgaXNDdXJyZW50RGV2QWNjb3VudFBvcnRhbE9yaWdpbixcbiAgaXNMZWdhY3lEZXZBY2NvdW50UG9ydGFsT3JpZ2luLFxuICBpc05vbkVtcHR5VVJMLFxuICBqb2luVVJMLFxuICBwYXJzZVNlYXJjaFBhcmFtcyxcbiAgc3RyaXBTY2hlbWUsXG4gIHdpdGhMZWFkaW5nU2xhc2gsXG4gIHdpdGhUcmFpbGluZ1NsYXNoLFxuICB3aXRob3V0TGVhZGluZ1NsYXNoLFxuICB3aXRob3V0VHJhaWxpbmdTbGFzaFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVybC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@clerk/shared/dist/url.mjs\n"));

/***/ }),

/***/ "./node_modules/dot-case/node_modules/tslib/tslib.es6.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/dot-case/node_modules/tslib/tslib.es6.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __addDisposableResource: () => (/* binding */ __addDisposableResource),\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldIn: () => (/* binding */ __classPrivateFieldIn),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __disposeResources: () => (/* binding */ __disposeResources),\n/* harmony export */   __esDecorate: () => (/* binding */ __esDecorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __propKey: () => (/* binding */ __propKey),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __rewriteRelativeImportExtension: () => (/* binding */ __rewriteRelativeImportExtension),\n/* harmony export */   __runInitializers: () => (/* binding */ __runInitializers),\n/* harmony export */   __setFunctionName: () => (/* binding */ __setFunctionName),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArray: () => (/* binding */ __spreadArray),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nfunction __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nfunction __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nfunction __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nfunction __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nfunction __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nfunction __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nfunction __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nfunction __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nfunction __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nfunction __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nfunction __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nfunction __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nfunction __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nfunction __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nfunction __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nfunction __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nfunction __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dot-case/node_modules/tslib/tslib.es6.mjs\n"));

/***/ }),

/***/ "./node_modules/snake-case/node_modules/tslib/tslib.es6.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/snake-case/node_modules/tslib/tslib.es6.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __addDisposableResource: () => (/* binding */ __addDisposableResource),\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldIn: () => (/* binding */ __classPrivateFieldIn),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __disposeResources: () => (/* binding */ __disposeResources),\n/* harmony export */   __esDecorate: () => (/* binding */ __esDecorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __propKey: () => (/* binding */ __propKey),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __rewriteRelativeImportExtension: () => (/* binding */ __rewriteRelativeImportExtension),\n/* harmony export */   __runInitializers: () => (/* binding */ __runInitializers),\n/* harmony export */   __setFunctionName: () => (/* binding */ __setFunctionName),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArray: () => (/* binding */ __spreadArray),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nfunction __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nfunction __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nfunction __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nfunction __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nfunction __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nfunction __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nfunction __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nfunction __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nfunction __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nfunction __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nfunction __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nfunction __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nfunction __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nfunction __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nfunction __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nfunction __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nfunction __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/snake-case/node_modules/tslib/tslib.es6.mjs\n"));

/***/ })

}]);